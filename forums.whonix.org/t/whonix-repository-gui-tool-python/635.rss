<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Whonix Repository GUI Tool (Python)</title>
    <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635</link>
    <description>
[quote=&quot;troubadour, post:7, topic:631&quot;][quote]Instead, I am still considering something different. Leaving whonixsetup / whonix_repository for CLI users as is. (Patches welcome.) And... Eventually reimplementing whonixsetup for GUI users. Have the GUI version be more usable and feature rich.[/quote]

Agreed on a GUI version, leaving the bash scripts for CLI users untouched.
It&#39;s not your top priority, but since I was on it, I have started with whonix_repository.  
https://github.com/troubadoour/whonix-repository-gui

It&#39;s not complete. At the moment it reads the settings from &quot;/root/.whonix.d/&quot;, displays the GUI accordingly and prints the new user settings.

Can you review and tell if this approach looks sound? (use kdesudo to run the script.)[/quote]</description>
    <language>en</language>
    <lastBuildDate>Sun, 16 Nov 2014 20:16:31 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[troubadour]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="69" data-topic="635">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Do you consider to put whonix-setup-wizard and whonix-repository-wizard into the same package?[</p>
</blockquote>
</aside>
<p>Yes. The package would install both /usr/bin/whonixsetup-wizard and /usr/bin/whonix-repository-wizard, and two distinct Desktop files in /usr/share/applications. All the Python modules would be installed in /usr/lib/python2.7/whonixsetup.</p>
<blockquote>I am wondering if one could want to have only either one installed and if you would be willing to support that use case by providing two packages?</blockquote>
The number of packages is up to you, it's not a big penalty.
<p>In that case we’ll have to make a separate library (/usr/lib/python2.7/whonix-common?) for the translations and guimessage modules, and create a third package for it?</p>
<p>That would be:</p>
<ul>
<li>whonixsetup-wizard</li>
<li>whonix-repository-wizard</li>
<li>whonix-common-modules (or whatever)</li>
</ul>
<p>Then there would be no point having two scripts in /usr/bin each importing a single module from /usr/lib/pyton2.7/. The code could as well be in /usr/bin.</p>
<blockquote>One may not wish to use Whonix's repository, but needs whonixsetup to enable Tor.</blockquote>
whonixsetup-wizard can mimic whonixsetup (bash version), that is running whonix-repository on first boot and create /var/lib/whonix/do_once/whonixsetup.done. After that, whonix-repository can be run on its own, even with a single package.
<p>I do prefer a single package for the ease of maintenance, but it’s probably better to split it, not ending with multi-purpose packages.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/70">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/70</link>
        <pubDate>Sun, 16 Nov 2014 20:16:31 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-70</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Do you consider to put whonix-setup-wizard and whonix-repository-wizard into the same package?</p>
<p>I am wondering if one could want to have only either one installed and if you would be willing to support that use case by providing two packages?</p>
<p>One may not wish to use Whonix’s repository, but needs whonixsetup to enable Tor.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/69">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/69</link>
        <pubDate>Sun, 16 Nov 2014 17:40:30 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-69</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[troubadour]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="67" data-topic="635">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/t/d9b06d/40.png" class="avatar"> troubadour:</div>
<blockquote>
<p>We could rename this thread “Whonix Setup Wizards” or something like that.</p>
</blockquote>
</aside>
<p>Or Whonix Setup GUI Tools.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/68">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/68</link>
        <pubDate>Sun, 16 Nov 2014 17:32:02 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-68</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[troubadour]]></dc:creator>
        <description><![CDATA[
            <p>Pushed wonixsetup-wizards package for review.<br>
</p><aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="32" height="32">
      <a href="https://github.com/troubadoour/whonixsetup-wizards" target="_blank" rel="nofollow noopener">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://avatars1.githubusercontent.com/u/7442918?s=400&amp;v=4" class="thumbnail onebox-avatar" width="420" height="420">

<h3><a href="https://github.com/troubadoour/whonixsetup-wizards" target="_blank" rel="nofollow noopener">troubadoour/whonixsetup-wizards</a></h3>

<p>Contribute to troubadoour/whonixsetup-wizards development by creating an account on GitHub.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<p></p>
<p>At the moment, it contains whonix-repository-wizard only.</p>
<p>Please feel free to rename the package. Anyhow, I will pull from you repository, in order to make it origin.</p>
<p>We could rename this thread “Whonix Setup Wizards” or something like that.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/67">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/67</link>
        <pubDate>Sun, 16 Nov 2014 17:29:41 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-67</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[troubadour]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="65" data-topic="635">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Does that seem like a robust detection method?</p>
</blockquote>
</aside>
<p>I does the job perfectly, that’s what I was looking for.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/66">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/66</link>
        <pubDate>Sat, 15 Nov 2014 20:41:43 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-66</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Ok.</p>
<blockquote>In /usr/bin/whonixsetup, may be check an environment variable.</blockquote>
That env var is for that use case not the right tool. Users may set that variable for some other reason or we later do in development for some reason (tor-launcher or so).
<p>There is a <a href="https://github.com/Whonix/anon-gw-base-files">https://github.com/Whonix/anon-gw-base-files</a> or <a href="https://github.com/Whonix/anon-ws-base-files">https://github.com/Whonix/anon-ws-base-files</a> always installed by default (those cannot be installed together, they conflict by design) that do no more than ship either a [font=courier]/usr/share/anon-gw-base-files/gateway[/font] or [font=courier]/usr/share/anon-ws-base-files/workstation[/font] file as a reliable method for other packages to detect whether they are running on gw or ws.</p>
<p>Does that seem like a robust detection method?</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/65">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/65</link>
        <pubDate>Sat, 15 Nov 2014 12:12:08 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-65</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[troubadour]]></dc:creator>
        <description><![CDATA[
            <p>[quote=“Patrick, post:63, topic:635”]Sounds good.</p>
<aside class="quote">
<blockquote>
<p>As suggested by nrgaway, we could(should) put the whonixsetup-wizard(s) in the same package. It would be a matter of creating /usr/bin/whonixsetup-wizard.</p>
</blockquote>
</aside>
<p>“creating” sounds a bit scary. I am not a fan of dynamically generating files in /usr/bin. No package does that and I think it has a good reason.[/quote]<br>
Wrong phrasing. I meant “writing”, as a static file included in the package.</p>
<blockquote>[quote]We could install the package in something like /usr/lib/python2.7/anon-packages/whonixsetup.[/quote]
Any reason for keeping "anon-packages"?
What about /usr/lib/python2.7/whonixsetup-wizard?</blockquote>
No reason, actually. It can be /usr/lib/python2.7/whonixsetup, containing:
[code]
    __init__.py
    guimessage.py
    translations.py
    connection_wizard_gateway.py
    connection_wizard_workstation.py
    whonix_repository_wizard.py
[/code]
<p>In /usr/bin/whonixsetup, may be check an environment variable.</p>
<pre><code class="lang-auto">if os.getenv('TOR_CONTROL_PORT'):
    from whonix-setup import connection_wizard_workstation
    connection_wizard_workstation -&gt; start

else:
    from whonix-setup import connection_wizard_gateway
    connection_wizard_gateway -&gt; start</code></pre>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/64">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/64</link>
        <pubDate>Sat, 15 Nov 2014 10:35:43 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-64</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Sounds good.</p>
<aside class="quote" data-post="62" data-topic="635">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/t/d9b06d/40.png" class="avatar"> troubadour:</div>
<blockquote>
<p>As suggested by nrgaway, we could(should) put the whonixsetup-wizard(s) in the same package. It would be a matter of creating /usr/bin/whonixsetup-wizard.</p>
</blockquote>
</aside>
<p>“creating” sounds a bit scary. I am not a fan of dynamically generating files in /usr/bin. No package does that and I think it has a good reason.</p>
<p>Not a big deal? /usr/bin/whonix-gateway-setup-wizard /usr/bin/whonix-workstation-setup-wizard? The names do not need to be that pretty, since those are started from start menu, desktop icon [or other wizards]. And a /usr/bin/whonix-gateway-setup-wizard run on Whonix-Workstation could just complain and exit.</p>
<p>What however also could be done would be shipping /usr/lib/whonix-gateway-setup-wizard and /usr/lib/whonix-workstation-setup-wizard, and then have the debian maintainer script conditionally depending on being installed on Whonix-Gateway or Whonix-Workstation create /usr/bin/whonix-setup-wizard(?) as a symlink. (Not hard.) The latter however does not seem so attractive to me. Above sounds better to me. Up to you.</p>
<blockquote>We could install the package in something like /usr/lib/python2.7/anon-packages/whonixsetup.</blockquote>
Any reason for keeping "anon-packages"?
What about /usr/lib/python2.7/whonixsetup-wizard?
<blockquote>I believe that for doing so, we would have to modify PYTHONPATH environment variable.</blockquote>
Sounds pretty non-standard? Where would we set it? I hope not globally but just in the /usr/bin wrapper? Can it be avoided?
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/63">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/63</link>
        <pubDate>Sat, 15 Nov 2014 00:47:16 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-63</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[troubadour]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="60" data-topic="635">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/n/f17d59/40.png" class="avatar"> nrgaway:</div>
<blockquote>
<p>As <a class="mention" href="http://forums.whonix.org/u/troubadour">@troubadour</a> is doing most of the work, I also agree to leave the implementation up to him.</p>
</blockquote>
</aside>
<p>I am in favor of Debian packages for two reasons:</p>
<ul>
<li>It stays consistent with Whonix packaging.</li>
<li>I am not familiar with Python packaging (never came accross setup.py).</li>
</ul>
<p>Now, we’ll have to decide the path for installing the modules. Needed before packaging.</p>
<p>Provisionally, I have</p>
<pre><code class="lang-auto">user@host:/usr/lib/python2.7/dist-packages/whonix$ lt 
total 40
-rw-r--r-- 1 root root    3 Nov 13 22:09 __init__.py
-rw-r--r-- 1 root root  138 Nov 13 22:12 __init__.pyc
-rw-r--r-- 1 root root  607 Nov 13 22:09 guimessage.py
-rw-r--r-- 1 root root 1270 Nov 13 22:12 guimessage.pyc
-rw-r--r-- 1 root root  945 Nov 13 22:09 translations.py
-rw-r--r-- 1 root root 1487 Nov 13 22:12 translations.pyc
-rw-r--r-- 1 root root 6651 Nov 13 22:13 whonix_repository_wizard.py
-rw-r--r-- 1 root root 5652 Nov 13 22:13 whonix_repository_wizard.pyc</code></pre>
<p>translations.py and guimessage.py will most likely end in another place in the future (common to all modules).</p>
<p>/usr/bin/whonix-repository-wizard:</p>
<pre><code class="lang-auto">#!/usr/bin/python
from whonix import whonix_repository_wizard

if __name__ == '__main__':
  whonix_repository_wizard.main()</code></pre>
<p>As suggested by nrgaway, we could(should) put the whonixsetup-wizard(s) in the same package. It would be a matter of creating /usr/bin/whonixsetup-wizard.</p>
<p>We could install the package in something like /usr/lib/python2.7/anon-packages/whonixsetup. I believe that for doing so, we would have to modify PYTHONPATH environment variable.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/62">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/62</link>
        <pubDate>Thu, 13 Nov 2014 23:18:50 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-62</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="60" data-topic="635">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/n/f17d59/40.png" class="avatar"> nrgaway:</div>
<blockquote>
<p>[quote]For generic stuff that is not specific to Whonix (and it’s best to keep Whonix specificness to a minimum) please don’t use name spaces named “Whonix”. I’d prefer easier re-usable by anyone names.</p>
</blockquote>
</aside>
<p>We could use ‘[font=courier]anon[/font]’ then?[/quote]<br>
I suppose that ‘[font=courier]anon[/font]’ is best suited when the package is potentially useful for Whonix, Tails and other Linux distributions with focus on anonymity. For stuff that could be potentially reused by plain Debian, Ubuntu, etc. the ‘[font=courier]anon[/font]’ is a unnecessary limitation by name. In the latter case, I find a neutral name better. A lib for translation is as I understand this topic neither Whonix nor anon specific.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/61">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/61</link>
        <pubDate>Wed, 12 Nov 2014 21:40:55 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-61</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[nrgaway]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="58" data-topic="635">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Egg sounds more complicated? Can continue the “simply use deb as a vehicle to drop a file in correct location” approach? Unless there are good arguments for egg? And other packages, that depend on that module just depend on it and import it?</p>
</blockquote>
</aside>
<p>Eggs or Wheel are just a standard way of packaging python packages, though are not required.  You can still use the Debian packages to distribute and drop the python distrubution in place no matter if its an egg or not.</p>
<p>Ideally any module you want to be able to share code with should be located in one of directories (depending on OS distribution) listed below so its available as an import on python path.  You want to just be able to import a module and not have to manually add python paths:</p>
<pre><code class="lang-auto">/usr/lib64/python2.7/site-packages
/usr/lib/python2.7/site-packages</code></pre>
<blockquote>For generic stuff that is not specific to Whonix (and it's best to keep Whonix specificness to a minimum) please don't use name spaces named "Whonix". I'd prefer easier re-usable by anyone names.</blockquote>
<p>We could use ‘[font=courier]anon[/font]’ then?</p>
<blockquote>For the lib /usr/lib/[?python-transyaml?]/[...]?
<p>For translations /usr/share/whonix-repository-wizard/[…].yaml?</p>
</blockquote><br>
lib: /usr/lib64/python2.7/site-packages<br>
translations: sounds good
<blockquote>How many packages... We discussed this a bit here:
https://www.whonix.org/forum/index.php/topic,705.0.html
<p>troubadour wants a separate package of whonixsetup-wizard for Whonix-Gateway and Whonix-Workstation.</p>
<p>What about…</p>
<ul>
<li>whonixsetup - the existing cli tool - as is</li>
<li>whonix-repository - the existing cli tool - as is</li>
<li>whonix-repository-wizard</li>
<li>[?python-transyaml?]/ - the translation lib</li>
<li>whonix-gw-setup-wizard</li>
<li>whonix-ws-setup-wizard</li>
<li>Eventually, if required, whonix-shared-setup-wizard<br>
?</li>
</ul>
<p>What do you think?</p>
</blockquote>
<p>Both the gateway and workstation modules could still be included in the same distribution package as separate modules located on the python path.  The benefit of python is that it is object oriented and favours the use of re-use where ever possible.  If you have duplicate code, something is wrong; time to refactor <img src="//forums.whonix.org/images/emoji/twitter/wink.png?v=5" title=":wink:" class="emoji" alt=":wink:">  If a module is too long; time to refactor.</p>
<p>Then you just have a shell script that would call it like:</p>
<pre><code class="lang-auto">#!/usr/bin/env python
'''
Start Whonix Gateway Wizard.
'''
from anon.gw.setupwizard import setup_main

if __name__ == '__main__':
    setup_main()</code></pre>
<p>This approach keeps all the code together allowing it to be maintained, debugged and tested easily.  For debugging, check out WingWare’s integrated IDE and debugger <a href="http://wingware.com/" data-bbcode="true" rel="nofollow noopener">http://wingware.com/</a>.  It is one of the most powerful python debuggers out there.</p>
<p>As <a class="mention" href="http://forums.whonix.org/u/troubadour">@troubadour</a> is doing most of the work, I also agree to leave the implementation up to him.  Just adding my 2 cents and based on the decisions I will know how to write the translation Mixin.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/60">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/60</link>
        <pubDate>Wed, 12 Nov 2014 21:30:23 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-60</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[troubadour]]></dc:creator>
        <description><![CDATA[
            <p>[quote=“nrgaway, post:57, topic:635”]Not much involved in a Mixin.  You most likely used them before and maybe never noticed.</p>
<p>So what we need to do is:</p>
<p>[ul][li]Create a separate translation module, maybe called translation.py for example.  It is a standalone class capable of getting the translation [/li]<br>
[li]Then in the module that needs access to translations, we just extend the Translation module like class WhonixSetup(Translation) and add a bit of super code in the <strong>init</strong> to make sure the Translation.<strong>init</strong> also gets called[/li][/ul]</p>
<p>So what the Mixin does is then provide the extra Translation methods to the class itself instead of needing to instantiate the object like:</p>
<pre><code class="lang-auto">from  whonix.translation import Translation

...
t = Translation(lang="en", section="foo", label="setup1")
print t.getTranslation()</code></pre>
<p>we just do this:</p>
<p>[code]<br>
from  whonix.translation import Translation</p>
<p>…<br>
class WhonixSetup(QtGui.QMessageBox, Translation):<br>
def <strong>init</strong>(self, message):<br>
super(WhonixMessageBox, self).<strong>init</strong>()</p>
<pre><code>def someMethod(self):
    print self.getTranslation("setup1")
</code></pre>
<p>[/code][/quote]</p>
<p>After reading some confusing literature about Mixins, I decided to use a more standard approach (that can be changed later).</p>
<p>I created a Translations class (inside the module for the time being)  and added the call to it in the Whonix_Repository_Wizard class <strong>init</strong>(). As a bonus, I have made the yaml parsing “gettext” like.<br>
<a href="https://github.com/troubadoour/whonix-repository-wizard/commit/dd3960769e6e60167d44f22feb66c7d1cd38bed6" rel="nofollow noopener">https://github.com/troubadoour/whonix-repository-wizard/commit/dd3960769e6e60167d44f22feb66c7d1cd38bed6</a><br>
(There is a couple of commits on top of this one).</p>
<p>I am planning to implement the same  in the GUI_message class. The benefit could  be that, at the expense of two lines of code per class, I can pass the section I want to use for each new instance of Translations().</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/59">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/59</link>
        <pubDate>Wed, 12 Nov 2014 21:09:49 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-59</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Egg sounds more complicated? Can continue the “simply use deb as a vehicle to drop a file in correct location” approach? Unless there are good arguments for egg? And other packages, that depend on that module just depend on it and import it?</p>
<p>For generic stuff that is not specific to Whonix (and it’s best to keep Whonix specificness to a minimum) please don’t use name spaces named “Whonix”. I’d prefer easier re-usable by anyone names.</p>
<p>For the lib /usr/lib/[?python-transyaml?]/[…]?</p>
<p>For translations /usr/share/whonix-repository-wizard/[…].yaml?</p>
<p>How many packages… We discussed this a bit here:<br>
<a href="https://www.whonix.org/forum/index.php/topic,705.0.html" class="onebox" target="_blank">https://www.whonix.org/forum/index.php/topic,705.0.html</a></p>
<p>troubadour wants a separate package of whonixsetup-wizard for Whonix-Gateway and Whonix-Workstation.</p>
<p>What about…</p>
<ul>
<li>whonixsetup - the existing cli tool - as is</li>
<li>whonix-repository - the existing cli tool - as is</li>
<li>whonix-repository-wizard</li>
<li>[?python-transyaml?]/ - the translation lib</li>
<li>whonix-gw-setup-wizard</li>
<li>whonix-ws-setup-wizard</li>
<li>Eventually, if required, whonix-shared-setup-wizard<br>
?</li>
</ul>
<p>What do you think?</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/58">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/58</link>
        <pubDate>Wed, 12 Nov 2014 17:35:19 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-58</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[nrgaway]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="55" data-topic="635">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/t/d9b06d/40.png" class="avatar"> troubadour:</div>
<blockquote>
<p>[quote]Even if more complex gui tools are added, why would that solution not work?</p>
</blockquote>
</aside>
<p>It should work.<br>
<a class="mention" href="http://forums.whonix.org/u/nrgaway">@nrgaway</a>: Do you see reason why it should not?[/quote]</p>
<p>Can’t see any reason not.</p>
<blockquote>[quote]And even if more complex gui tools are added, who says that for a different package we have to say the same mechanism?  :)[/quote]
I think it could become more a question of file size than complexity. 
<p>Let’s say (for the sake of example only!) that we port whonixcheck to Python. Then, because of the size of the text, it could be splitted in multiple files instead of using another option.</p>
<p>I have pushed some commits to <a href="https://github.com/troubadoour/whonix-repository-wizard" rel="nofollow noopener">https://github.com/troubadoour/whonix-repository-wizard</a>. Because there will be some common code, the plan is to complete the exceptions handling before starting whonixsetup-wizard.</p>
<p>Then</p>
<aside class="quote">
<blockquote>
<p>What we should do is create a dedicated Mixin class adapter that we call and use for all the python modules.  That adaptter can then be super classed as well to proved an interface to other services.</p>
</blockquote>
</aside>
<p>We will need it at some stage, so the best is to start now (I’m not familiar with the concept).</p>
</blockquote>
<p>Not much involved in a Mixin.  You most likely used them before and maybe never noticed.</p>
<p>So what we need to do is:</p>
<p>[ul][li]Create a separate translation module, maybe called translation.py for example.  It is a standalone class capable of getting the translation [/li]<br>
[li]Then in the module that needs access to translations, we just extend the Translation module like class WhonixSetup(Translation) and add a bit of super code in the <strong>init</strong> to make sure the Translation.<strong>init</strong> also gets called[/li][/ul]</p>
<p>So what the Mixin does is then provide the extra Translation methods to the class itself instead of needing to instantiate the object like:</p>
<pre><code class="lang-auto">from  whonix.translation import Translation

...
t = Translation(lang="en", section="foo", label="setup1")
print t.getTranslation()</code></pre>
<p>we just do this:</p>
<pre><code class="lang-auto">from  whonix.translation import Translation

...
class WhonixSetup(QtGui.QMessageBox, Translation):
    def __init__(self, message):
        super(WhonixMessageBox, self).__init__()

    def someMethod(self):
        print self.getTranslation("setup1")</code></pre>
<p>Yeah, you are right, now is the time to make sure we do it all properly!</p>
<p>I can write it over the weekend.  All the yaml should be stored in one directory for all modules.  Did you decide on the /usr/share/whonix ??</p>
<p>Do you plan on packaging the python modules as an egg or do you plan in installing like script files.  I will make the translation module install-able so its available on python path</p>
<p>I figure all the python code should be packaged using proper namespace and shell wrappers to call specific modules which would allow for best option to be able to re-use code among modules.  We can use the namespace of whonix; and use the python setup program to install in python path.  What are your thoughts?</p>
<p>I guess the other thing to decide would be how to package it all together.  Do we want separate packages for each task. like setup and repository or will they be in a shared package.  I have not taken the time to think it though yet on what would be best.  I’m leaning towards one package though for server, and gateway with a goal to be able to re-use code where possible.  We don’t want to run into a maintenance nightmare and if all code is in one code-base it will make it easier for other authors to contribute.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/57">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/57</link>
        <pubDate>Wed, 12 Nov 2014 16:14:25 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-57</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Common code as in shared among multiple packages? If that’s the case, whonixsetup-wizard should ideally not depend on whonix-repository-wizard? A shared package as dependency?</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/56">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/56</link>
        <pubDate>Tue, 11 Nov 2014 23:07:40 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-56</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[troubadour]]></dc:creator>
        <description><![CDATA[
            <blockquote>Even if more complex gui tools are added, why would that solution not work?</blockquote>
It should work.
@nrgaway: Do you see reason why it should not?
<blockquote>And even if more complex gui tools are added, who says that for a different package we have to say the same mechanism?  :)</blockquote>
I think it could become more a question of file size than complexity. 
<p>Let’s say (for the sake of example only!) that we port whonixcheck to Python. Then, because of the size of the text, it could be splitted in multiple files instead of using another option.</p>
<p>I have pushed some commits to <a href="https://github.com/troubadoour/whonix-repository-wizard" rel="nofollow noopener">https://github.com/troubadoour/whonix-repository-wizard</a>. Because there will be some common code, the plan is to complete the exceptions handling before starting whonixsetup-wizard.</p>
<p>Then</p>
<aside class="quote" data-post="51" data-topic="635">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/n/f17d59/40.png" class="avatar"> nrgaway:</div>
<blockquote>
<p>What we should do is create a dedicated Mixin class adapter that we call and use for all the python modules.  That adaptter can then be super classed as well to proved an interface to other services.</p>
</blockquote>
</aside>
<p>We will need it at some stage, so the best is to start now (I’m not familiar with the concept).</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/55">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/55</link>
        <pubDate>Tue, 11 Nov 2014 21:07:09 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-55</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <blockquote>accepted (preferred) by translatewiki.</blockquote>
<p>Yay! Awesome!</p>
<p>(The following questions are just for better understanding. No need to slow your process down.)</p>
<aside class="quote" data-post="53" data-topic="635">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/t/d9b06d/40.png" class="avatar"> troubadour:</div>
<blockquote>
<p>I do not believe we’ll ever have many Whonix specific Python GUI scripts.</p>
</blockquote>
</aside>
<p>Even if more complex gui tools are added, why would that solution not work?</p>
<p>And even if more complex gui tools are added, who says that for a different package we have to say the same mechanism?  <img src="//forums.whonix.org/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/54">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/54</link>
        <pubDate>Tue, 11 Nov 2014 11:02:14 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-54</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[troubadour]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="http://forums.whonix.org/u/nrgaway">@nrgaway</a><br>
I had a quick dive into the code internationalization jungle. Ye there are many ways, but the one you proposed (yaml) seems adapted to the size of the project. I do not believe we’ll ever have many Whonix specific Python GUI scripts. The biggest verbose comes from msgdispatcher_dispatch_x, which displays the cli output from whonixcheck, written in bash.</p>
<p>Realistcally, we are probably left with two maintainable solutions:</p>
<ul>
<li>yaml. Single file , human readable, accepted (preferred) by translatewiki.</li>
<li>gettext. Multiple files, human readble, _(‘this is a string’) in the code (easy), .pot format, not straight forward in translatewiki.</li>
</ul>
<p>I did use xml in Windows (.net). I do not how easy it is to serialize / deserialize in Python, but it’s not a contender for our case. And it does not look very popular in the Linux world.</p>
<p>The others , Babel, Zope and clones are probably too complex.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/53">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/53</link>
        <pubDate>Tue, 11 Nov 2014 00:19:09 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-53</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Sounds good overall.</p>
<p>We’ll figure out what the <a href="https://translatewiki.net/">https://translatewiki.net/</a> people say as soon someone works on <a href="https://github.com/Whonix/Whonix/issues/15">https://github.com/Whonix/Whonix/issues/15</a>.</p>
<blockquote>Do you want bash shell integration?</blockquote>
<p>I don’t know. No strong opinion. We could also go for the usual way to translate the bash scripts. (Similar to Tails.) We’ll figure out once someone starts working on <a href="https://github.com/Whonix/Whonix/issues/15">https://github.com/Whonix/Whonix/issues/15</a>.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/52">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/52</link>
        <pubDate>Mon, 10 Nov 2014 07:32:02 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-52</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[nrgaway]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="50" data-topic="635">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Is this a usual way to do this in python? Probably best to not invent something here. How do other python projects do this? I am asking, so we don’t get a feature request anytime soon “please do it the standard way, so you could profit from our translation service”. <a href="https://translatewiki.net" rel="nofollow noopener">https://translatewiki.net</a> is such a service. Their community translates applications (not wiki websites) for free. Kinda great. And if we go for translations, we should make sure they’d be able to jump in.</p>
</blockquote>
</aside>
<p>There are many formats and ways to write translations.  Some use a different file for each language and some combine.  The format I implemented was very light compared to the larger projects I have used them for. What we should do is create a dedicated Mixin class adapter that we call and use for all the python modules.  That adaptter can then be super classed as well to proved an interface to other services.</p>
<p>Yaml is very flexible and works nicely with python as it translates into dictionaries and lists and is very readable and it is also directly inter-changable with json with one command, which means it can be easily adapted to javascript as well.  It would not be difficult to interface with any provider service; all that would need to be done is a small ‘plug-in’ written to interface with some type of api.  The most popular configuration type file formats now-a-days are json, yaml, ini and xml.  I used to used xml for everything but its not very human friendly but has great validation if you ever need to parse data.</p>
<p>Some translations are based on more than just en, like en_US and en_CA, etc but I figured you would only be needling the base languages.  If we create the mixin, then in the future we can change that and only the adapter code needs to be changed.</p>
<p>We can also write a shell interface real easy for the shell scripts.</p>
<p>Now saying all that, there are many translation packages available that would be able to replace this simple one without much effort.  Again adapters if used we can adapt it to anything.</p>
<p>And to finally answer your question there is no standard in which internationalization service to use but there are standard on file formats, character encoding, etc.  Python implements some internationalization services itself (<a href="https://docs.python.org/2/library/gettext.html" data-bbcode="true" rel="nofollow noopener">https://docs.python.org/2/library/gettext.html</a>) but many frameworks implement their own custom implementations, for example Django (<a href="https://docs.djangoproject.com/en/dev/topics/i18n/translation/" data-bbcode="true" rel="nofollow noopener">https://docs.djangoproject.com/en/dev/topics/i18n/translation/</a>)  Some are very complex, some are basic.</p>
<p>You just need to decide on what you want out of the translations as I only saw a handful of items that would need translation and therefore though something together quick.  It was a nice way to separate the text out of all the modules and place it all together.</p>
<p>These are the items you should take into consideration:</p>
<p>[ul][li]<span class="bbcode-u">Ease of use for maintaining translations</span>.  I would think you would want a human readable format and that narrows it down to ini or yaml which would allow others to be able to easily provide translations.  json is only nice for programmers; not so much for xml.[/li]<br>
[li]<span class="bbcode-u">How many ‘modules’ will use service</span>? 10, 20, 200?[/li]<br>
[li]<span class="bbcode-u">Do you want bash shell integration?</span>[/li]<br>
[li]<span class="bbcode-u">Any other computer languages to interface</span>?  Javascript?[/li]<br>
[li]<span class="bbcode-u">Automatic translation services</span>.  Guess we should see what formats they want for translating.  Any format is easily deserialized and serialized.[/li]<br>
[li]<span class="bbcode-u">How many languages you plan on servicing</span>[/li]<br>
[li]<span class="bbcode-u">How do you want to incorporate the translations.</span>  They can be placed in a separate file or files for each language.  The can just be written in English in the applications and the translation program will create the appropriate files.  For example you can get a package that will allow _(This is a string) and that will end up in a translation file automatically.  It can be a pain to change the base code though since you then need to sift though many files[/li][/ul]</p>
<p>Anyway, I’m real tired now and that should give you something to think about.  Take a look at the Pyhon API I can you a link to and really think if you need a feature set like that or if something simple like we are using now.  Zope also has some stuff to look at.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/51">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/51</link>
        <pubDate>Mon, 10 Nov 2014 01:06:01 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-51</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Merged. Looks all good.</p>
<p>Few comments.</p>
<ol>
<li>
</li>
</ol>
<p>Is this a usual way to do this in python? Probably best to not invent something here. How do other python projects do this? I am asking, so we don’t get a feature request anytime soon “please do it the standard way, so you could profit from our translation service”. <a href="https://translatewiki.net">https://translatewiki.net</a> is such a service. Their community translates applications (not wiki websites) for free. Kinda great. And if we go for translations, we should make sure they’d be able to jump in.</p>
<ol start="2">
<li>
</li>
</ol>
<p>I am not sure about a correct path.</p>
<p>Maybe<br>
/usr/(share or lib?)/whonix-repository- wizard/translations<br>
?</p>
<p>Likely, we know more as soon we have an answer for 1).</p>
<aside class="quote" data-post="49" data-topic="635">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/t/d9b06d/40.png" class="avatar"> troubadour:</div>
<blockquote>
<p>[quote]There is an issue with the start menu entry. The cursor is bouncing even through it’s already open. There is no launch feedback.</p>
</blockquote>
</aside>
<p>Do you still have this issue? Nothing like that on this side.[/quote]<br>
It’s fixed. Dunno why. Eventually because of reboot.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/50">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/50</link>
        <pubDate>Sun, 09 Nov 2014 22:17:01 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-50</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[troubadour]]></dc:creator>
        <description><![CDATA[
            <blockquote>There is an issue with the start menu entry. The cursor is bouncing even through it's already open. There is no launch feedback.</blockquote>
<p>Do you still have this issue? Nothing like that on this side.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/49">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/49</link>
        <pubDate>Sun, 09 Nov 2014 22:10:34 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-49</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[troubadour]]></dc:creator>
        <description><![CDATA[
            <p>There is a change in debian/control in <a href="https://github.com/troubadoour/whonix-repository-wizard/commit/e6d210cb51795a3d1b59c23f3160d2fbc0e06d8a" rel="nofollow noopener">https://github.com/troubadoour/whonix-repository-wizard/commit/e6d210cb51795a3d1b59c23f3160d2fbc0e06d8a</a>. Should have committed separately.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/48">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/48</link>
        <pubDate>Sun, 09 Nov 2014 22:07:47 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-48</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[troubadour]]></dc:creator>
        <description><![CDATA[
            <p>Pushed two commits.<br>
<a href="https://github.com/troubadoour/whonix-repository-wizard/commit/e6d210cb51795a3d1b59c23f3160d2fbc0e06d8a" class="onebox" target="_blank" rel="nofollow noopener">https://github.com/troubadoour/whonix-repository-wizard/commit/e6d210cb51795a3d1b59c23f3160d2fbc0e06d8a</a><br>
<a href="https://github.com/troubadoour/whonix-repository-wizard/commit/1a896bd58fa6819fec200b2008fbed1960035e01" class="onebox" target="_blank" rel="nofollow noopener">https://github.com/troubadoour/whonix-repository-wizard/commit/1a896bd58fa6819fec200b2008fbed1960035e01</a></p>
<p>The user text is in “usr/share/whonix/whonix-shared-translations” for not finding a better place-name.</p>
<p>The idea is to put all the GUI text in this file, or at least the text for the initial setup to start with.</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/47">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/47</link>
        <pubDate>Sun, 09 Nov 2014 22:06:46 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-47</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
      <item>
        <title>Whonix Repository GUI Tool (Python)</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Removed desktop icon, recommend whonix-repository-wizard:<br>
</p><aside class="onebox githubcommit">
  <header class="source">
      <a href="https://github.com/Whonix/whonix-repository/commit/8430c86df0072d67b0aa1d189fc696d3142a986e" target="_blank">github.com/Whonix/whonix-repository</a>
  </header>
  <article class="onebox-body">
    <div class="github-row">
  <div class="github-icon-container" title="Commit">
    <svg width="60" height="60" class="github-icon" viewBox="0 0 14 16" aria-hidden="true"><path d="M10.86 7c-.45-1.72-2-3-3.86-3-1.86 0-3.41 1.28-3.86 3H0v2h3.14c.45 1.72 2 3 3.86 3 1.86 0 3.41-1.28 3.86-3H14V7h-3.14zM7 10.2c-1.22 0-2.2-.98-2.2-2.2 0-1.22.98-2.2 2.2-2.2 1.22 0 2.2.98 2.2 2.2 0 1.22-.98 2.2-2.2 2.2z"></path></svg>
  </div>

  <div class="github-info-container">
    <h4>
      <a href="https://github.com/Whonix/whonix-repository/commit/8430c86df0072d67b0aa1d189fc696d3142a986e" target="_blank">removed desktop icon, recommend whonix-repository-wizard</a>
    </h4>

    <div class="github-info">
      <div class="date">
        committed <span class="discourse-local-date" data-format="ll" data-date="2014-11-06" data-time="08:51:39" data-timezone="UTC">08:51AM - 06 Nov 14 UTC</span>
      </div>

      <div class="user">
        <a href="https://github.com/adrelanos" target="_blank">
          <img alt="adrelanos" src="https://avatars3.githubusercontent.com/u/1985040?v=4" class="onebox-avatar-inline" width="20" height="20">
          adrelanos
        </a>
        
      </div>

      <div class="lines" title="changed 3 files with 1 additions and 28 deletions">
        <a href="https://github.com/Whonix/whonix-repository/commit/8430c86df0072d67b0aa1d189fc696d3142a986e" target="_blank">
          <span class="added">+1</span>
          <span class="removed">-28</span>
        </a>
      </div>
    </div>

  </div>
</div>




  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<br>
(You need that change, otherwise you cannot install whonix-repository-wizard, because no file may be owned by two packages at once.<p></p>
<p>Added start menu entry:<br>
<a href="https://github.com/Whonix/whonix-repository-wizard/commit/607c87b3352955ea5ae5ea33e11f099fa5604701" class="onebox" target="_blank">https://github.com/Whonix/whonix-repository-wizard/commit/607c87b3352955ea5ae5ea33e11f099fa5604701</a></p>
<p>There is an issue with the start menu entry. The cursor is bouncing even through it’s already open. There is no launch feedback.</p>
<p><a href="https://docs.kde.org/development/en/kde-runtime/kcontrol/kcmlaunch/index.html" class="onebox" target="_blank">https://docs.kde.org/development/en/kde-runtime/kcontrol/kcmlaunch/index.html</a></p>
<p>Maybe you got any idea how we could implement launch feedback?</p>
          <p><a href="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/46">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/whonix-repository-gui-tool-python/635/46</link>
        <pubDate>Thu, 06 Nov 2014 08:54:43 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-635-46</guid>
        <source url="http://forums.whonix.org/t/whonix-repository-gui-tool-python/635.rss">Whonix Repository GUI Tool (Python)</source>
      </item>
  </channel>
</rss>

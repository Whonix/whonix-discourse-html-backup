<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
    <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872</link>
    <description>[b]Issue T181: Audit qubes-whonix 9.6-1

Posted by @WhonixQubes

February 16, 2015

https://phabricator.whonix.org/T181[/b]

&lt;blockquote&gt;Audit of qubes-whonix 9.6-1 package release, developed by @nrgaway, is already underway and nearing completion by @Patrick and @WhonixQubes.

Would like it to be signed off by both @Patrick and @WhonixQubes.&lt;/blockquote&gt;

[hr]

[b]Audit of Proposed qubes-whonix 9.6-1[/b]

[hr]

Here is a thread for relevant discussion, tickets, links, info, etc for auditing the proposed version 9.6-1 of the &quot;qubes-whonix&quot; package for the Qubes + Whonix platform.

[hr]

Original development source repositories are here:
- [b]https://github.com/Whonix/qubes-whonix[/b]
- [b]https://github.com/nrgaway/qubes-whonix[/b]
- [b]https://github.com/nrgaway/qubes-whonix/tree/9.6-1[/b]

Relevant issue tickets to this audit are here:  [b]https://phabricator.whonix.org/tag/Qubes[/b]

- [b]https://phabricator.whonix.org/T162[/b]  qubes-whonix handling of /etc/timezone and /etc/localtime
- [b]https://phabricator.whonix.org/T163[/b]  use /etc/whonix_firewall.d/32_qubes rather than /etc/whonix_firewall.d/30_default
- [b]https://phabricator.whonix.org/T164[/b]  /etc/xdg/autostart/ NotShowIn necessary?
- [b]https://phabricator.whonix.org/T165[/b]  anonymous package rebuilds difficult when changing debian/changelog e-mail address
- [b]https://phabricator.whonix.org/T166[/b]  rename /etc/uwt.d/32_uwt_default to /etc/uwt.d/32_uwt_qubes
- [b]https://phabricator.whonix.org/T167[/b]  implement deb-pkg-build-dep and deb-pkg-update-build-dep
- [b]https://phabricator.whonix.org/T168[/b]  missing features in make-helper.bsh for qubes-whonix package?
- [b]https://phabricator.whonix.org/T169[/b]  check for network failures during build
- [b]https://phabricator.whonix.org/T170[/b]  check Qubes build script for apt-get update network / gpg failure security issues
- [b]https://phabricator.whonix.org/T171[/b]  remove /etc/hosts from qubes-whonix package
- [b]https://phabricator.whonix.org/T172[/b]  qubes-whonix.triggers code duplication
- [b]https://phabricator.whonix.org/T173[/b]  triggers interest-noawait /etc/resolv.conf will probably not work
- [b]https://phabricator.whonix.org/T174[/b]  rather than modify /etc/sdwdate.d/31_anon_dist_stream_isolation_plugin ship /etc/sdwdate.d/35_qubes_stream_isolation_plugin
- [b]https://phabricator.whonix.org/T175[/b]  typos
- [b]https://phabricator.whonix.org/T176[/b]  use GATEWAY_IPv4_DROP_INVALID_INCOMING_PACKAGES_POST_HOOK instead of editing /usr/bin/whonix_firewall
- [b]https://phabricator.whonix.org/T177[/b]  remove duplicate ipv4 forwarding disable
- [b]https://phabricator.whonix.org/T180[/b]  add qubes-whonix package to Whonix source code folder
- [b]https://phabricator.whonix.org/T181[/b]  Audit qubes-whonix 9.6-1
- [b]https://phabricator.whonix.org/T182[/b]  Add qubes-whonix 9.6-1 to Whonix APT Repository
- [b]https://phabricator.whonix.org/T183[/b]  Typo in README.md: &quot;honix&quot; should be &quot;Whonix&quot;
- [b]https://phabricator.whonix.org/T184[/b]  Add missing docstrings to Python classes and methods
- [b]https://phabricator.whonix.org/T186[/b]  many lintian warnings in qubes-whonix package
- [b]https://phabricator.whonix.org/T187[/b]  Architecture: &quot;any&quot; vs &quot;all&quot;, i386, platforms support
- [b]https://phabricator.whonix.org/T188[/b]  qubes-whonix package version numbers
- [b]https://phabricator.whonix.org/T191[/b]  Consider qubes-whonix-tests package</description>
    <language>en</language>
    <lastBuildDate>Sat, 28 Feb 2015 15:26:40 +0000</lastBuildDate>
    <category>Qubes-Whonix</category>
    <atom:link href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <p>[quote=“Patrick, post:30, topic:872”]That wouldn’t need an app. Also because the files the app deletes gets recreated when the package that ships the undesired file is upgraded.</p>
<p>Use config-package-dev’s hide operation. Link:<br>
<a href="http://debathena.mit.edu/config-packages/" class="onebox" target="_blank" rel="nofollow noopener">http://debathena.mit.edu/config-packages/</a><br>
Available from Debian repository, stable, used by some Whonix packages.</p>
<p>Here is a simple example package, that hides a single file [equally easy to hide multiple files]:<br>
<a href="https://github.com/Whonix/knetattach-hide%5B/quote%5D" class="onebox" target="_blank" rel="nofollow noopener">https://github.com/Whonix/knetattach-hide[/quote]</a></p>
<p>I will be sure to check it out and see if it will work as desired. Thanks! <img src="//forums.whonix.org/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/31">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/31</link>
        <pubDate>Sat, 28 Feb 2015 15:26:40 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-31</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>That wouldn’t need an app. Also because the files the app deletes gets recreated when the package that ships the undesired file is upgraded.</p>
<p>Use config-package-dev’s hide operation. Link:<br>
<a href="http://debathena.mit.edu/config-packages/" class="onebox" target="_blank">http://debathena.mit.edu/config-packages/</a><br>
Available from Debian repository, stable, used by some Whonix packages.</p>
<p>Here is a simple example package, that hides a single file [equally easy to hide multiple files]:<br>
<a href="https://github.com/Whonix/knetattach-hide" class="onebox" target="_blank">https://github.com/Whonix/knetattach-hide</a></p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/30">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/30</link>
        <pubDate>Sat, 28 Feb 2015 15:08:47 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-30</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="28" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"> Patrick:</div>
<blockquote>
<p>I would wonder how this app would operate, but feel free to cook it up.</p>
</blockquote>
</aside>
<p>Just simply by stripping out extra test code/scripts that are potentially not good for production anonymity if run.</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/29">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/29</link>
        <pubDate>Sat, 28 Feb 2015 13:40:45 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-29</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>I would wonder how this app would operate, but feel free to cook it up.</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/28">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/28</link>
        <pubDate>Sat, 28 Feb 2015 13:19:06 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-28</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <p>[quote=“Patrick, post:26, topic:872”]I am not convinced of removal of unit tests and whatnot without seeing an example of creative hidden invocation. Scary stuff that applies to C(++) that’s often in the news often does not apply to scripts. It’s useful to stay on top of vulnerabilities, understand them and then try imagine if it could be modified/applied for any scripts as well, sure. But often it doesn’t.</p>
<p>Most times it’s best to follow existing standards and conventions. When accepting patches you usually want them to run the test suite. And to extend the test suite if applicable. Now, when you receive a patch and you start answering, “oh, but did you get the test suite from that other repository and followed instructions on how to set it up” you’ll make things actually more difficult.</p>
<p>For a while, whonix-developer-meta-files wasn’t part of the Whonix source code. An unlinked extra repository that depended on the main source code. Setting that up caused confusion. (<a href="https://github.com/Whonix/Whonix/issues/337" rel="nofollow noopener">https://github.com/Whonix/Whonix/issues/337</a>)</p>
<p>Telling, other interested contributors “but you also need xyz”, looks like a non-standard mess and worsens ability and motivation to get into it at all.</p>
<p>Vastly increasing the number of packages with -test packages doesn’t seem to me like a good way to make things simpler.[/quote]</p>
<p>This is ultimately ok, as I can additionally focus on mitigating the potential issue through an independent app and we can keep tests in for all the other packages in the original Whonix codebase.</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/27">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/27</link>
        <pubDate>Sat, 28 Feb 2015 07:28:44 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-27</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>No, the env vars do not get sanitized. I see no need for that. It’s a feature. Yes, there has been a terrible bash env var vulnerability, but no reason to freak out and go crazy about it and ditch env vars everywhere. It was never applicable to local scripts of that type. To set environment variables, one needs local access. Once malware has local access, it can do a lot worse stuff than tampering with env vars, so it wouldn’t help there anyhow. The only one who can set env vars is the user and as well are files on the disk the are shipped by packages. The user cannot be protected from itself anyhow. And files on the disk that come from packages need to be audited the usual way anyhow. Now, if for example the xchat-improved-privacy would ship a file to set some strange env var, that would raise a red flag.</p>
<p>[hr]</p>
<p>If you want to know environment variables set on your system, login root  (or user, depends) and type “env”. Or add “env” to the beginning of some script you’re interested in and echo and/or redirect it anywhere you prefer.</p>
<p>There is also a very limited number of places where global env vars can be set.</p>
<p>[hr]</p>
<p>Which variables for Whonix Firewall are set gets clear by having a look at <code>/etc/whonix_firewall.d/</code>. Files in that folder are <code>source</code>ed in lexical order (as per firewall script, section “source config folder”). There aren’t that many in that folder.</p>
<p>You can also write a small script based on the parsing code to show them.</p>
<pre><code class="lang-auto">#!/bin/bash

set -e
set -x

for i in /etc/whonix_firewall.d/*; do
   if [ -f "$i" ]; then
      ## If the last character is a ~, ignore that file, because it was created
      ## by some editor, which creates backup files.
      if [ "${i: -1}" = "~" ]; then
         continue
      fi
      ## Skipping files such as .dpkg-old and .dpkg-dist.
      if ( echo "$i" | grep -q ".dpkg-" ); then
         true "skip $i"
         continue
      fi
      bash_n_exit_code="0"
      bash_n_output="$(bash -n "$i" 2&gt;&amp;1)" || { bash_n_exit_code="$?" ; true; };
      if [ ! "$bash_n_exit_code" = "0" ]; then
         echo "Invalid config file: $i
bash_n_exit_code: $bash_n_exit_code
bash_n_output:
$bash_n_output" &gt;&amp;2
         exit 1
      fi
      source "$i"
   fi
done</code></pre>
<p>Alternative:</p>
<pre><code class="lang-auto">#!/bin/bash

set -e

for i in /etc/whonix_firewall.d/*; do
   if [ -f "$i" ]; then
      ## If the last character is a ~, ignore that file, because it was created
      ## by some editor, which creates backup files.
      if [ "${i: -1}" = "~" ]; then
         continue
      fi
      ## Skipping files such as .dpkg-old and .dpkg-dist.
      if ( echo "$i" | grep -q ".dpkg-" ); then
         true "skip $i"
         continue
      fi
      bash_n_exit_code="0"
      bash_n_output="$(bash -n "$i" 2&gt;&amp;1)" || { bash_n_exit_code="$?" ; true; };
      if [ ! "$bash_n_exit_code" = "0" ]; then
         echo "Invalid config file: $i
bash_n_exit_code: $bash_n_exit_code
bash_n_output:
$bash_n_output" &gt;&amp;2
         exit 1
      fi
      set -x
      source "$i"
      set +x
   fi
done</code></pre>
<p>Example output from my test system:</p>
<pre><code class="lang-auto">+ source /etc/whonix_firewall.d/30_default
++ GATEWAY_ALLOW_INCOMING_FLASHPROXY=0
++ FLASHPROXY_PORT=9000
++ WORKSTATION_TRANSPARENT_TCP=1
++ WORKSTATION_TRANSPARENT_UDP=0
++ WORKSTATION_TRANSPARENT_DNS=1
++ WORKSTATION_ALLOW_SOCKSIFIED=1
++ CONTROL_PORT_FILTER_PROXY_ENABLE=1
++ GATEWAY_ALLOW_INCOMING_DIR_PORT=0
++ GATEWAY_ALLOW_INCOMING_OR_PORT=0
++ DIR_PORT=80
++ OR_PORT=443
++ GATEWAY_TRANSPARENT_TCP=0
++ GATEWAY_TRANSPARENT_UDP=0
++ GATEWAY_TRANSPARENT_DNS=0
++ ALLOW_GATEWAY_ROOT_USER=0
++ ALLOW_GATEWAY_USER_USER=0
++ GATEWAY_ALLOW_INCOMING_SSH=0
++ NO_REJECT_INVALID_OUTGOING_PACKAGES=0
++ GATEWAY_ALLOW_INCOMING_ICMP=0
+ set +x
+ source /etc/whonix_firewall.d/50_user
++ WORKSTATION_TRANSPARENT_TCP=1
++ WORKSTATION_TRANSPARENT_DNS=1
++ GATEWAY_IPv4_DROP_INVALID_INCOMING_PACKAGES_POST_HOOK='echo test'
+ set +x</code></pre>
<p>[hr]</p>
<p>As for the iptables generator… I’d find it terrible to document “by default you cannot see in the source code how the firewall script will look like, because first you need to run the generator, and then you can look the the generated result”. Seems more complex than currently to me.</p>
<p>It indeed wouldn’t be hard to write instead of “iptables” some “function-name”. That function could, depending on some setting, either directly apply the iptables rule (as is currently) (and/)or create a compiled firewall script with iptables rules. It would increase the size of the xtrace, though. And also depending on some setting, a to-be-written- wrapper could either directly load /usr/bin/whonix_firewall or /var/cache/whonix-gw-firewall/compiled. Write a pull request?</p>
<p>I implemented lots of feature requests for Whonix Firewall. Now your feature request basically is, “strip all the features, make it bar bone”. Needless to say, that there is no way to make everyone happy. There could be an alternative whonix-simple-fw package that only implements what the current defaults are with no options. They when one or another fw gets changed, the other one would have to be updated as well. That is a concept that works bad, it is often forgotten. And if someone wants to use some feature, the answer would be “use whonix-gw-firewall”. And then there would be a feature request to add the VPN_FIREWALL feature to whonix-simple-fw. And a debate on which one is best and if both could/should be combined to have advantages of all. There is no perfect solution either way.</p>
<p>What about comments and new lines in the compiled firewall list? Just none? And how/why would this compiled firewall rules list be any better than “iptables --list”?</p>
<p>[hr]</p>
<p>I am not convinced of removal of unit tests and whatnot without seeing an example of creative hidden invocation. Scary stuff that applies to C(++) that’s often in the news often does not apply to scripts. It’s useful to stay on top of vulnerabilities, understand them and then try imagine if it could be modified/applied for any scripts as well, sure. But often it doesn’t.</p>
<p>Most times it’s best to follow existing standards and conventions. When accepting patches you usually want them to run the test suite. And to extend the test suite if applicable. Now, when you receive a patch and you start answering, “oh, but did you get the test suite from that other repository and followed instructions on how to set it up” you’ll make things actually more difficult.</p>
<p>For a while, whonix-developer-meta-files wasn’t part of the Whonix source code. An unlinked extra repository that depended on the main source code. Setting that up caused confusion. (<a href="https://github.com/Whonix/Whonix/issues/337">https://github.com/Whonix/Whonix/issues/337</a>)</p>
<p>Telling, other interested contributors “but you also need xyz”, looks like a non-standard mess and worsens ability and motivation to get into it at all.</p>
<p>Vastly increasing the number of packages with -test packages doesn’t seem to me like a good way to make things simpler.</p>
<p>There are a lot more low hanging fruits that would improve the stability and auditability.</p>
<ul>
<li>
<p>For Whonix in general, for example, I would like to get rid of the giant code duplication by adding the generic makefile and make-helper.bash to all the packages without the packages being standalone. Getting the generic makefile into Debian so it could be pulled as a build dependency would do the trick.</p>
</li>
<li>
<p>For Qubes specifically, rather than with test scripts and creative invocation of them, I am much more concerned about the current “creativity” of the qubes-whonix package as I said here: <a href="https://www.whonix.org/forum/index.php/topic,841.msg7019.html#msg7019">https://www.whonix.org/forum/index.php/topic,841.msg7019.html#msg7019</a> Turning the qubes-whonix package into a sort of jack of all trades device rather than the “do one thing, do it well” paradigm (installing systemd, custom package selection) and all the non-standard things and hacks (using systemd on wheezy, custom systemd code in Debian maintainer scripts, not using default debhelper code and a lot other hacks that mostly or even all have tickets already) concerns me a lot more, since it provides a lot more room for “creativity” and bugs.</p>
</li>
</ul>
<p>[hr]</p>
<p>I hope I addressed all points.</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/26">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/26</link>
        <pubDate>Sat, 28 Feb 2015 05:26:17 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-26</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <p>[quote=“nrgaway, post:24, topic:872”][quote author=WhonixQubes link=topic=961.msg7123#msg7123 date=1425009969]</p>
<aside class="quote">
<blockquote>
<p>Personally, if I had a need to use Whonix</p>
</blockquote>
</aside>
<p>Do you use another anonymity system instead or just simply don’t care to make personal use of anonymity tools?</p>
<p>Curious what motivates you to specifically develop for the Whonix platform?</p>
<p>BTW, thanks for doing so!<br>
[/quote]<br>
I find it interesting and have used it on occasion, but I do find Tor slow so I prefer to use clearnet.  I have not really tried out any other systems as they do not seem to have clearnet gateways.  I also filter my open WiFi though Tor.</p>
<p>I like learning new things and since privacy seems to be a big issue these days, that had prompted me into learning more about it.  I actually found out about Qubes through this web site and I am totally loving it.[/quote]</p>
<p>Jason,</p>
<p>Got it.</p>
<p>Yeah, for myself, the big reason for developing the Qubes + Whonix platform is about further checking oppressive and immoral political establishments.</p>
<p>I do get that there are a number of more casual use cases for the platform too.</p>
<p>Ultimately, I launched the project for the hope that the more serious security isolation of Qubes and the tailored anonymity environment of Whonix could help meaningfully push forward the status quo of the underdeveloped privacy/anonymity computing industry to offer better solutions to good people in need of true mission critical anonymity.</p>
<p>Even if your own motives are more casual and educational, I’m very thankful for the contributions you’re able to make that additionally help towards this bigger mission.</p>
<p>Beyond the core Tor software/protocol, I see the following as being very important to more critical privacy/anonymity needs…</p>
<ul>
<li>
<ol>
<li>Whonix’s isolated TwoVM implementation of Tor</li>
</ol>
</li>
<li>
<ol start="2">
<li>Qubes’s hardcore host-level security isolation</li>
</ol>
</li>
<li>
<ol start="3">
<li>Generic fingerprint-resistant anonymous OS environment</li>
</ol>
</li>
<li>
<ol start="4">
<li>Usability for people to make consistent and efficient use of best practices</li>
</ol>
</li>
<li>
<ol start="5">
<li>More open and secure computer hardware</li>
</ol>
</li>
</ul>
<p>And supporting an open, transparent, collaborative, well documented and audited development process for everything.</p>
<p>Thanks to our combined Qubes + Whonix efforts over the past 7+ months, we’ve gone from position <span class="hashtag">#1</span> before last year to now fulfilling position <span class="hashtag">#2</span> since last year.</p>
<p>I’m working towards trying to fix what is sorely lacking for positions <span class="hashtag">#3</span> and <span class="hashtag">#4</span> with Qubes + Whonix this year.</p>
<p>Thank you for being a meaningful part of this great project! <img src="//forums.whonix.org/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/25">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/25</link>
        <pubDate>Fri, 27 Feb 2015 10:51:26 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-25</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[nrgaway]]></dc:creator>
        <description><![CDATA[
            <p>[quote=“WhonixQubes, post:23, topic:872”][quote author=nrgaway link=topic=961.msg7122#msg7122 date=1425005231]<br>
Personally, if I had a need to use Whonix<br>
[/quote]</p>
<p>Do you use another anonymity system instead or just simply don’t care to make personal use of anonymity tools?</p>
<p>Curious what motivates you to specifically develop for the Whonix platform?</p>
<p>BTW, thanks for doing so![/quote]<br>
I find it interesting and have used it on occasion, but I do find Tor slow so I prefer to use clearnet.  I have not really tried out any other systems as they do not seem to have clearnet gateways.  I also filter my open WiFi though Tor.</p>
<p>I like learning new things and since privacy seems to be a big issue these days, that had prompted me into learning more about it.  I actually found out about Qubes through this web site and I am totally loving it.</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/24">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/24</link>
        <pubDate>Fri, 27 Feb 2015 08:01:42 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-24</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="22" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/n/f17d59/40.png" class="avatar"> nrgaway:</div>
<blockquote>
<p>Personally, if I had a need to use Whonix</p>
</blockquote>
</aside>
<p>Do you use another anonymity system instead or just simply don’t care to make personal use of anonymity tools?</p>
<p>Curious what motivates you to specifically develop for the Whonix platform?</p>
<p>BTW, thanks for doing so!</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/23">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/23</link>
        <pubDate>Fri, 27 Feb 2015 04:06:09 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-23</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[nrgaway]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="20" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"> Patrick:</div>
<blockquote>
<p>[quote]A) Create a whonix-gateway package minimal install.  I mean absolutely minimal, only what is required to run and configure it; no gui, nothing not specifically required to run it … bare bones.</p>
</blockquote>
</aside>
<p>I was wondering about this also. It’s hard to decide what’s absolutely required and what not for minimal.</p>
<p>Whonix could be created in so many different ways. Even with just instructions only. (That’s how it all started.)[/quote]</p>
<p>I figure only packages to allow the gateway to run and be configured.  For instance Fedora and install a minimal base system with about a dozen packages.  Then add the required packages for tor, etc.</p>
<blockquote>Ideally, most of Whonix's functionality would be installable from Debian's repository. I'd love to find (co-)maintainer(s) for every package who ideally review the package, upload to Debian, so I would just be upstream. (https://www.whonix.org/wiki/Contribute#Maintainer)
<p>Ideally, Whonix would not be a Debian derivative, but a Debian Pure Blend. (<a href="https://wiki.debian.org/DebianPureBlends" rel="nofollow noopener">https://wiki.debian.org/DebianPureBlends</a>) Therefore build by Debian servers. Deterministically! Tails devs, don’t attempt this, even though intrigeri is a Debian Developer, because Tails has a 6 week release cycle and because it needs quite some time for packages to migrate from Debian unstable to testing or even stable. It could work better for Whonix. While I think, neither stable nor testing would be really suited for Whonix in the fast changing anonymity world. Rolling Debian distribution would work best. There was an attempt, CUT (Constantly Usable Testing). Unfortunately, it looks like that effort has been abandoned.</p>
<p>Ideally, Qubes would not be a distribution, but an alternative Debian kernel package + other supporting packages. Just as you can install the freebsd kernel as alternative to the linux kernel on Debian, the same would be technically possible with Qubes.</p>
<p>Needless to say, that it’s a hell of a lot work ahead. Likely, this never happens.</p>
<aside class="quote">
<blockquote>
<p>B) Allow configuration of Gateway via Workstation</p>
</blockquote>
</aside>
<p>a) This would involve a protocol between gateway and workstation that comes with its own issues.<br>
b) The workstation should not be trusted for that purpose. Changes in the workstation should not allow configuring the gateway in any malicious way such as using colluding bridges.</p>
</blockquote>
<p>Yes, I agree; maybe another type of utility then that is solely used to configure gateway if users require a gui to configure gateway; just to get rid of xwindows, etc</p>
<blockquote>[quote]C) Have a utility on Gateway that periodically checks for un-authorized changes to packages and configuration files.  There are a few out there that already do this.  Find a unauthorized or unexpected change?  shutdown gateway. [/quote]
This supposed a compromised gateway. But if it was compromised, with today's malware, it can do malicious stuff and make sure you won't find out. (kernel rootkit, skipping certain backdoor files in kernel file system access, etc.) Compromised (malware infected) = game over. No way around that. (For analysis however, someone could write a VM that analyzed the gateway file system or even RAM for malicious things.)
<p>Related, see “Script to System Check Integrity against Debian Package Repository”:<br>
<a href="https://lists.debian.org/debian-security/2013/09/msg00053.html" class="onebox" target="_blank" rel="nofollow noopener">https://lists.debian.org/debian-security/2013/09/msg00053.html</a></p>
<p>A fine TODO in the Libre Software security world.</p>
</blockquote>
<p>I actually believe one could detect even the most sophisticated malware on a gateway if the gateway was configured a bit differently.  First off, the root partition can set be read-only.  Modifiable configuration files can be kept in a rw directory.  Now since these are VM’s, we can write an external utility to checksum the filesystems, where we do not rely on any code within the gateway VM to do the verification.  Since the malware would only infect the VM, it is then therefore detectable.</p>
<p>For example, I would run a utility that checksums /root, /rw, /boot partitions from the host computer.  Any /tmp directorys will be trashed and recreated so are not needed to be checksumed.  If the external checksum differs from the expected result; you have reason to suspect a compromised system.  Updates to system can be applied in a special manner that would startvm with no services running with something like systemd-nspawn and update system, create new checksum and it ready for use again.</p>
<p>It would take a bit of a thought process to work out, but I think doable.</p>
<blockquote>[quote]There are traffic monitoring tools which can also be used to do same.[/quote]
Traffic monitoring can work against simpler kinds of malware, but not against sophisticated ones. (That introduce delays to communicate through them or something similarly creative.)
<aside class="quote">
<blockquote>
<p>but what about all the other hundreds of Debian packages?  Maybe the vim program has some backdoor that opens up some security hole (I sure hope it doesn’t).</p>
</blockquote>
</aside>
<p>Yeah. That’s a big issue. Those packages are much harder to grasp. Better don’t do actual research on how many people audited their code. I am sure, results would be devastating.</p>
<p>Problem is, with C(++) code, backdoors can look the very same as usual security bugs.</p>
<p>Also look up the “Debian OpenSSL debacle”.</p>
<p>Solution?</p>
<ol>
<li>Todays programming and script languages have been invented by geeks. Thanks for getting us started. Not by people who understand usability on the top level. Invent brain friendly programming and script languages, that are hard to hide backdoors, use aid from brain researches, do actual usability studies. That would allow a much bigger crowd to program and audit.</li>
<li>Use as little code as possible written in difficult languages. Minimal code that very few people are capable of auditing (assembler, C(++)).</li>
<li>Rewrite pretty much everything we got so far.</li>
</ol>
<p>Very likely to happen during my life time. Most people are happy with stuff as is. Only a minority of the Libre Software community is interested hardcore security. Once a solution works fine for most, there is little incentive to rewrite just to make backdoors much more unlikely.</p>
<aside class="quote">
<blockquote>
<p>Simplify whonix gateway firewall rules making them more easily human readable.</p>
</blockquote>
</aside>
<p>Got any specific ideas for that? Looks hard to me. Probably not possible without sacrificing functionality such as stream isolation or configurability.</p>
<aside class="quote">
<blockquote>
<p>What I would like to see is the whonix_firewall be automatically generated and only show the rules that apply right now</p>
</blockquote>
</aside>
<p>I find any solution that auto generates code from code difficult. It adds up complexity. Then one cannot just get the code from git and review. They can, but they’d need another process in their head “how would the final result look like when the generator finished”. Something to constantly explain and defend.</p>
<p>What about…</p>
<pre><code class="lang-auto"></code></pre>
<p>? That’s a compiled list, no?</p>
<p>Before making changes to a firewall (any, be it Whonix or otherwise), I run “sudo iptables --list &gt; old”. Then make changes to the firewall script. Then load the new firewall rules. (Or reboot,.) Then store the new rules also within a file. “sudo iptables --list &gt; new”. Then diff them. “diff old new”.</p>
</blockquote>
<p>That works too, but I do not find the current whonix_firewall simple since I have no idea what vars are actually enabled.  It is much easier to see what the firewall is supposed to create than to be only auditing the iptables list.  It would be a very difficult task to relate iptables to rules that were set, compared to just seeing what rules are being used to create the iptables list.</p>
<p>My suggestion only creates another step, the one to create whonix_firewall from whonix_firewall.template, where the template is the actually the original whonix_firewall script, so you can still review that to see what options are available and once you generate the whonix_firewall from it you can compare to make sure only the expected configuration was generated.</p>
<p>All you would need to do to convert the whonix_firewall to whonix_firewall.template is:</p>
<ol>
<li>mv whonix_firewall whonix_firewall.template</li>
<li>create a function something like:</li>
</ol>
<pre><code class="lang-auto">generate() {
  echo -e $* &gt;&gt; whonix_firewall
}</code></pre>
<ol start="3">
<li>place generate in front of all the iptables rules, and even comment sections</li>
</ol>
<p>So now, when whonix_filrewall.template is run, you can see exactly the firewall rules it created.</p>
<p>The main reason for doing this was is to be review the actual rules that would be used which can be of benefit to identity rules that are enabled that the user was unaware of.</p>
<p>Also what currently would happen if an ENV var was set before whonix_firewall is run, say ‘GATEWAY_ALLOW_INCOMING_SSH=1’.  Does the Whonix script make sure that the external ENVironmental vars are sanitized before running the firewall?</p>
<p>Personally, if I had a need to use Whonix, that would be one of the first things I did, but it could only be me that would have a concern like this.  Once I had confirmed the whonix_firewall rules to contain what I wanted them to contain , I would then do as you suggested and copy iptables list, and check against that every so often to make sure nothing else of modifying them.</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/22">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/22</link>
        <pubDate>Fri, 27 Feb 2015 02:47:11 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-22</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="19" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/n/f17d59/40.png" class="avatar"> nrgaway:</div>
<blockquote>
<p>A few comments from me <img src="//forums.whonix.org/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
</blockquote>
</aside>
<p>Great! <img src="//forums.whonix.org/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
<aside class="quote" data-post="19" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/n/f17d59/40.png" class="avatar"> nrgaway:</div>
<blockquote>
<p>1) Patrick has the ability to create a patch and / or add, remove files from my upstream version which will allow him to control any aspect of a release.  The qubes-whonix package will be using Patrick’s repo version to build and not the upstream version (mine).</p>
</blockquote>
</aside>
<p>Right. Understood.</p>
<p>And we should also look to independently make the best choices for the package before putting code in Patrick’s hands.</p>
<aside class="quote" data-post="19" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/n/f17d59/40.png" class="avatar"> nrgaway:</div>
<blockquote>
<p>2) I have removed this script in the version that is going to be used to build the 9.6 template</p>
</blockquote>
</aside>
<p>Right. Understood.</p>
<p>[quote=“nrgaway, post:19, topic:872”]3) I know you are trying to play the ‘devils advocate’  here which is fine but one thing I am noticing in some of you recent posts is the narrow-focus on the qubes-whonix package for security hardening.  While I agree that this is important I think it may also be just as important to expand this to other packages installed as well.</p>
<p>For instance we can spend a lot of time making sure every byte of code in qubes-whonix can not initiate some type of indented compromise or fingerprint, but what about all the other hundreds of Debian packages?  Maybe the vim program has some backdoor that opens up some security hole (I sure hope it doesn’t).[/quote]</p>
<p>Right.</p>
<p>I did generalize the concept in my discussion for all of Whonix’s packages.</p>
<p>And I think I mentioned other Linux packages as well.</p>
<p>What got this discussion initially started was the “enable-iptables-logging” script, but it has expanded further in scope, and now the “enable-iptables-logging” script is basically just being referenced as an original example of the greater code security concept in question.</p>
<p>So this qubes-whonix package audit thread context is becoming somewhat inadequate for this discussion now. Partly why I recently established a new tracker ticket for this issue to try to abstract away.</p>
<p>Patrick mentioned not thinking that the presence of extra test code/scripts in Whonix being a viable threat vector, since we can easily know if they are invoked or not, citing that for Bash code we would notice the script strings or would raise red flags if using creative methods.</p>
<p>I’m not convinced of this, personally, and think I may have an innocent looking approach to invoke such test scripts. And I’m no expert at covert code exploits at all, so realizing the limits of my own expertise, and seeing ways to pull this off, I take an even more conservative approach, than just basing my conclusions on the certainty in my own personal expertise. Again, this conservative mindset goes double for me when keeping good people’s mission critical anonymity in mind around the world.</p>
<p>Also, while integrity of anonymity &amp; security is the primary concern when auditing a platform like Qubes + Whonix, I was also looking to make the process of doing so more time-efficient.</p>
<p>I view test code/scripts as often working against this purpose. Because, often, test code/scripts do things counter to the goals of the production code (in order to test systems in alternate non-production states). This is the nature of test code/scripts. To modify the normal intended production of systems.</p>
<p>Philosophically, and often concretely…</p>
<p>PRODUCTION CODE == INTENDED SAFE PRODUCTION SYSTEM STATE</p>
<p>TEST CODE == ALTERED POTENTIALLY UNSAFE NON-PRODUCTION SYSTEM STATE</p>
<p>That’s why I was simply suggesting, since were dealing with real live anonymity systems here, to exclude such test code/scripts by default, but offer them as user optional add-on packages if need be.</p>
<p>Also, no one can audit all the other code used beyond the Whonix project. And, I don’t currently have the time to audit all of Whonix-proper itself or Qubes-proper itself. Hopefully, I’ll get more time for diving into the code of Whonix and Qubes in general down the line.</p>
<p>I do AT LEAST want to ensure that my administration of the Qubes + Whonix project involves auditing the code contributions that are specific to Qubes + Whonix, now that we aren’t just porting stock Whonix with stock Qubes anymore, but rather establishing a newly blended third inter-project platform of sorts.</p>
<p>Patrick also threw out a point about how default included tests for Whonix-proper may have more fundamental utility, like in situations where people’s internet is down. Can’t deny the principle of such scenarios. But can still advocate for security conservatism and minimalism.</p>
<p>So, with resistance experienced to this concept, and my personal audit-time capacity being much smaller than all of the packages involved, I thought I’d try to establish something first with the qubes-whonix package and then maybe expand out from there.</p>
<p>Like I mentioned, with regards to code for Qubes + Whonix, I’m personally okay with us simply omitting all test code/scripts. Or alternatively, as Patrick said he didn’t mind us doing, we could put any tests into a separate non-default-installed package, maybe “qubes-whonix-tests” or something else. Either way.</p>
<p>Made this ticket:  <span class="bbcode-b"><a href="https://phabricator.whonix.org/T191" rel="nofollow noopener">https://phabricator.whonix.org/T191</a></span></p>
<p>Personally – with code I haven’t personally written – I find it tedious to see production code that makes sense for the intended normal operational functions, but then also see “test code/scripts” existing side-by-side, and then have to go down the rabbit hole hunting for and auditing all the potential ways to confirm whether the test code is invoked by default or not.</p>
<p>Especially since our Qubes + Whonix platform now involves code inside of two separate parent project repos. In my view, it just makes thorough auditing that much more time-inefficient and potentially insecure. Not to mention the lingering security concerns of such non-production code.</p>
<p>But, I think it would be good to establish a precedent for the Qubes + Whonix platform, and not have to debate it with each bit of test code of every single release going forward. Especially as more people start writing code for Qubes + Whonix in the future.</p>
<aside class="quote" data-post="19" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/n/f17d59/40.png" class="avatar"> nrgaway:</div>
<blockquote>
<p>What I am trying to say here is I think we should look at also trying to verify every other installed Debian package as well since that is that route would be easier disguise.  With the Whonix-Gateway package being so large at the moment, this would be very difficult to achieve.  Here are my suggestions on how to accomplish this as I believe you should not complain without a solution <img src="//forums.whonix.org/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
</blockquote>
</aside>
<p>Don’t know about the “verify every other installed Debian package” part, as this doesn’t seem feasible to me. But I do like the overall direction you’re going in here. <img src="//forums.whonix.org/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
<aside class="quote" data-post="19" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/n/f17d59/40.png" class="avatar"> nrgaway:</div>
<blockquote>
<p>A) Create a whonix-gateway package minimal install.  I mean absolutely minimal, only what is required to run and configure it; no gui, nothing not specifically required to run it … bare bones.</p>
</blockquote>
</aside>
<p>Love this idea. <img src="//forums.whonix.org/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
<aside class="quote" data-post="19" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/n/f17d59/40.png" class="avatar"> nrgaway:</div>
<blockquote>
<p>B) Allow configuration of Gateway via Workstation</p>
</blockquote>
</aside>
<p>Without further detail of what you mean by this, this statement hits me as a very bad security idea.</p>
<p>AFAIK, the Gateway treats the Workstation more like an untrusted domain. Allowing the Workstation to have direct control over the domain where the Tor networking configuration and real IP exists seems like bad isolation architecture.</p>
<aside class="quote" data-post="19" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/n/f17d59/40.png" class="avatar"> nrgaway:</div>
<blockquote>
<p>C) Have a utility on Gateway that periodically checks for un-authorized changes to packages and configuration files.  There are a few out there that already do this.  Find a unauthorized or unexpected change?  shutdown gateway.  There are traffic monitoring tools which can also be used to do same.</p>
</blockquote>
</aside>
<p>I like this idea. This is another layer of some protection, and certainly a good thing.</p>
<p>But, as a caveat, if the VM gets compromised, then such periodic verification results may not be trustworthy, and be simply forged by whatever exploited occurred. But, not all exploits would design themselves to adapt for this, especially non-Whonix specific ones, and so it could still probably catch and warn of some compromises.</p>
<p>I’m actually involved in developing a new Qubes application that will be doing this for Qubes + Whonix going forward. It would not interfere with this specific implementation though, as it is separate from our Qubes + Whonix codebase. Just work as additional verification to this.</p>
<p>[quote=“nrgaway, post:19, topic:872”]Now in relation to the qubes-whonix package I think the most important thing to concentrate on at this moment are the firewall rules.  Not only the only I added, also making sure that the default whonix rules work as expected with qubes.  The Whonix firewall rules seems overly complex to me, so therefore I would also like to see:</p>
<p>D) Simplify whonix gateway firewall rules making them more easily human readable.  Currently these rules are applied or not applied based on many criteria and sometimes rules can be added from other sources as well.  What I would like to see is the whonix_firewall be automatically generated and only show the rules that apply right now.  So move existing whonix_firewall rules to whonix_firewall.template; create a script that will generate /usr/bin/whonix_firewall that contains ONLY the rules that will be set (no conditional statements based on ENV, or var, just exactly the rules that will be applied)</p>
<p>If someone changes an option, in the whonix_firewall.template, or configuration files it reads, they would run ‘generate-whonix-firewall’ which would re-create it again.  This would allow someone to easily audit the firewall rules and the order of applying them and would not have to worry about some ENV variable being set by accident, or not by accident.</p>
<p>Anyway, that’s pretty much my thoughts today.  In importance of A, B, C and D, I would like to really see ‘D’ implemented first as currently it is very difficult to know which firewall rules will be applied and there are too many spots that can be modified to change that behaviour with or without the user knowing about it.[/quote]</p>
<p>Simplification is almost always good, especially in key parts of the system.</p>
<p>I’m not familiar enough with that component of Whonix’s codebase to comment on any potential pitfalls of this proposed undertaking right now.</p>
<p>Firewall simplification sounds good in general to me.</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/21">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/21</link>
        <pubDate>Fri, 27 Feb 2015 02:09:51 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-21</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <blockquote>A) Create a whonix-gateway package minimal install.  I mean absolutely minimal, only what is required to run and configure it; no gui, nothing not specifically required to run it ... bare bones.</blockquote>
I was wondering about this also. It's hard to decide what's absolutely required and what not for minimal.
<p>Whonix could be created in so many different ways. Even with just instructions only. (That’s how it all started.)</p>
<p>Ideally, most of Whonix’s functionality would be installable from Debian’s repository. I’d love to find (co-)maintainer(s) for every package who ideally review the package, upload to Debian, so I would just be upstream. (<a href="https://www.whonix.org/wiki/Contribute#Maintainer">https://www.whonix.org/wiki/Contribute#Maintainer</a>)</p>
<p>Ideally, Whonix would not be a Debian derivative, but a Debian Pure Blend. (<a href="https://wiki.debian.org/DebianPureBlends">https://wiki.debian.org/DebianPureBlends</a>) Therefore build by Debian servers. Deterministically! Tails devs, don’t attempt this, even though intrigeri is a Debian Developer, because Tails has a 6 week release cycle and because it needs quite some time for packages to migrate from Debian unstable to testing or even stable. It could work better for Whonix. While I think, neither stable nor testing would be really suited for Whonix in the fast changing anonymity world. Rolling Debian distribution would work best. There was an attempt, CUT (Constantly Usable Testing). Unfortunately, it looks like that effort has been abandoned.</p>
<p>Ideally, Qubes would not be a distribution, but an alternative Debian kernel package + other supporting packages. Just as you can install the freebsd kernel as alternative to the linux kernel on Debian, the same would be technically possible with Qubes.</p>
<p>Needless to say, that it’s a hell of a lot work ahead. Likely, this never happens.</p>
<blockquote>B) Allow configuration of Gateway via Workstation</blockquote>
a) This would involve a protocol between gateway and workstation that comes with its own issues.
b) The workstation should not be trusted for that purpose. Changes in the workstation should not allow configuring the gateway in any malicious way such as using colluding bridges.
<blockquote>C) Have a utility on Gateway that periodically checks for un-authorized changes to packages and configuration files.  There are a few out there that already do this.  Find a unauthorized or unexpected change?  shutdown gateway.</blockquote>
This supposed a compromised gateway. But if it was compromised, with today's malware, it can do malicious stuff and make sure you won't find out. (kernel rootkit, skipping certain backdoor files in kernel file system access, etc.) Compromised (malware infected) = game over. No way around that. (For analysis however, someone could write a VM that analyzed the gateway file system or even RAM for malicious things.)
<p>Related, see “Script to System Check Integrity against Debian Package Repository”:<br>
<a href="https://lists.debian.org/debian-security/2013/09/msg00053.html" class="onebox" target="_blank">https://lists.debian.org/debian-security/2013/09/msg00053.html</a></p>
<p>A fine TODO in the Libre Software security world.</p>
<blockquote>There are traffic monitoring tools which can also be used to do same.</blockquote>
Traffic monitoring can work against simpler kinds of malware, but not against sophisticated ones. (That introduce delays to communicate through them or something similarly creative.)
<blockquote>but what about all the other hundreds of Debian packages?  Maybe the vim program has some backdoor that opens up some security hole (I sure hope it doesn't).</blockquote>
Yeah. That's a big issue. Those packages are much harder to grasp. Better don't do actual research on how many people audited their code. I am sure, results would be devastating.
<p>Problem is, with C(++) code, backdoors can look the very same as usual security bugs.</p>
<p>Also look up the “Debian OpenSSL debacle”.</p>
<p>Solution?</p>
<ol>
<li>Todays programming and script languages have been invented by geeks. Thanks for getting us started. Not by people who understand usability on the top level. Invent brain friendly programming and script languages, that are hard to hide backdoors, use aid from brain researches, do actual usability studies. That would allow a much bigger crowd to program and audit.</li>
<li>Use as little code as possible written in difficult languages. Minimal code that very few people are capable of auditing (assembler, C(++)).</li>
<li>Rewrite pretty much everything we got so far.</li>
</ol>
<p>Very likely to happen during my life time. Most people are happy with stuff as is. Only a minority of the Libre Software community is interested hardcore security. Once a solution works fine for most, there is little incentive to rewrite just to make backdoors much more unlikely.</p>
<blockquote>Simplify whonix gateway firewall rules making them more easily human readable.</blockquote>
Got any specific ideas for that? Looks hard to me. Probably not possible without sacrificing functionality such as stream isolation or configurability.
<blockquote>What I would like to see is the whonix_firewall be automatically generated and only show the rules that apply right now</blockquote>
I find any solution that auto generates code from code difficult. It adds up complexity. Then one cannot just get the code from git and review. They can, but they'd need another process in their head "how would the final result look like when the generator finished". Something to constantly explain and defend.
<p>What about…</p>
<pre><code class="lang-auto"></code></pre>
<p>? That’s a compiled list, no?</p>
<p>Before making changes to a firewall (any, be it Whonix or otherwise), I run “sudo iptables --list &gt; old”. Then make changes to the firewall script. Then load the new firewall rules. (Or reboot,.) Then store the new rules also within a file. “sudo iptables --list &gt; new”. Then diff them. “diff old new”.</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/20">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/20</link>
        <pubDate>Fri, 27 Feb 2015 00:13:29 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-20</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[nrgaway]]></dc:creator>
        <description><![CDATA[
            <p>[quote=“WhonixQubes, post:18, topic:872”]I think may have come up with a Bash code approach for covertly invoking extra test scripts that could appear completely innocent and not be caught in review.</p>
<p>And… If the concerns raised in my last post (<a href="https://www.whonix.org/forum/index.php/topic,961.msg7046.html#msg7046" rel="nofollow noopener">https://www.whonix.org/forum/index.php/topic,961.msg7046.html#msg7046</a>) are plausible attack vectors, where contributing test scripts to Whonix packages that would be bad for security/anonymity, and then invoking them from outside packages (such as Qubes), then… I think it would be even much easier to use my potential approach to compromise Whonix by changing its default production behavior/configuration.</p>
<p>And, no doubt that any other non-Whonix software package could directly invoke its own code that harms security/anonymity. But, these direct approaches could be more easily caught by the maintainers/reviewers/community of the other software packages.</p>
<p>However, working from across another outside package to invoke a non-production “test script” in Whonix might be trivially easy to do in a covert way, if done right.</p>
<p>I’ll probably work on demonstrating this covert “innocent” approach I came up with more soon.[/quote]</p>
<p>A few comments from me <img src="//forums.whonix.org/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<ol>
<li>
<p>Patrick has the ability to create a patch and / or add, remove files from my upstream version which will allow him to control any aspect of a release.  The qubes-whonix package will be using Patrick’s repo version to build and not the upstream version (mine).</p>
</li>
<li>
<p>I have removed this script in the version that is going to be used to build the 9.6 template</p>
</li>
<li>
<p>I know you are trying to play the ‘devils advocate’  here which is fine but one thing I am noticing in some of you recent posts is the narrow-focus on the qubes-whonix package for security hardening.  While I agree that this is important I think it may also be just as important to expand this to other packages installed as well.</p>
</li>
</ol>
<p>For instance we can spend a lot of time making sure every byte of code in qubes-whonix can not initiate some type of indented compromise or fingerprint, but what about all the other hundreds of Debian packages?  Maybe the vim program has some backdoor that opens up some security hole (I sure hope it doesn’t).</p>
<p>What I am trying to say here is I think we should look at also trying to verify every other installed Debian package as well since that is that route would be easier disguise.  With the Whonix-Gateway package being so large at the moment, this would be very difficult to achieve.  Here are my suggestions on how to accomplish this as I believe you should not complain without a solution <img src="//forums.whonix.org/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>A) Create a whonix-gateway package minimal install.  I mean absolutely minimal, only what is required to run and configure it; no gui, nothing not specifically required to run it … bare bones.<br>
B) Allow configuration of Gateway via Workstation<br>
C) Have a utility on Gateway that periodically checks for un-authorized changes to packages and configuration files.  There are a few out there that already do this.  Find a unauthorized or unexpected change?  shutdown gateway.  There are traffic monitoring tools which can also be used to do same.</p>
<p>Now in relation to the qubes-whonix package I think the most important thing to concentrate on at this moment are the firewall rules.  Not only the only I added, also making sure that the default whonix rules work as expected with qubes.  The Whonix firewall rules seems overly complex to me, so therefore I would also like to see:</p>
<p>D) Simplify whonix gateway firewall rules making them more easily human readable.  Currently these rules are applied or not applied based on many criteria and sometimes rules can be added from other sources as well.  What I would like to see is the whonix_firewall be automatically generated and only show the rules that apply right now.  So move existing whonix_firewall rules to whonix_firewall.template; create a script that will generate /usr/bin/whonix_firewall that contains ONLY the rules that will be set (no conditional statements based on ENV, or var, just exactly the rules that will be applied)</p>
<p>If someone changes an option, in the whonix_firewall.template, or configuration files it reads, they would run ‘generate-whonix-firewall’ which would re-create it again.  This would allow someone to easily audit the firewall rules and the order of applying them and would not have to worry about some ENV variable being set by accident, or not by accident.</p>
<p>Anyway, that’s pretty much my thoughts today.  In importance of A, B, C and D, I would like to really see ‘D’ implemented first as currently it is very difficult to know which firewall rules will be applied and there are too many spots that can be modified to change that behaviour with or without the user knowing about it.</p>
<p>Thoughts, opinions or comments most welcomed <img src="//forums.whonix.org/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/19">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/19</link>
        <pubDate>Thu, 26 Feb 2015 22:34:07 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-19</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <p>I think may have come up with a Bash code approach for covertly invoking extra test scripts that could appear completely innocent and not be caught in review.</p>
<p>And… If the concerns raised in my last post (<a href="https://www.whonix.org/forum/index.php/topic,961.msg7046.html#msg7046" rel="nofollow noopener">https://www.whonix.org/forum/index.php/topic,961.msg7046.html#msg7046</a>) are plausible attack vectors, where contributing test scripts to Whonix packages that would be bad for security/anonymity, and then invoking them from outside packages (such as Qubes), then… I think it would be even much easier to use my potential approach to compromise Whonix by changing its default production behavior/configuration.</p>
<p>And, no doubt that any other non-Whonix software package could directly invoke its own code that harms security/anonymity. But, these direct approaches could be more easily caught by the maintainers/reviewers/community of the other software packages.</p>
<p>However, working from across another outside package to invoke a non-production “test script” in Whonix might be trivially easy to do in a covert way, if done right.</p>
<p>I’ll probably work on demonstrating this covert “innocent” approach I came up with more soon.</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/18">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/18</link>
        <pubDate>Mon, 23 Feb 2015 21:24:21 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-18</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="16" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"> Patrick:</div>
<blockquote>
<p>[quote]When auditing this current “qubes-whonix” package version, would it have been an issue if the “enable-iptables-logging” script had been invoked and executed by default?</p>
</blockquote>
</aside>
<p>Maybe. I didn’t review for correctness. This means, I haven’t toughly thought through all the firewall rules.[/quote]</p>
<p>Right. I was in the same position… Maybe.</p>
<p>I hadn’t thought of all the ways such rules could be potentially not good for anonymity.</p>
<p>And of course the test script could have been something more invasive (“for testing or debugging purposes”) than a traffic logger.</p>
<aside class="quote" data-post="16" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"> Patrick:</div>
<blockquote>
<p>[quote]If an issue, how did you check to ensure that it was not invoked and executed by default?</p>
</blockquote>
</aside>
<p>To run /usr/lib/qubes-whonix/enable-iptables-logging you somehow need to use these strings.[/quote]</p>
<p>Right. And, so did you also check for Whonix related code inside the Qubes package repos for the invocation of these strings?</p>
<p>Wouldn’t this also be a plausible method for slipping in some anonymity breaking/weakening code, by including something in Whonix that modifies anonymity integrity, as a disabled “test script”, but then invoke it from another place like the Qubes packages, so the code still passes inspection with each project and gets included into the production codebases.</p>
<p>So my point is… By having invasive “tests scripts” included extra, which can potentially modify the intended production integrity of anonymity, for “testing or debugging purposes”, then we certainly have to be aware if they are ever being invoked by default for user’s machines, right?</p>
<p>And, even if we can be reasonably sure they aren’t invoked from code inside the direct package or Whonix repo, isn’t it plausible that such test code/scripts could be invoked from another place, like say the Qubes packages? Even if not present right now, then what about invoking them later via future changes to third party packages?</p>
<p>However, if… Whonix by default were to isolate out the non-production purposed test code/scripts, then we wouldn’t have to even have to think about monitoring for the prospect of their invocation beyond Whonix’s own packages. But if these extra non-production scripts are included by default, what’s in place that would stop them from being enabled by default from elsewhere and potentially being quite harmful to Whonix users anonymity?</p>
<p>[hr]</p>
<p>[Note: Again, not to call <a class="mention" href="http://forums.whonix.org/u/nrgaway">@nrgaway</a> into question personally at all. He’s doing some great stuff for Qubes and Whonix! Just trying to analyze everything with a skeptical eye in an unbiased way. The core issue goes beyond any example code being discussed now. Would look at things the same way even if RMS was coding for Qubes + Whonix.]</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/17">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/17</link>
        <pubDate>Sat, 21 Feb 2015 14:06:27 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-17</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <blockquote>When auditing this current "qubes-whonix" package version, would it have been an issue if the "enable-iptables-logging" script had been invoked and executed by default?</blockquote>
Maybe. I didn't review for correctness. This means, I haven't toughly thought through all the firewall rules. Things I did were checking the absence of binary files, not wiping / during installation, not setting up remote access and the like.
<blockquote>If an issue, how did you check to ensure that it was not invoked and executed by default?</blockquote>
To run /usr/lib/qubes-whonix/enable-iptables-logging you somehow need to use these strings. Maybe it's split into /usr/lib/qubes-whonix and enable-iptables-logging. Perhaps while both of them are variables. And then run as [font=courier]$cmd[/font] .Without using these strings in one or another combination, it is not possible to run that script by default. Well, one could go creative and make something like [font=courier]a="[u]/[/u]"; b="${a}[u]u[/u]"; c="${b}[u]s[/u]"; d="${c}[u]r[/u]"[/font] and thereby construct that string, but then doing such strange things would raise a red flag.
<p>For the most part shell scripts are almost as easily readable “as plain text”, as you’d manually entered these commands into a shell.</p>
<p>Related, if there where less hacks, more fixed upstream, the qubes-whonix package could be greatly simplified:<br>
<a href="https://www.whonix.org/forum/index.php/topic,841.msg7019.html#msg7019" class="onebox" target="_blank">https://www.whonix.org/forum/index.php/topic,841.msg7019.html#msg7019</a></p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/16">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/16</link>
        <pubDate>Sat, 21 Feb 2015 12:18:26 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-16</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <p>I agree that tests can help users out and can have some value as default installed when internet connection is down, depending upon specific package and tests in question.</p>
<p>I guess I gravitate towards a conservative perspective when concerning the codebase of anonymity systems, of not including extra code, scripts, features that may run counter to preserving security/anonymity. And also generally assume that either I may have audited less than perfect or that there are means beyond my expertise to pass my scrutiny for invoking such extra code. With people’s mission critical anonymity on the line, I guess I naturally prefer to take these conservative views of defaulting towards simplifying auditing and stripping out non-production code/scripts.</p>
<p>For example…</p>
<p>When auditing this current “qubes-whonix” package version, would it have been an issue if the “enable-iptables-logging” script had been invoked and executed by default?</p>
<p>If an issue, how did you check to ensure that it was not invoked and executed by default?</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/15">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/15</link>
        <pubDate>Fri, 20 Feb 2015 15:02:12 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-15</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>What I also find useful is to have tests installed by default. For example the /usr/lib/anon-dist/chroot-scripts-pre.d/20_sanity_checks is useful sometimes to ask users who have issues to run it. Otherwise you’d have to ask them to install an extra package (which may not be possible) or they’d even want to install it from source. Which adds extra complexity.</p>
<p>I had in mind perhaps during package builds to run - if existing - /usr/share/pkg-name/unit_test and to fail closed.</p>
<aside class="quote" data-post="13" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/w/c5a1d2/40.png" class="avatar"> WhonixQubes:</div>
<blockquote>
<p>Generally, probably true a majority of the time. However, I think there are probably means not covered by messy packages or sloppy reviews where test code/scripts can be invoked. Coordinating across multiple packages or applications could be an example of this. And, while I’m not an expert in these arts, I remember hearing of all kinds of examples where code can be strategically written to look normal but invoke unforeseen consequences.</p>
</blockquote>
</aside>
<p>I am not convinced this applies here. Sure this applies to simple bash scripts or rather C(++) code where a “&amp;” or “+” can make a difference between safe code and remotely exploitable?</p>
<blockquote>Making isolated "-tests" packages for each individual package, which are not installed by default?</blockquote>
Not sure if -tests is the right name.
<p>I am not exited about this. Also not because if you change the interface (variable names, calling arguments, function names, etc.) you easily forget to update the unit test. Or as someone who just reviews a single package and thinks unit tests don’t even exist. But I wouldn’t mind about a single more -tests package. Should be up to the package maintainers indeed.</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/14">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/14</link>
        <pubDate>Fri, 20 Feb 2015 11:03:39 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-14</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="12" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"> Patrick:</div>
<blockquote>
<p>I don’t have a strong opinion where they should go. Other packages from Debian also come with lots of documentation, examples and unit tests. Example: apt-file list config-package-dev</p>
</blockquote>
</aside>
<p>Right. I’m aware it is currently the norm for test code and scripts to be shipped in production software, including anonymity systems.</p>
<p>So it is going on more of an ideal notion of optimization to not ship them as defaults in production anonymity systems.</p>
<p>I wouldn’t have any issue with making them available as optional add-on packages.</p>
<aside class="quote" data-post="12" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Unit tests are important. If there is obfuscated means to start them undetected, then the package must be a mess or a sloppy review.</p>
</blockquote>
</aside>
<p>Generally, probably true a majority of the time. However, I think there are probably means not covered by messy packages or sloppy reviews where test code/scripts can be invoked. Coordinating across multiple packages or applications could be an example of this. And, while I’m not an expert in these arts, I remember hearing of all kinds of examples where code can be strategically written to look normal but invoke unforeseen consequences.</p>
<aside class="quote" data-post="12" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"> Patrick:</div>
<blockquote>
<p>And users doing undocumented stuff, such as running scripts from /usr/share/pkg-name/test/xxx… Well, I don’t think we can protect the user from shooting their own feet.</p>
</blockquote>
</aside>
<p>Yup, I agree with this.</p>
<p>My main concern is with:</p>
<ul>
<li>Simplifying the auditability of the codebase.</li>
<li>Removing attack surface for would-be evil developers.</li>
</ul>
<aside class="quote" data-post="12" data-topic="872">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"> Patrick:</div>
<blockquote>
<p>What I think what would be a bad idea, would be a giant package with unit tests for stuff like sdwdate mixed with qubes-whonix. Because sdwdate is general purpose package for any distribution. Then that giant package would look like a mess for anyone we ask to contribute unit tests for their newly written stuff for.</p>
</blockquote>
</aside>
<p>Yeah, I can see that a cross-package tests bundle would not be a good idea for the reason you mentioned.</p>
<p>How about instead…</p>
<p>Making isolated “-tests” packages for each individual package, which are not installed by default?</p>
<p>So, for example, “qubes-whonix” would have a corresponding “qubes-whonix-tests” package.</p>
<p>Also, personally speaking, my main concern here is with “qubes-whonix”.</p>
<p>Since I’m a maintainer of the project, will use it as part of my own personal OS, and have limited time/resources as being one individual to audit every piece of code I use.</p>
<p>So while I do think it would be a good idea for all of Whonix to isolate test code/scripts to separate packages that aren’t shipped, by default, in production…</p>
<p>I’d be personally satisfied at this point, if this ideology were just applied to “qubes-whonix”.</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/13">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/13</link>
        <pubDate>Wed, 18 Feb 2015 21:08:02 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-13</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>I don’t have a strong opinion where they should go. Other packages from Debian also come with lots of documentation, examples and unit tests. Example: apt-file list config-package-dev<br>
Unit tests are important. If there is obfuscated means to start them undetected, then the package must be a mess or a sloppy review. And users doing undocumented stuff, such as running scripts from /usr/share/pkg-name/test/xxx… Well, I don’t think we can protect the user from shooting their own feet.</p>
<p>What I think what would be a bad idea, would be a giant package with unit tests for stuff like sdwdate mixed with qubes-whonix. Because sdwdate is general purpose package for any distribution. Then that giant package would look like a mess for anyone we ask to contribute unit tests for their newly written stuff for.</p>
<p>[hr]</p>
<p>Will answer/closer the review ticket. (<a href="https://phabricator.whonix.org/T181">https://phabricator.whonix.org/T181</a>)</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/12">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/12</link>
        <pubDate>Mon, 16 Feb 2015 20:23:54 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-12</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <p>So I’m now satisfied with my cursory audit of the proposed “qubes-whonix” 9.6-1 package version.</p>
<p>I have now looked through the entire code in the <a class="mention" href="http://forums.whonix.org/u/nrgaway">@nrgaway</a> and <span class="mention">@Whonix</span> GitHub repos for the “qubes-whonix” package up to the following commits…</p>
<ul>
<li>
<p><a href="https://github.com/nrgaway/qubes-whonix/commit/18437a8d99281773dafc4bd2b25ccab948bba0dd" rel="nofollow noopener">https://github.com/nrgaway/qubes-whonix/commit/18437a8d99281773dafc4bd2b25ccab948bba0dd</a></p>
</li>
<li>
<p><a href="https://github.com/Whonix/qubes-whonix/commit/8bbc0ae3a157e74621fb20ca3209cc67045f6f4b" rel="nofollow noopener">https://github.com/Whonix/qubes-whonix/commit/8bbc0ae3a157e74621fb20ca3209cc67045f6f4b</a></p>
</li>
</ul>
<p>My cursory review and stamp of approval – for what its worth – should not be taken as any kind of in-depth or professional security audit by others following along.</p>
<p>OK stamp given from me. <img src="//forums.whonix.org/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
<p>After any remaining issues of Patrick’s are resolved, I assume the .deb for the Whonix APT repo can be produced, uploaded, and made available for when the new ITL compiled Whonix templates come online?</p>
<p>[hr]</p>
<p>I would like to establish a more formal coordination process, with more time available for community awareness and audits before moving to release, for future versions. Will be following up on hammering out the details of this topic later.</p>
<p>[hr]</p>
<p>Thanks for your development work <a class="mention" href="http://forums.whonix.org/u/nrgaway">@nrgaway</a> and auditing/finalizing work <a class="mention" href="http://forums.whonix.org/u/patrick">@Patrick</a>. <img src="//forums.whonix.org/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>I have a few things to wrap up on a lagging project with my day job this week, then I’ll be back to finishing public leak testing and the new documentation for this platform.</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/11">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/11</link>
        <pubDate>Mon, 16 Feb 2015 16:53:44 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-11</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <p>[quote=“Patrick, post:9, topic:872”]I don’t think those need to be removed. I am in favor of having great dev tools available.</p>
<p>If we had unit tests, we could put them into:</p>
<pre><code class="lang-auto"></code></pre>
<p>As far I know, this is also allowed by debian policy.</p>
<p>For test scripts, we could put them into:</p>
<pre><code class="lang-auto"></code></pre>
<p>Or so.</p>
<p>Alternatively, a separate package could be created.[/quote]</p>
<p>The proposition of having great dev/test tools available is something I agree with.</p>
<p>My concern is primarily with security auditing.</p>
<p>Dev/test tools often tend to do things that go against optimal anonymity posture in mission critical anonymity environments (like logging additional network traffic, for example).</p>
<p>More scripts and code means there is more to audit and makes it less simple and more time consuming to do so well.</p>
<p>For example, with the single “enable-iptables-logging” script, I had to check all around the “qubes-whonix” package, the other ITL “qubes” repos, and the other Whonix packages to confirm it absolutely wasn’t being invoked somewhere, despite the practicality of it not being so. Even still, with only my cursory grep check, it is still possible for this to still be invoked by obfuscated means that I have not searched for. So that’s one example.</p>
<p>By extra tools like this remaining in as defaults, every thorough audit of a code update would want to keep each and every one of these tools in mind (which is quite hard not to forget about after a while).</p>
<p>If it simply wasn’t there, there would be zero potential concerns or extra time wasted on auditing it.</p>
<p>And their default presence places a similar burden on every new person wanting to audit the package codebase, for each single extra tool and future update.</p>
<p>So, I do support the notion of having great extra dev/test tools available.</p>
<p>However, I generally don’t think they should be included as defaults, due to the added burden of complexity in auditing for potential default interactions with other code. Especially in anonymity systems.</p>
<p>So, yes, let’s make such tools available, but I’d like to see them not included by default.</p>
<p>So, maybe as a separate package(s) that can be optionally downloaded/installed? …and therefore be provably not invoked by any obfuscated or unchecked default means.</p>
<p>And I’m not trying to single any individual out here. Rather, I’m putting my evil hat on, looking for exploitable attack surface in the development of Whonix, and trying to get rid of such possibilities/vectors. I see the inclusion of such extra tools as a potential vector for such attack, even if it is another future developer who decides to contribute some obfuscated means to another component in Whonix, Qubes, Tor, Debian, etc, in order to take advantage of something seemingly harmless.</p>
<p>Does this approach sound okay for a separate package for such extra test tools?</p>
<p>Maybe it would make sense to have a generalized single package where all such extra non-default tools for Whonix could be placed? Then the default Whonix could be that much more of a lean and mean auditable machine. <img src="//forums.whonix.org/images/emoji/twitter/smiley.png?v=5" title=":smiley:" class="emoji" alt=":smiley:"></p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/10">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/10</link>
        <pubDate>Mon, 16 Feb 2015 15:59:36 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-10</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>I don’t think those need to be removed. I am in favor of having great dev tools available.</p>
<p>If we had unit tests, we could put them into:</p>
<pre><code class="lang-auto"></code></pre>
<p>As far I know, this is also allowed by debian policy.</p>
<p>For test scripts, we could put them into:</p>
<pre><code class="lang-auto"></code></pre>
<p>Or so.</p>
<p>Alternatively, a separate package could be created.</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/9">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/9</link>
        <pubDate>Mon, 16 Feb 2015 15:00:58 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-9</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[nrgaway]]></dc:creator>
        <description><![CDATA[
            <p>[quote=“WhonixQubes, post:4, topic:872”][quote author=nrgaway link=topic=961.msg6997#msg6997 date=1424069012]</p>
<aside class="quote">
<blockquote>
<p><a class="mention" href="http://forums.whonix.org/u/nrgaway">@nrgaway</a></p>
<p>Regarding: /usr/lib/qubes-whonix/enable-iptables-logging</p>
<p><a href="https://github.com/nrgaway/qubes-whonix/blob/master/usr/lib/qubes-whonix/enable-iptables-logging" rel="nofollow noopener">https://github.com/nrgaway/qubes-whonix/blob/master/usr/lib/qubes-whonix/enable-iptables-logging</a><br>
<a href="https://github.com/nrgaway/qubes-whonix/blob/9.6-1/usr/lib/qubes-whonix/enable-iptables-logging" rel="nofollow noopener">https://github.com/nrgaway/qubes-whonix/blob/9.6-1/usr/lib/qubes-whonix/enable-iptables-logging</a></p>
<pre><code class="lang-auto">#!/bin/bash -e
# vim: set ts=4 sw=4 sts=4 et :

# Check /var/log/kern.log for logging results

LOG_IP4=1
LOG_IP6=0

# for IPv4
if [ "$LOG_IP4" == "1" ]; then
    iptables -t raw -A OUTPUT -p icmp -j TRACE
    iptables -t raw -A PREROUTING -p icmp -j TRACE
    modprobe ipt_LOG
fi

# for IPv6
if [ "$LOG_IP6" == "1" ]; then
    ip6tables -t raw -A OUTPUT -p icmpv6 --icmpv6-type echo-request -j TRACE
    ip6tables -t raw -A OUTPUT -p icmpv6 --icmpv6-type echo-reply -j TRACE
    ip6tables -t raw -A PREROUTING -p icmpv6 --icmpv6-type echo-request -j TRACE
    ip6tables -t raw -A PREROUTING -p icmpv6 --icmpv6-type echo-reply -j TRACE
    modprobe ip6t_LOG
fi

# Redirect local port to remote via socat
# ---------------------------------------
# apt-get install socat
# socat TCP4-LISTEN:8082,fork,mode=0666,user=root,group=root TCP4:10.137.255.254:8082
#
# Works
# localhost/loopback maps localhost port 8082 to localhost port 8888
# iptables -t nat -I OUTPUT -p tcp -d 127.0.0.1 --dport 8082 -j REDIRECT --to-ports 8888
</code></pre>
<p>What is the purpose of this ICMP traffic logging script?</p>
<p>And where is this script called from?</p>
</blockquote>
</aside>
<p>It is not called from anywhere.  I manually start it in a terminal when debugging firewall issues.  I have not needed to use it in some time, but I left it in case network issues come up and that can then be used to help determine the issue.<br>
[/quote]</p>
<p>Got it.</p>
<p>It would probably be best to strip developer test scripts and code like this out from public releases.</p>
<p>In order to make the software leaner, less complex, more auditable, and trusted.[/quote]</p>
<p>Okay, Its been removed</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/8">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/8</link>
        <pubDate>Mon, 16 Feb 2015 11:53:02 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-8</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
      <item>
        <title>Issue T181: Audit of Proposed qubes-whonix 9.6-1</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Moved and answered the question on how to sort tickets here:<br>
<a href="https://phabricator.whonix.org/T178" class="onebox" target="_blank">https://phabricator.whonix.org/T178</a></p>
<p>That should hopefully do? I think we can make phabricator work for us. Would wonder if not. It’s uses by much bigger projects (facebook).</p>
          <p><a href="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/7">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872/7</link>
        <pubDate>Mon, 16 Feb 2015 09:18:49 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-872-7</guid>
        <source url="http://forums.whonix.org/t/issue-t181-audit-of-proposed-qubes-whonix-9-6-1/872.rss">Issue T181: Audit of Proposed qubes-whonix 9.6-1</source>
      </item>
  </channel>
</rss>

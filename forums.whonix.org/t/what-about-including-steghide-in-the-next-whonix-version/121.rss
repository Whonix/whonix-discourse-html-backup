<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>What about including steghide in the next whonix version?</title>
    <link>http://forums.whonix.org/t/what-about-including-steghide-in-the-next-whonix-version/121</link>
    <description>Steganography is a powerful instrument to hide the fact of hiding and avoiding suspicion from/on part of the spying bodies. Also it will let more users learn about steganography because some of them have never heard about it.

What about implementing a double encryption feature with steganography included?

I have already checked the following commands and they work nice. You can develop them further and put a shortcut to menu or smth.

The commands:

Encrypt the file1.anyextension and hide it in file2.jpgorwav with creation of the newresultingfile.jpgorwav (file2.jpgorwav remains in the original state without the embedded file):

openssl enc -aes-256-cbc -in file1.anyextension | steghide embed -z 9 -N -e rijndael-256 -p  yourpassword -cf file2.jpgorwav -ef - -sf newresultingfile.jpgorwav

Extract the embedded file and decrypt it:

steghide extract -p  yourpassword -sf newresultingfile.jpgorwav -xf - | openssl enc -aes-256-cbc -d  &gt; anyfilename.theknownextension

Attention! The receiver should know the extension of the hidden file and both passwords: one for ssl and one for stegide.

Actually you get a triple encryption when using GPG-based mail. Also you may change AES by other encryption algorithms.

Using this method you get double AES-256 encryption which is believed to be free of backdoors currently. If you distrust steghide software you still are protected with openssl.

Why i think this method is valuable it is because it&#39;s quite difficult for most people to figure out how to use GPG/PGP in thunderbird, icedove. Many people do not understand the difference between MIME PGP and inline encryption. While trying to teach other people to use them I saw them making deadly mistakes all the time like sending files with inline encryption where only text was encrypted. 

But with the proposed method u just need to have one wav or jpg file and use it as a container. Of course the person may write the email text in a text file and use this method to hide the text.

The obtained benefits:
1. Enigmail is not even needed.
2. You may use email servers not supporting GPG/PGP.
3. You may send stegofiles from any other computer (or from the host OS) without need to use TOR and without need to hide.

What do u think about it?</description>
    <language>en</language>
    <lastBuildDate>Tue, 04 Mar 2014 12:57:57 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="http://forums.whonix.org/t/what-about-including-steghide-in-the-next-whonix-version/121.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>What about including steghide in the next whonix version?</title>
        <dc:creator><![CDATA[Occq]]></dc:creator>
        <description><![CDATA[
            <ol>
<li>Enigmail is not needed for GPG encrypted mail. It’s just convenient.</li>
<li>A rarely seen limitation.</li>
<li>Using Tor is irrelevant in this case.</li>
<li>The whole field is very low signal, software is old. I am more sure in the GPG implementation of encryption algos then I am in steghide’s.</li>
</ol>
          <p><a href="http://forums.whonix.org/t/what-about-including-steghide-in-the-next-whonix-version/121/3">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/what-about-including-steghide-in-the-next-whonix-version/121/3</link>
        <pubDate>Tue, 04 Mar 2014 12:57:57 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-121-3</guid>
        <source url="http://forums.whonix.org/t/what-about-including-steghide-in-the-next-whonix-version/121.rss">What about including steghide in the next whonix version?</source>
      </item>
      <item>
        <title>What about including steghide in the next whonix version?</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>By having a quick look, steghide seems unmaintained and dead upstream:<br>
<a href="http://sourceforge.net/p/steghide/mailman/steghide-devel/" class="onebox" target="_blank">http://sourceforge.net/p/steghide/mailman/steghide-devel/</a></p>
          <p><a href="http://forums.whonix.org/t/what-about-including-steghide-in-the-next-whonix-version/121/2">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/what-about-including-steghide-in-the-next-whonix-version/121/2</link>
        <pubDate>Sun, 02 Mar 2014 16:11:22 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-121-2</guid>
        <source url="http://forums.whonix.org/t/what-about-including-steghide-in-the-next-whonix-version/121.rss">What about including steghide in the next whonix version?</source>
      </item>
      <item>
        <title>What about including steghide in the next whonix version?</title>
        <dc:creator><![CDATA[anonuser]]></dc:creator>
        <description><![CDATA[
            <p>Steganography is a powerful instrument to hide the fact of hiding and avoiding suspicion from/on part of the spying bodies. Also it will let more users learn about steganography because some of them have never heard about it.</p>
<p>What about implementing a double encryption feature with steganography included?</p>
<p>I have already checked the following commands and they work nice. You can develop them further and put a shortcut to menu or smth.</p>
<p>The commands:</p>
<p>Encrypt the file1.anyextension and hide it in file2.jpgorwav with creation of the newresultingfile.jpgorwav (file2.jpgorwav remains in the original state without the embedded file):</p>
<p>openssl enc -aes-256-cbc -in file1.anyextension | steghide embed -z 9 -N -e rijndael-256 -p  yourpassword -cf file2.jpgorwav -ef - -sf newresultingfile.jpgorwav</p>
<p>Extract the embedded file and decrypt it:</p>
<p>steghide extract -p  yourpassword -sf newresultingfile.jpgorwav -xf - | openssl enc -aes-256-cbc -d  &gt; anyfilename.theknownextension</p>
<p>Attention! The receiver should know the extension of the hidden file and both passwords: one for ssl and one for stegide.</p>
<p>Actually you get a triple encryption when using GPG-based mail. Also you may change AES by other encryption algorithms.</p>
<p>Using this method you get double AES-256 encryption which is believed to be free of backdoors currently. If you distrust steghide software you still are protected with openssl.</p>
<p>Why i think this method is valuable it is because it’s quite difficult for most people to figure out how to use GPG/PGP in thunderbird, icedove. Many people do not understand the difference between MIME PGP and inline encryption. While trying to teach other people to use them I saw them making deadly mistakes all the time like sending files with inline encryption where only text was encrypted.</p>
<p>But with the proposed method u just need to have one wav or jpg file and use it as a container. Of course the person may write the email text in a text file and use this method to hide the text.</p>
<p>The obtained benefits:</p>
<ol>
<li>Enigmail is not even needed.</li>
<li>You may use email servers not supporting GPG/PGP.</li>
<li>You may send stegofiles from any other computer (or from the host OS) without need to use TOR and without need to hide.</li>
</ol>
<p>What do u think about it?</p>
          <p><a href="http://forums.whonix.org/t/what-about-including-steghide-in-the-next-whonix-version/121/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/what-about-including-steghide-in-the-next-whonix-version/121/1</link>
        <pubDate>Sun, 02 Mar 2014 15:17:23 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-121-1</guid>
        <source url="http://forums.whonix.org/t/what-about-including-steghide-in-the-next-whonix-version/121.rss">What about including steghide in the next whonix version?</source>
      </item>
  </channel>
</rss>

<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Untrusted Root - improve Security by Restricting Root</title>
    <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998</link>
    <description>Is it currently being argued towards `Untrusted Root`?

I.e. do you think it is a good idea to try to restrict malware which gained root access?

examples which may point into that direction:

* https://forums.whonix.org/t/blacklist-more-kernel-modules-to-reduce-attack-surface/7989/8
* https://forums.whonix.org/t/allow-loading-signed-kernel-modules-by-default-disallow-kernel-module-loading-by-default/7880
* https://forums.whonix.org/t/enable-linux-kernel-gpg-verification-in-grub-and-or-enable-secure-boot-by-default/7894

https://forums.whonix.org/t/blacklist-more-kernel-modules-to-reduce-attack-surface/7989/10

Goal of `untrusted root` could be:

* to protect the virtualizer (and in effect, avoid host compromise, and similarly the hardware to avoid hardware compromise)
* an untrusted root in Whonix-Workstation might have less options attacking Whonix-Gateway?
* make kernel compromise non-persistent after reboot through combined use with [secure boot](https://forums.whonix.org/t/enable-linux-kernel-gpg-verification-in-grub-and-or-enable-secure-boot-by-default/7894)?
* A compromised root is less worse than a compromised kernel? Is that even a valid concept?
* different goals?
* other goals?

I don&#39;t know if `untrusted root` isn&#39;t a fully developed kernel concept yet (or ever).

On `untrusted root`: https://lwn.net/Articles/523367/

It is important to make the case of the usefulness or non-usefulness of `untrusted root`. In case `untrusted root` is broken by concept, a usability issues, feature breakage may be introduced and time may be wasted on it.</description>
    <language>en</language>
    <lastBuildDate>Sun, 22 Dec 2019 14:38:56 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="23" data-topic="7998" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>It restricts root pretty well already. Only 26 capabilities out of 38 are permitted and I’ve plans to restrict this even further.</p>
</blockquote>
</aside>
<p>Once my newest pull requests are merged, this will go down to 22 out of 38.</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/30">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/30</link>
        <pubDate>Sun, 22 Dec 2019 14:38:56 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-30</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Thanks to <a href="https://github.com/Whonix/apparmor-profile-everything">https://github.com/Whonix/apparmor-profile-everything</a> untrusted root comes closer. And thanks to untrusted root, we could generated signing keys on the user’s machine which untrusted root has no access to. These could then be used for various good things:</p>
<ul>
<li>
<a href="https://www.whonix.org/wiki/Verified_Boot">https://www.whonix.org/wiki/Verified_Boot</a> (sign kernel images, perhaps initrd), and</li>
<li><a href="https://forums.whonix.org/t/enforce-kernel-module-software-signature-verification-module-signing-disallow-kernel-module-loading-by-default/7880" class="inline-onebox">enforce kernel module software signature verification [module signing] / disallow kernel module loading by default</a></li>
</ul>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/29">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/29</link>
        <pubDate>Sun, 15 Dec 2019 09:01:32 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-29</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Untrusted root is being worked on.</p>
<ul>
<li><a href="https://forums.whonix.org/t/apparmor-for-complete-system-including-init-pid1-systemd-everything-full-system-mac-policy/8339" class="inline-onebox">AppArmor for Complete System - Including init, PID1, Systemd, Everything! - Full System MAC policy</a></li>
<li><a href="https://forums.whonix.org/t/kernel-hardening/7296" class="inline-onebox">Kernel Hardening</a></li>
</ul>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicon.ico" class="site-icon" width="16" height="16">
      <a href="https://github.com/Whonix/security-misc" target="_blank">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://avatars3.githubusercontent.com/u/4500165?s=400&amp;v=4" class="thumbnail" width="" height="">

<h3><a href="https://github.com/Whonix/security-misc" target="_blank">Whonix/security-misc</a></h3>

<p>Kernel Self Protection; Enhances Misc Security Settings - Whonix/security-misc</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://www.whonix.org/favicon.ico" class="site-icon" width="16" height="16">
      <a href="https://www.whonix.org/wiki/Linux_Kernel_Runtime_Guard_LKRG" target="_blank" title="08:52AM - 25 November 2019">Whonix – 25 Nov 19</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:110/63;"><img src="https://www.whonix.org/w/images/thumb/a/a7/P_lkrg2.png/470px-P_lkrg2.png" class="thumbnail"></div>

<h3><a href="https://www.whonix.org/wiki/Linux_Kernel_Runtime_Guard_LKRG" target="_blank">Linux Kernel Runtime Guard LKRG</a></h3>

<p>Protect your System Security. Kernel Security Hardening. Kills whole Classes of Kernel Exploits. Linux Kernel Runtime Integrity Checking and Exploit Detection.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/28">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/28</link>
        <pubDate>Mon, 25 Nov 2019 16:06:34 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-28</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>forest not gonna read forums. Only means of communication is e-mail or mailinglist (public, better).</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/27">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/27</link>
        <pubDate>Thu, 31 Oct 2019 14:56:38 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-27</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <p>It’s great forest agreed to help us.</p>
<blockquote>
<p>AppArmor is probably not going to cut it. Although there are hacky ways to get it to work with PID 1, you’d be much better off with SELinux or, even better, Grsecurity’s RBAC (requires subscription, but provides overwhelmingly better security than possible with vanilla Linux).</p>
</blockquote>
<p>SELinux would be preferred but I have no experience in writing SELinux policies so I can’t work with it.</p>
<p>Grsec RBAC isn’t really a viable option. We’d need to pay grsec a large amount of money to be able to distribute it in Whonix, if they’d even let us at all.</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/26">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/26</link>
        <pubDate>Thu, 31 Oct 2019 14:47:53 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-26</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p><a href="https://security.stackexchange.com/users/165253/forest" rel="nofollow noopener">forest</a> is the author or <a href="https://security.stackexchange.com/questions/119712/methods-root-can-use-to-elevate-itself-to-kernel-mode" rel="nofollow noopener">https://security.stackexchange.com/questions/119712/methods-root-can-use-to-elevate-itself-to-kernel-mode</a>. Contacted <a href="https://security.stackexchange.com/users/165253/forest" rel="nofollow noopener">forest</a>.</p>
<p>Quote <a href="https://www.whonix.org/pipermail/whonix-devel/2019-October/001471.html" rel="nofollow noopener">https://www.whonix.org/pipermail/whonix-devel/2019-October/001471.html</a></p>
<p>On 2019-10-29 03:36 PM, Patrick Schleizer wrote:</p>
<blockquote>
<p>Hi forest,</p>
<p>we are working on software packages towards untrusted root. Please<br>
kindly consider joining our efforts.</p>
<p><a href="https://security.stackexchange.com/questions/119712/methods-root-can-use-to-elevate-itself-to-kernel-mode" rel="nofollow noopener">https://security.stackexchange.com/questions/119712/methods-root-can-use-to-elevate-itself-to-kernel-mode</a>&gt;<br>
<a href="https://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998" class="inline-onebox">Untrusted Root - improve Security by Restricting Root</a>&gt;<br>
<a href="https://github.com/Whonix/security-misc" rel="nofollow noopener">https://github.com/Whonix/security-misc</a></p>
<p><a href="https://forums.whonix.org/t/apparmor-for-complete-system-including-init-pid1-systemd-everything-full-system-mac-policy/8339" class="inline-onebox">AppArmor for Complete System - Including init, PID1, Systemd, Everything! - Full System MAC policy</a>&gt;<br>
Kind regards,<br>
Patrick</p>
</blockquote>
<p>forest <a href="mailto:forestmerge@airmail.cc">forestmerge@airmail.cc</a> relied:</p>
<blockquote>
<p>I’m not able to assist full-time but I may be available for consultancy over email. There are a few things that I should mention about untrusted root that are necessary prerequisites for doing so securely, though:</p>
<ol>
<li>
<p>A solid formal threat model is a must. It’s the only way to ensure all developers are on the same page. It’s even better if it includes data flow diagrams for at-risk processes. Threat modeling becomes more complex if privesc is in-scope, but for a serious project, it’s worth the investment in the long run.</p>
</li>
<li>
<p>AppArmor is probably not going to cut it. Although there are hacky ways to get it to work with PID 1, you’d be much better off with SELinux or, even better, Grsecurity’s RBAC (requires subscription, but provides overwhelmingly better security than possible with vanilla Linux).</p>
</li>
<li>
<p>There’s no safe way to run Xorg with multiple mutually-distrusting users at the same time (e.g. a regular user and a root shell). The same is true with other utilities like tmux, but Xorg is the most common culprit of bypasses for a desktop system.</p>
</li>
</ol>
</blockquote>
<p>Forwarded here with permission.</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/25">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/25</link>
        <pubDate>Thu, 31 Oct 2019 10:26:07 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-25</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>stackexchange bounty posted here:</p>
<aside class="onebox stackexchange">
  <header class="source">
      <a href="https://security.stackexchange.com/questions/119712/methods-root-can-use-to-elevate-itself-to-kernel-mode" target="_blank" rel="nofollow noopener">security.stackexchange.com</a>
  </header>
  <article class="onebox-body">
      <a href="https://security.stackexchange.com/users/106285/forest" target="_blank" rel="nofollow noopener">
    <img alt="forest" src="https://www.gravatar.com/avatar/9ea7efef9a3212242d84ebc53ccae61d?s=128&amp;d=identicon&amp;r=PG&amp;f=1" class="thumbnail onebox-avatar" width="60" height="60">
  </a>
<h4>
  <a href="https://security.stackexchange.com/questions/119712/methods-root-can-use-to-elevate-itself-to-kernel-mode" target="_blank" rel="nofollow noopener">Methods root can use to elevate itself to kernel mode</a>
</h4>

<div class="tags">
  <strong>linux, exploit, privilege-escalation, kernel</strong>
</div>

<div class="date">
  asked by
  
  <a href="https://security.stackexchange.com/users/106285/forest" target="_blank" rel="nofollow noopener">
    forest
  </a>
  on <a href="https://security.stackexchange.com/questions/119712/methods-root-can-use-to-elevate-itself-to-kernel-mode" target="_blank" rel="nofollow noopener">02:50AM - 07 Apr 16 UTC</a>
</div>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/24">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/24</link>
        <pubDate>Tue, 29 Oct 2019 15:21:24 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-24</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <p>It restricts root pretty well already. Only 26 capabilities out of 38 are permitted and I’ve plans to restrict this even further.</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/23">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/23</link>
        <pubDate>Tue, 29 Oct 2019 15:10:01 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-23</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>A step into the direction of untrusted root:</p>
<aside class="quote quote-modified" data-post="1" data-topic="8339">
  <div class="title">
    <div class="quote-controls"></div>
    <img alt="" width="20" height="20" src="/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar">
    <a href="https://forums.whonix.org/t/apparmor-for-complete-system-including-init-pid1-systemd-everything-full-system-mac-policy/8339">AppArmor for Complete System - Including init, PID1, Systemd, Everything! - Full System MAC policy</a> <a class="badge-wrapper  bullet" href="http://forums.whonix.org/c/apparmor"><span class="badge-category-bg" style="background-color: #12A89D;"></span><span style="" data-drop-close="true" class="badge-category clear-badge" title="Discussion of Whonix AppArmor Profiles for better security. (devs)">AppArmor</span></a>
  </div>
  <blockquote>
    Currently, Whonix only has AppArmor profiles for a few high-risk applications. This isn’t the best. It would be much better to have everything confined by default, including init which would greatly increase security. 
This can also help a lot with the “<a href="https://forums.whonix.org/t/untrusted-root-does-it-make-sense-to-try-to-improve-security-by-restricting-root/7998">untrusted root</a>” idea as we can just develop a system-wide policy to restrict root. 
AppArmor can do this by loading a profile for systemd in the initramfs. 


Even when a user installs some sketchy malware, it will be restricted by default. 
This…
  </blockquote>
</aside>

          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/22">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/22</link>
        <pubDate>Tue, 29 Oct 2019 15:06:50 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-22</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="20" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/a/a183cd/40.png" class="avatar"> Algernon:</div>
<blockquote>
<p>Let me rephrase it: Is there any reason an average user would need to elevate its privileges to run program X?</p>
</blockquote>
</aside>
<p>For ordinary use cases, probably not.</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/21">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/21</link>
        <pubDate>Mon, 09 Sep 2019 16:21:52 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-21</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Algernon]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="17" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>I’d imagine many systemd services would be running as the root user.</p>
</blockquote>
</aside>
<p>Ahh sure. Let me rephrase it: Is there any reason an average user would need to elevate its privileges to run program X?</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/20">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/20</link>
        <pubDate>Mon, 09 Sep 2019 09:22:23 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-20</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="18" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/p/898d66/40.png" class="avatar"> Patrick_mobile:</div>
<blockquote>
<p>Any we care about at live boot?</p>
</blockquote>
</aside>
<p>Yes. Nearly every service runs as the root user. Running</p>
<pre><code>grep "User=" /lib/systemd/system/*.service
</code></pre>
<p>just shows a few services. If a service doesn’t select a specific user, it uses the root user by default.</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/19">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/19</link>
        <pubDate>Sun, 08 Sep 2019 17:47:23 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-19</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Patrick_mobile]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="17" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>I don’t think this would be the best idea. As I said above, many services would be running as the root</p>
</blockquote>
</aside>
<p>Any we care about at live boot?</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/18">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/18</link>
        <pubDate>Sun, 08 Sep 2019 17:40:52 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-18</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="13" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/a/a183cd/40.png" class="avatar"> Algernon:</div>
<blockquote>
<p>Are there any commonly used programs which need root at runtime?</p>
</blockquote>
</aside>
<p>I’d imagine many systemd services would be running as the root user.</p>
<aside class="quote no-group" data-post="14" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/p/898d66/40.png" class="avatar"> Patrick_mobile:</div>
<blockquote>
<p>Can we somehow disable or even delete the root user?</p>
</blockquote>
</aside>
<p>I don’t think this would be the best idea. As I said above, many services would be running as the root user and deleting root entirely would break it unless systemd can somehow grant more privileges as it’s the init process.</p>
<p>Running <code>sudo userdel -f root</code> kinda worked but the root user was back again after a reboot.</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/17">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/17</link>
        <pubDate>Sun, 08 Sep 2019 17:10:39 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-17</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Patrick_mobile]]></dc:creator>
        <description><![CDATA[
            <p>These special cases and upgrading aren’t blockers. Solutions can be searched later. It’s worth pursuing this idea of disabling/deleting independently. For example for boot in live + noroot it totally makes sense.</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/16">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/16</link>
        <pubDate>Sun, 08 Sep 2019 14:44:48 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-16</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Algernon]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="14" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/p/898d66/40.png" class="avatar"> Patrick_mobile:</div>
<blockquote>
<p>Can we somehow disable or even delete the root user?</p>
</blockquote>
</aside>
<p>Yes, thats the idea I had in mind.<br>
When grepping through the source code most stuff was related to apt, also sdwdate + some whonix scripts. I don’t know if you can restrict sudo to a limited set of commands. Also apparmor could maybe restrict the few remaining cases and forbid everything else for root. In case the system would use something like dm-verity apt-get would also be pointless I guess. You would need some other mechanism to push upgrades.</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/15">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/15</link>
        <pubDate>Sun, 08 Sep 2019 13:53:16 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-15</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Patrick_mobile]]></dc:creator>
        <description><![CDATA[
            <p>Without root/sudo goes long way.</p>
<p>(Maybe search wiki for sudo and grep Whonix source code for sudo.)</p>
<p>Why you’re asking?</p>
<p>Can we somehow disable or even delete the root user? If possible this might make sense in a nonpersistent + noroot boot.</p>
<p>From there we can expand.</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/14">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/14</link>
        <pubDate>Sun, 08 Sep 2019 13:01:34 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-14</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Algernon]]></dc:creator>
        <description><![CDATA[
            <p>What is root needed for for the average Whonix user?<br>
I can only come up with few stuff like apt-get + some other listed here: <a href="https://www.whonix.org/wiki/Common_Whonix_CLI_Commands" rel="nofollow noopener">https://www.whonix.org/wiki/Common_Whonix_CLI_Commands</a><br>
Are there any commonly used programs which need root at runtime?</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/13">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/13</link>
        <pubDate>Sun, 08 Sep 2019 12:51:46 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-13</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Patrick_mobile]]></dc:creator>
        <description><![CDATA[
            <p>I am very interested in verified boot latetly. For VMs:<br>
Could be implemented using similar to this idea in this very post: <a href="https://forums.whonix.org/t/enable-linux-kernel-gpg-verification-in-grub-and-or-enable-secure-boot-by-default/7894/15" class="inline-onebox">enable Linux kernel gpg verification in grub and/or enable Secure Boot by default</a><br>
In essence initially boot from a readonly boot medium, do verification and chainload (kexec) (boot) regular disk if verification was ok.</p>
<p>Also described a bit in <a href="https://forums.whonix.org/t/are-non-perfect-defenses-that-defeat-off-the-shelf-viruses-a-worthwhile-development-goal/8040" class="inline-onebox">Are non-perfect Defenses that defeat off-the-shelf Viruses a worthwhile Development Goal?</a></p>
<p>For host: not sure yet. Perhaps using Secure Boot. Perhaps similar to above. Should be possible though because…</p>
<aside class="quote no-group" data-post="2" data-topic="8040">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/a/a183cd/40.png" class="avatar"><a href="//forums.whonix.org/t/are-non-perfect-defenses-that-defeat-off-the-shelf-viruses-a-worthwhile-development-goal/8040/2">Are non-perfect Defenses that defeat off-the-shelf Viruses a worthwhile Development Goal?</a>
</div>
<blockquote>
<p>Android, IOS, MacOS does it, some cloud providers do it, Fedora SilverBlue and ClearLinux also do.</p>
</blockquote>
</aside>
<p>SilverBlue and ClearLinux do interesting things related to it. They call it stateless.</p>
<p>This blog describes it very well.</p>
<p><a href="http://0pointer.net/blog/projects/stateless.html" class="onebox" target="_blank" rel="nofollow noopener">http://0pointer.net/blog/projects/stateless.html</a></p>
<p>Once stateless, verified boot gets a lot simpler.</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/12">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/12</link>
        <pubDate>Sat, 07 Sep 2019 17:44:38 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-12</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="10" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Perhaps it may even be possible to prevent root from modifying the bootloader, kernel image, initrd?</p>
</blockquote>
</aside>
<p>There isn’t really a plausible way to prevent root from modifying it but you can make sure it isn’t executed if it’s modified. For example, see Android’s <a href="https://source.android.com/security/verifiedboot/" rel="nofollow noopener">verified boot</a> implementation. I’m not sure how this could be implemented in an ordinary Linux distro.</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/11">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/11</link>
        <pubDate>Sat, 07 Sep 2019 15:19:05 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-11</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Untrusted Root makes sense with my current understanding. Reasons:</p>
<p>Quote <a href="https://security.stackexchange.com/questions/119712/methods-root-can-use-to-elevate-itself-to-kernel-mode" rel="nofollow noopener">https://security.stackexchange.com/questions/119712/methods-root-can-use-to-elevate-itself-to-kernel-mode</a></p>
<blockquote>
<p>When most Linux users hear “root”, they think of the maximum possible privilege on a computer. Some even think that root runs in ring 0. But in reality, root is just a regular user running in ring 3, albeit one which the kernel trusts (many sensitive kernel operations are guarded with checks along the lines of <code>if (!uid_eq(current_uid(), GLOBAL_ROOT_UID)) return -EPERM;</code> to prevent abuse, which simply returns an error if <code>uid != 0</code> ).</p>
</blockquote>
<p>It would be good if we could trap a compromised root account in <a href="https://en.wikipedia.org/wiki/User_space" rel="nofollow noopener">user space</a> and prevent a compromised root from getting kernel mode access.</p>
<p>This would be <a href="https://github.com/QubesOS/qubes-issues/issues/2695#issuecomment-301316132" rel="nofollow noopener">useful to protect the virtualizer</a> or perhaps even the hardware.</p>
<p>Quote Linux kernel developer Kees Cook <a href="https://lwn.net/Articles/580269/" rel="nofollow noopener">https://lwn.net/Articles/580269/</a> (8 Jan 2014)</p>
<blockquote>
<p>The intention is for using this in environments where “perfect” enforcement is hard. Without a verified boot, along with verified modules, and along with verified kexec, this is trying to give a system a better chance to defend itself (or at least grow the window of discoverability) against attack in the face of a privilege escalation.</p>
</blockquote>
<blockquote>
<p>In my mind, I consider several boot scenarios:</p>
<ol>
<li>Verified boot of read-only verified root fs loading fd-based verification of kexec images.</li>
<li>Secure boot of writable root fs loading signed kexec images.</li>
<li>Regular boot loading kexec (e.g. kcrash) image early and locking it.</li>
<li>Regular boot with no control of kexec image at all.</li>
</ol>
</blockquote>
<p>Since that is an old quote, things might have improved by now.</p>
<p>At first sight untrusted root looks pointless since root has write access to maliciously alter the bootloader, kernel image, initial ramdisk (initrd) or any other file on the disk. Therefore at least after reboot, a compromised root could escalate to compromised kernel mode. But this is not always the case:</p>
<ul>
<li>In Qubes TemplateBasedVMs the root image (where the bootloader, kernel and initrd <a href="https://www.whonix.org/wiki/Template:Qubes_persistence" rel="nofollow noopener">and more</a> resides) is writeable but non-persistent after reboot. In other words, a malicious modification for example of the kernel image would be gone after reboot of the TemplateBasedVM.</li>
<li>Using this <a href="https://forums.whonix.org/t/enable-linux-kernel-gpg-verification-in-grub-and-or-enable-secure-boot-by-default/7894/15">verified boot</a> idea the same could be accomplished outside of Qubes TemplateBasedVMs. I.e. the same could be accomplished with Debian. A read-only boot medium using <a href="https://www.elstel.org/debcheckroot/" rel="nofollow noopener">debcheckroot</a> (and more to verify initrd, bootloader and whatnot) could make sure that kernel, bootloader, initrd and all non-auto/non-user files shipped by any packages are verified.</li>
</ul>
<p>And malware re-starting itself from the user’s home folder might be restricted too.</p>
<ul>
<li><a href="https://github.com/tasket/Qubes-VM-hardening" rel="nofollow noopener">https://github.com/tasket/Qubes-VM-hardening</a></li>
<li><a href="https://www.whonix.org/wiki/Dev/VirusForget" rel="nofollow noopener">https://www.whonix.org/wiki/Dev/VirusForget</a></li>
</ul>
<p>Vulnerable files such as <code>~/.bashrc</code> or folders such as <code>~/.config/autostart</code> could be checked and/or restored to known sane versions at early boot time when it is considered that no malware is running yet.</p>
<p><strong>The question is, can we disable all the “easy” (non-kernel exploit) ways to prevent root from getting access to kernel space?</strong></p>
<p>That is before reboot - because root can change bootloader, kernel image, etc. and after reboot changes to bootloader, kernel image, etc. must be undone. That might include <a href="https://forums.whonix.org/t/allow-loading-signed-kernel-modules-by-default-disallow-kernel-module-loading-by-default/7880" class="inline-onebox">allow loading signed kernel modules by default / disallow kernel module loading by default</a>, <a href="https://github.com/Whonix/security-misc/blob/master/etc/sysctl.d/kexec.conf" rel="nofollow noopener">disable kexec</a> which we are already doing, and whatnot.</p>
<p>A good starting point might be:</p>
<aside class="onebox stackexchange">
  <header class="source">
      <a href="https://security.stackexchange.com/questions/119712/methods-root-can-use-to-elevate-itself-to-kernel-mode" target="_blank" rel="nofollow noopener">security.stackexchange.com</a>
  </header>
  <article class="onebox-body">
      <a href="https://security.stackexchange.com/users/106285/forest" target="_blank" rel="nofollow noopener">
    <img alt="forest" src="https://www.gravatar.com/avatar/9ea7efef9a3212242d84ebc53ccae61d?s=128&amp;d=identicon&amp;r=PG&amp;f=1" class="thumbnail onebox-avatar" width="60" height="60">
  </a>
<h4>
  <a href="https://security.stackexchange.com/questions/119712/methods-root-can-use-to-elevate-itself-to-kernel-mode" target="_blank" rel="nofollow noopener">Methods root can use to elevate itself to kernel mode</a>
</h4>

<div class="tags">
  <strong>linux, exploit, privilege-escalation, kernel</strong>
</div>

<div class="date">
  asked by
  
  <a href="https://security.stackexchange.com/users/106285/forest" target="_blank" rel="nofollow noopener">
    forest
  </a>
  on <a href="https://security.stackexchange.com/questions/119712/methods-root-can-use-to-elevate-itself-to-kernel-mode" target="_blank" rel="nofollow noopener">02:50AM - 07 Apr 16 UTC</a>
</div>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>Perhaps it may even be possible to prevent root from modifying the bootloader, kernel image, initrd? Perhaps it could be configured that such changes must happen through use of <code>apt-get</code>? But then additional, malicious <code>/etc/apt/sources.list.d/</code> <code>sources.list</code> or apt command line parameters to set malicious <code>sources.list</code> might be set. Some restrictions (if even possible) might have to go into separate, opt-in packages or opt-in commands if functionality gets restricted too much (such as <a href="http://packages.debian.org" rel="nofollow noopener">packages.debian.org</a> as sources only).</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/10">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/10</link>
        <pubDate>Fri, 06 Sep 2019 10:42:36 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-10</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p><a href="https://www.linuxjournal.com/magazine/making-root-unprivileged" class="onebox" target="_blank" rel="nofollow noopener">https://www.linuxjournal.com/magazine/making-root-unprivileged</a></p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/9">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/9</link>
        <pubDate>Wed, 04 Sep 2019 16:58:44 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-9</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="7" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>I’m not sure that would work as pam_exec doesn’t run commands as specific users AFAIK</p>
</blockquote>
</aside>
<p>Did run pam_exec without <code>seteuid</code> option just now. Result:<br>
<code>whoami</code> returns <code>user</code>.<br>
I.e. pam_exec can run programs as the user which is attempting to login.<br>
Makes sense. pam is there to set up a (user interactive or non-interactive) session. It can run programs before the user can interfere. Might be possible to run capsh.</p>
<p>(With <code>seteuid</code> option used it runs it as root.)</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/8">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/8</link>
        <pubDate>Mon, 02 Sep 2019 14:19:26 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-8</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="6" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Upstream bug report?</p>
</blockquote>
</aside>
<p>I don’t think this is a bug. The pam developers probably never intended for root to be restricted with this.</p>
<aside class="quote no-group" data-post="6" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Yes and root can make non-immutable</p>
</blockquote>
</aside>
<p>Only if we give root the CAP_SYS_IMMUTABLE capability which would be disallowed.</p>
<aside class="quote no-group" data-post="6" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>or login with a different shell</p>
</blockquote>
</aside>
<p>We can restrict the amount of valid shells in /etc/shells and add the same command to each of their rcs.</p>
<aside class="quote no-group" data-post="6" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Run during boot using systemd?</p>
</blockquote>
</aside>
<p><code>capsh</code> only applies for the current session. Running it during boot would just apply the changes to that specific service.</p>
<aside class="quote no-group" data-post="6" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>pam_exec?</p>
</blockquote>
</aside>
<p>I’m not sure that would work as pam_exec doesn’t run commands as specific users AFAIK</p>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/7">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/7</link>
        <pubDate>Mon, 02 Sep 2019 13:48:15 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-7</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
      <item>
        <title>Untrusted Root - improve Security by Restricting Root</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>I don’t know yet if this is a good idea or will break a ton of things.  Please test.</p>
<p>However, I hereby contribute to the brainstorming on how this could be implemented technically.</p>
<aside class="quote no-group" data-post="5" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>libpam-cap allows you to give users specific capabilities with /etc/security/capability.conf but this doesn’t seem to work with the root account.</p>
</blockquote>
</aside>
<p>Upstream bug report?</p>
<aside class="quote no-group" data-post="5" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>We could add that to the bashrc and make it immutable but that doesn’t seem like a good way to do this due to it depending on the root user sourcing that file.</p>
</blockquote>
</aside>
<p>Yes and root can make non-immutable or login with a different shell or something else. Therefore other ideas…</p>
<aside class="quote no-group" data-post="5" data-topic="7998">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>We can drop all privileges as the root user by running <code>capsh --drop=all --</code> but it’d be tricky to somehow set this by default. We could add that to the bashrc and make it immutable but that doesn’t seem like a good way to do this due to it depending on the root user sourcing that file.</p>
</blockquote>
</aside>
<p>Random ideas…</p>
<ol>
<li>Run during boot using systemd? OR</li>
</ol>
<hr>
<ol start="2">
<li>pam_exec? Examples:</li>
</ol>
<ul>
<li><a href="https://github.com/Whonix/security-misc/blob/master/usr/share/pam-configs/pam-abort-on-locked-password-security-misc" rel="nofollow noopener">https://github.com/Whonix/security-misc/blob/master/usr/share/pam-configs/pam-abort-on-locked-password-security-misc</a></li>
<li><a href="https://github.com/Whonix/security-misc/blob/master/usr/lib/security-misc/pam-abort-on-locked-password" rel="nofollow noopener">https://github.com/Whonix/security-misc/blob/master/usr/lib/security-misc/pam-abort-on-locked-password</a></li>
</ul>
<hr>
<ul>
<li><a href="https://github.com/Whonix/security-misc/blob/master/usr/share/pam-configs/permission-lockdown-security-misc" rel="nofollow noopener">https://github.com/Whonix/security-misc/blob/master/usr/share/pam-configs/permission-lockdown-security-misc</a></li>
<li><a href="https://github.com/Whonix/security-misc/blob/master/usr/lib/security-misc/permission-lockdown" rel="nofollow noopener">https://github.com/Whonix/security-misc/blob/master/usr/lib/security-misc/permission-lockdown</a></li>
</ul>
          <p><a href="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/6">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998/6</link>
        <pubDate>Mon, 02 Sep 2019 13:42:43 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-7998-6</guid>
        <source url="http://forums.whonix.org/t/untrusted-root-improve-security-by-restricting-root/7998.rss">Untrusted Root - improve Security by Restricting Root</source>
      </item>
  </channel>
</rss>

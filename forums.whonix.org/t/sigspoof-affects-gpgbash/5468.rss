<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Sigspoof affects gpgbash?</title>
    <link>http://forums.whonix.org/t/sigspoof-affects-gpgbash/5468</link>
    <description>@Patrick I saw this attack discussed and was wondering if it applied to our package:

https://blog.patternsinthevoid.net/pretty-bad-protocolpeople.html</description>
    <language>en</language>
    <lastBuildDate>Wed, 11 Jul 2018 09:42:23 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="http://forums.whonix.org/t/sigspoof-affects-gpgbash/5468.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Sigspoof affects gpgbash?</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p><a href="https://blog.patternsinthevoid.net/pretty-bad-protocolpeople.html" class="onebox" target="_blank">https://blog.patternsinthevoid.net/pretty-bad-protocolpeople.html</a></p>
<blockquote>
<p>My python-gnupg module isn’t vulnerable to SigSpoof, for several reasons:</p>
<p>–no-options is passed by default. So if you’ve got something stupid in your gpg.conf file, you’ll still be fine while using my Python module.</p>
</blockquote>
<p>Same for gpg-bash-lib. Always using --no-options and separate config directory.</p>
<blockquote>
<p>–verbose is not passed. This means that my library doesn’t have to wade throught a mixture of strange stderr and GnuPG status-fd messages on the same file descriptor. You could pass --verbose to it manually, as it is in the list of allowable, whitelisted options, but the exploit still won’t work, which brings us to our next point:</p>
</blockquote>
<p>Same for gpg-bash-lib. Not using --verbose.</p>
<blockquote>
<p>All inputs to, and outputs from, the gnupg binary are sanitised and then forced to conform to whitelists. This means that, even if you did pass --verbose manually, the filename trick won’t work because there’s no way to safely sanitise a filename, because filenames may be arbitrary bytes.</p>
</blockquote>
<p>Not implemented.</p>
<hr>
<p><a href="https://neopg.io/blog/gpg-signature-spoof/" class="onebox" target="_blank">https://neopg.io/blog/gpg-signature-spoof/</a></p>
<blockquote>
<p>For developers<br>
…<br>
Or, the --status-file FILE option could be used to direct the status lines to a temporary file.</p>
</blockquote>
<p>This has always been the case.</p>
<hr>
<p><a href="https://lists.gnupg.org/pipermail/gnupg-announce/2018q2/000425.html" class="onebox" target="_blank">https://lists.gnupg.org/pipermail/gnupg-announce/2018q2/000425.html</a></p>
<blockquote>
<p>If you are parsing GnuPG status output and you use a dedicated file descriptor with --status-fd you are safe.  A dedicated file descriptor is one that is not shared with the log output.  The log output defaults to stderr (2) but may be a different if the option --logger-fd is used.</p>
</blockquote>
<p>They don’t mention --status-file explicitly but it is as good s "dedicated file descriptor with --status-fd ", i.e. log and status fd messages are separate.</p>
<hr>
<p>It’s fixed in Debian.</p>
<ul>
<li><a href="https://www.debian.org/security/2018/dsa-4222">https://www.debian.org/security/2018/dsa-4222</a></li>
<li><a href="http://metadata.ftp-master.debian.org/changelogs/main/g/gnupg2/gnupg2_2.1.18-8~deb9u2_changelog">http://metadata.ftp-master.debian.org/changelogs/main/g/gnupg2/gnupg2_2.1.18-8~deb9u2_changelog</a></li>
</ul>
<p>So either way we’re good.</p>
          <p><a href="http://forums.whonix.org/t/sigspoof-affects-gpgbash/5468/2">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/sigspoof-affects-gpgbash/5468/2</link>
        <pubDate>Wed, 11 Jul 2018 09:42:23 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-5468-2</guid>
        <source url="http://forums.whonix.org/t/sigspoof-affects-gpgbash/5468.rss">Sigspoof affects gpgbash?</source>
      </item>
      <item>
        <title>Sigspoof affects gpgbash?</title>
        <dc:creator><![CDATA[HulaHoop]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="http://forums.whonix.org/u/patrick">@Patrick</a> I saw this attack discussed and was wondering if it applied to our package:</p>
<p><a href="https://blog.patternsinthevoid.net/pretty-bad-protocolpeople.html" class="onebox" target="_blank">https://blog.patternsinthevoid.net/pretty-bad-protocolpeople.html</a></p>
          <p><a href="http://forums.whonix.org/t/sigspoof-affects-gpgbash/5468/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/sigspoof-affects-gpgbash/5468/1</link>
        <pubDate>Tue, 10 Jul 2018 17:30:20 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-5468-1</guid>
        <source url="http://forums.whonix.org/t/sigspoof-affects-gpgbash/5468.rss">Sigspoof affects gpgbash?</source>
      </item>
  </channel>
</rss>

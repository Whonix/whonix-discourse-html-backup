<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Keep an eye on Arti (Tor)</title>
    <link>http://forums.whonix.org/t/keep-an-eye-on-arti-tor/15815</link>
    <description>Paying some attention to [Arti](https://gitlab.torproject.org/tpo/core/arti/-/blob/main/README.md).

&quot;Rust is more secure than C.  Despite our efforts, it&#39;s all too simple to
mess up when using a language that does not enforce memory safety.  We
estimate that at least half of our tracked security vulnerabilities would
have been impossible in Rust, and many of the others would have been very
unlikely.&quot;

and also think of how it could replace the current Tor C implementation, in a &quot;safe&quot; way, eventually.</description>
    <language>en</language>
    <lastBuildDate>Sat, 15 Oct 2022 09:50:43 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="http://forums.whonix.org/t/keep-an-eye-on-arti-tor/15815.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Keep an eye on Arti (Tor)</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <aside class="onebox allowlistedgeneric" data-onebox-src="https://blog.torproject.org/arti_100_released/">
  <header class="source">
      <img src="https://blog.torproject.org/arti_100_released/../static/images/favicon/favicon.ico" class="site-icon" width="32" height="32">

      <a href="https://blog.torproject.org/arti_100_released/" target="_blank" rel="noopener">blog.torproject.org</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/388;"><img src="https://blog.torproject.org/arti_100_released/lead.png" class="thumbnail" width="690" height="388"></div>

<h3><a href="https://blog.torproject.org/arti_100_released/" target="_blank" rel="noopener">Arti 1.0.0 is released: Our Rust Tor implementation is ready for production...</a></h3>

  <p>Arti 1.0.0 is released and ready for download.</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<blockquote>
<p>After Arti 1.1.0, we’re going to focus on <a href="https://community.torproject.org/onion-services/">onion services</a> in Arti 1.2.0. They’re a complex and important part of the Tor protocols, and will take a significant amount of effort to build. Making onion services work securely and efficiently will require a number of related protocol features, including support for <a href="https://gitlab.torproject.org/tpo/core/torspec/-/blob/main/proposals/324-rtt-congestion-control.txt">congestion control</a>, <a href="https://2019.www.torproject.org/docs/tor-manual.html#MaxMemInQueues">DOS protection</a>, <a href="https://blog.torproject.org/announcing-vanguards-add-onion-services/">vanguards</a>, and <a href="https://gitlab.torproject.org/tpo/core/torspec/-/blob/main/padding-spec.txt#L340">circuit padding machines</a>.</p>
<p>After that, Arti 2.0.0 will focus on feature parity with the C tor client implementation, and support for embedding Arti in different languages. (Preliminary embedding work is promising: we have the beginnings of a <a href="https://gitlab.torproject.org/tpo/core/onionmasq">VPN tool for mobile</a>, embedding Arti in Java.) When we’re done, we intend that Arti will be a suitable replacement for C tor as a client implementation in all (or nearly all) use contexts.</p>
</blockquote>
<p>Until a Debian package being available from <code>deb.torproject.org</code> and feature support such as onions and <code>TransPort</code> will probably take a while.</p>
          <p><a href="http://forums.whonix.org/t/keep-an-eye-on-arti-tor/15815/2">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/keep-an-eye-on-arti-tor/15815/2</link>
        <pubDate>Sat, 15 Oct 2022 09:50:43 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-15815-2</guid>
        <source url="http://forums.whonix.org/t/keep-an-eye-on-arti-tor/15815.rss">Keep an eye on Arti (Tor)</source>
      </item>
      <item>
        <title>Keep an eye on Arti (Tor)</title>
        <dc:creator><![CDATA[yodawins]]></dc:creator>
        <description><![CDATA[
            <p>Paying some attention to <a href="https://gitlab.torproject.org/tpo/core/arti/-/blob/main/README.md" rel="noopener nofollow ugc">Arti</a>.</p>
<p>“Rust is more secure than C.  Despite our efforts, it’s all too simple to<br>
mess up when using a language that does not enforce memory safety.  We<br>
estimate that at least half of our tracked security vulnerabilities would<br>
have been impossible in Rust, and many of the others would have been very<br>
unlikely.”</p>
<p>and also think of how it could replace the current Tor C implementation, in a “safe” way, eventually.</p>
          <p><a href="http://forums.whonix.org/t/keep-an-eye-on-arti-tor/15815/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/keep-an-eye-on-arti-tor/15815/1</link>
        <pubDate>Fri, 14 Oct 2022 10:57:02 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-15815-1</guid>
        <source url="http://forums.whonix.org/t/keep-an-eye-on-arti-tor/15815.rss">Keep an eye on Arti (Tor)</source>
      </item>
  </channel>
</rss>

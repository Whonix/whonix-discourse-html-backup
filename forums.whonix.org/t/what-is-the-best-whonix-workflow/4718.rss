<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>What is the best Whonix workflow</title>
    <link>http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718</link>
    <description>I am wondering what could be the best/most appropriate workflow for a Whonix contributor? 

The following are my findings and please educate me if I am wrong or there is a better approach. I will be really appreciate. Also, please feel free to share any useful additional information.

1.Fork https://github.com/Whonix/Whonix on Github

2.Clone your forked repository: 
`git clone git@github.com:YOUR_GITHUB_NAME/Whonix.git`

3.Let&#39;s say you would  like to work on a Whonix component anon-connection-wizard:

fork anon-connection-wizard on Github: https://github.com/Whonix/anon-connection-wizard

get anon-connection-wizard source code:

    cd Whonix
    git submodule update --init --recursive package/anon-connection-wizard

add your repository as origin:

    cd package/anon-connection-wizard
    git remote rename origin upstream
    git remote add origin git@github.com:YOUR_GITHUB_NAME/Whonix.git

And that&#39;s it. You can start your normal git flow now. :slight_smile:

4.Alternatively, if you would like to get all the source code of Whonix, simply:

    cd Whonix
    git submodule update --init --recursive</description>
    <language>en</language>
    <lastBuildDate>Wed, 27 Jun 2018 16:22:51 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>What is the best Whonix workflow</title>
        <dc:creator><![CDATA[iry]]></dc:creator>
        <description><![CDATA[
            <p>When writing a bash script, one may use a function call that is provided by another script. A uniformed looking comment will greatly help with the readability of code by telling the reader where this function call or variable is provided or set.</p>
<p>Whonix flavor comments are like this:</p>
<pre><code class="lang-auto">## provides: function_call_a # note it is not function_call_a()
source /path/to/another/script

(many lines away)

## sets: $variable_a
function_call_a

echo "$variable_a"
</code></pre>
<p>Therefore, whenever you have no clue where the function call or a variable is provided or set, simply search it within the same file.</p>
<p>This is taught by <a class="mention" href="http://forums.whonix.org/u/patrick">@Patrick</a> : <a href="https://github.com/Whonix/anon-shared-helper-scripts/pull/3#discussion_r198067683">https://github.com/Whonix/anon-shared-helper-scripts/pull/3#discussion_r198067683</a></p>
          <p><a href="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/9">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/9</link>
        <pubDate>Wed, 27 Jun 2018 16:22:51 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-4718-9</guid>
        <source url="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718.rss">What is the best Whonix workflow</source>
      </item>
      <item>
        <title>What is the best Whonix workflow</title>
        <dc:creator><![CDATA[iry]]></dc:creator>
        <description><![CDATA[
            <pre><code>user@host:~$ grep "ProtectHome=" /lib/systemd/system/tor@default.service
ProtectHome=yes
</code></pre>
<p><a href="https://www.freedesktop.org/software/systemd/man/systemd.exec.html#ProtectHome=" class="onebox" target="_blank">https://www.freedesktop.org/software/systemd/man/systemd.exec.html#ProtectHome=</a></p>
<p>“If true, the directories /home, /root and /run/user are made inaccessible and empty for processes invoked by this unit”. This means systemd Tor can’t see anything in these file. Therefore, when testing a configuration file or a snowflake binary with Tor, don’t put it in these three directories.</p>
          <p><a href="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/8">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/8</link>
        <pubDate>Thu, 14 Jun 2018 17:13:37 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-4718-8</guid>
        <source url="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718.rss">What is the best Whonix workflow</source>
      </item>
      <item>
        <title>What is the best Whonix workflow</title>
        <dc:creator><![CDATA[iry]]></dc:creator>
        <description><![CDATA[
            <p>use <code>dpkg -S file</code> to figure out which package the file belongs.</p>
          <p><a href="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/7">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/7</link>
        <pubDate>Thu, 14 Jun 2018 17:08:26 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-4718-7</guid>
        <source url="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718.rss">What is the best Whonix workflow</source>
      </item>
      <item>
        <title>What is the best Whonix workflow</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>A lot files in the various packages I consider a burden. But necessary evil. Example excerpt:</p>
<blockquote>
<p>├── changelog.upstream<br>
├── CONTRIBUTING.md<br>
├── COPYING</p>
</blockquote>
<p>These are repetitive among packages and make the package look complicated and deterrent than it really is.</p>
<p>The “real” files (that is minus even the packaging overhead) are very few and look a lot simpler then.</p>
          <p><a href="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/6">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/6</link>
        <pubDate>Fri, 01 Jun 2018 15:08:54 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-4718-6</guid>
        <source url="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718.rss">What is the best Whonix workflow</source>
      </item>
      <item>
        <title>What is the best Whonix workflow</title>
        <dc:creator><![CDATA[iry]]></dc:creator>
        <description><![CDATA[
            <p>Due to <a href="https://github.com/Whonix/genmkfile/blob/master/usr/share/genmkfile/Makefile">the way Whonix does its packaging</a>, files may be located very deep in different directories.</p>
<hr>
<p>To easily view the structure of a package and found the desired file, I find <code>tree</code> very useful:</p>
<pre><code class="lang-auto">user@host:~/Whonix/packages/whonix-welcome-page$ tree
.
├── changelog.upstream
├── CONTRIBUTING.md
├── COPYING
├── debian
│   ├── changelog
│   ├── compat
│   ├── control
│   ├── copyright
│   ├── rules
│   ├── source
│   │   ├── format
│   │   └── lintian-overrides
│   └── watch
├── etc
│   ├── profile.d
│   │   └── 20_whonix-welcome-page.sh
│   └── X11
│       └── Xsession.d
│           ├── #20whonix-welcome-page#
│           └── 20whonix-welcome-page
├── GPLv3
├── Makefile
├── README.md
└── usr
    ├── lib
    │   └── whonix-welcome-page
    │       ├── #env_var.sh#
    │       └── env_var.sh
    └── share
        └── homepage
            └── whonix-welcome-page
                ├── logo.png
                ├── stylesheet.css
                ├── #whonix.html#
                └── whonix.html

12 directories, 23 files
</code></pre>
<p>It can be installed by <code>apt-get install tree</code>.</p>
<hr>
<p>Another trick that saves me tons of time navigating and jumping through the file in a Whonix package is to use <code>projectile</code>. It is an emacs package that will consider all the files in a directory as part of a project. When wanting to jump from one file to another, type <code>C-c p f</code> and hit TAB, one will see all the available files in a project (Whonix package).</p>
          <p><a href="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/5">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/5</link>
        <pubDate>Sat, 26 May 2018 09:15:07 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-4718-5</guid>
        <source url="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718.rss">What is the best Whonix workflow</source>
      </item>
      <item>
        <title>What is the best Whonix workflow</title>
        <dc:creator><![CDATA[iry]]></dc:creator>
        <description><![CDATA[
            <p><a href="http://forums.dds6qkxpwdeubwucdiaord2xgbbeyds25rbsgr73tbfpqpt4a6vjwsyd.onion/t/terminal-only-contribute/4994/2" class="onebox" target="_blank">http://forums.dds6qkxpwdeubwucdiaord2xgbbeyds25rbsgr73tbfpqpt4a6vjwsyd.onion/t/terminal-only-contribute/4994/2</a></p>
<p><a href="http://forums.dds6qkxpwdeubwucdiaord2xgbbeyds25rbsgr73tbfpqpt4a6vjwsyd.onion/t/phabricator-account-sign-ups-now-needs-manual-confirmation/4668" class="onebox" target="_blank">http://forums.dds6qkxpwdeubwucdiaord2xgbbeyds25rbsgr73tbfpqpt4a6vjwsyd.onion/t/phabricator-account-sign-ups-now-needs-manual-confirmation/4668</a></p>
          <p><a href="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/4">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/4</link>
        <pubDate>Thu, 05 Apr 2018 17:32:59 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-4718-4</guid>
        <source url="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718.rss">What is the best Whonix workflow</source>
      </item>
      <item>
        <title>What is the best Whonix workflow</title>
        <dc:creator><![CDATA[iry]]></dc:creator>
        <description><![CDATA[
            <p>Preparation for future contribution guide use:</p>
<aside class="quote" data-post="89" data-topic="4988" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"><a href="//forums.whonix.org/t/qubes-whonix-14-0-0-6-9-templatevms-for-r3-2-and-r4-testers-wanted/4988/89">Qubes-Whonix 14.0.0.6.9 TemplateVMs for R3.2 and R4--Testers Wanted!</a>
</div>
<blockquote>
<p>See also Whonix related bugs on Qubes issue tracker.</p>
<p><a href="https://github.com/QubesOS/qubes-issues/labels/C%3A%20Whonix">https://github.com/QubesOS/qubes-issues/labels/C%3A%20Whonix</a></p>
</blockquote>
</aside>
          <p><a href="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/3">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/3</link>
        <pubDate>Thu, 05 Apr 2018 16:41:01 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-4718-3</guid>
        <source url="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718.rss">What is the best Whonix workflow</source>
      </item>
      <item>
        <title>What is the best Whonix workflow</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="1" data-topic="4718">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/i/c5a1d2/40.png" class="avatar"> iry:</div>
<blockquote>
<p>git remote rename origin upstream</p>
</blockquote>
</aside>
<p>While nothing speaks against it, I don’t think it is usual practice / any useful to rename the origin which in this case is Whonix to anything else. Never saw this practice anywhere. Easier / “better” would be:</p>
<pre><code>git remote add your-github-name git@github.com:YOUR_GITHUB_NAME/Whonix.git
git remote add irykoon git@github.com:YOUR_GITHUB_NAME/Whonix.git
</code></pre>
<aside class="quote no-group" data-post="1" data-topic="4718">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/i/c5a1d2/40.png" class="avatar"> iry:</div>
<blockquote>
<p>4.Alternatively, if you would like to get all the source code of Whonix, simply:</p>
</blockquote>
</aside>
<aside class="quote no-group" data-post="1" data-topic="4718">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/i/c5a1d2/40.png" class="avatar"> iry:</div>
<blockquote>
<p>git submodule update --init --recursive</p>
</blockquote>
</aside>
<p>It always makes sense to do that.</p>
<p>Fully optional, to speed up the process, add: <code>--jobs=4</code></p>
<p>While this forum thread is not about building… Still… Useful from Whonix build documentation…</p>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://www.whonix.org/favicon.ico" class="site-icon" width="" height="">
      <a href="https://www.whonix.org/wiki/Dev/Build_Documentation/14_full" target="_blank" rel="nofollow noopener">Whonix</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/362;"><img src="//forums.whonix.org/uploads/default/original/2X/9/997bef28d9dd0e3a84553afa8e33f383970adcab.png" class="thumbnail"></div>

<h3><a href="https://www.whonix.org/wiki/Dev/Build_Documentation/14_full" target="_blank" rel="nofollow noopener">Dev/Build Documentation/14 full</a></h3>

<p>Instructions to build Whonix Virtual Machine Images from Source Code.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>We suggest the following command to clone all of Whonix’s repositories.</p>
<pre><code>cd; git clone --jobs=4 --recursive https://github.com/Whonix/Whonix
</code></pre>
<p>Once one has cloned all of Whonix’s source code, one could use the <a href="https://forums.whonix.org/t/graphical-gui-whonix-setup-wizard-anon-connection-wizard-technical-discussion/650/476?u=patrick"><code>mygrep</code></a>. Like changing the name of a variable or when renaming a file, it is useful to grep all the meaningful (that is excluding licenses and git folders etc) Whonix source files for references. That way any interaction between packages could be found.</p>
<hr>
<p>Not sure if forking Whonix is convenient or if Whonix is doing something it could do better in order to make that process more standardized / simpler.</p>
          <p><a href="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/2">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/2</link>
        <pubDate>Thu, 18 Jan 2018 00:47:19 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-4718-2</guid>
        <source url="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718.rss">What is the best Whonix workflow</source>
      </item>
      <item>
        <title>What is the best Whonix workflow</title>
        <dc:creator><![CDATA[iry]]></dc:creator>
        <description><![CDATA[
            <p>I am wondering what could be the best/most appropriate workflow for a Whonix contributor?</p>
<p>The following are my findings and please educate me if I am wrong or there is a better approach. I will be really appreciate. Also, please feel free to share any useful additional information.</p>
<p>1.Fork <a href="https://github.com/Whonix/Whonix">https://github.com/Whonix/Whonix</a> on Github</p>
<p>2.Clone your forked repository:<br>
<code>git clone git@github.com:YOUR_GITHUB_NAME/Whonix.git</code></p>
<p>3.Let’s say you would  like to work on a Whonix component anon-connection-wizard:</p>
<p>fork anon-connection-wizard on Github: <a href="https://github.com/Whonix/anon-connection-wizard">https://github.com/Whonix/anon-connection-wizard</a></p>
<p>get anon-connection-wizard source code:</p>
<pre><code>cd Whonix
git submodule update --init --recursive package/anon-connection-wizard
</code></pre>
<p>add your repository as origin:</p>
<pre><code>cd package/anon-connection-wizard
git remote rename origin upstream
git remote add origin git@github.com:YOUR_GITHUB_NAME/Whonix.git
</code></pre>
<p>And that’s it. You can start your normal git flow now. <img src="//forums.whonix.org/images/emoji/twitter/slight_smile.png?v=5" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
<p>4.Alternatively, if you would like to get all the source code of Whonix, simply:</p>
<pre><code>cd Whonix
git submodule update --init --recursive</code></pre>
          <p><a href="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718/1</link>
        <pubDate>Wed, 17 Jan 2018 23:55:55 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-4718-1</guid>
        <source url="http://forums.whonix.org/t/what-is-the-best-whonix-workflow/4718.rss">What is the best Whonix workflow</source>
      </item>
  </channel>
</rss>

<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Hide Kernel Symbols for Better Security vs Reproducible Builds</title>
    <link>http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599</link>
    <description>Quote:

https://xorl.wordpress.com/2010/11/20/grkernsec_hidesym-hide-kernel-symbols/

&gt; If you say Y here, getting information on loaded modules, and
&gt; displaying all kernel symbols through a syscall will be restricted
&gt; to users with CAP_SYS_MODULE.  For software compatibility reasons,
&gt; /proc/kallsyms will be restricted to the root user.  The RBAC
&gt; system can hide that entry even from root.
&gt; 
&gt; This option also prevents leaking of kernel addresses through
&gt; several /proc entries.
&gt; 
&gt; Note that this option is only effective provided the following
&gt; conditions are met:
&gt; 1) The kernel using grsecurity is not precompiled by some distribution
&gt; 2) You have also enabled GRKERNSEC_DMESG
&gt; 3) You are using the RBAC system and hiding other files such as your
&gt;    kernel image and System.map.  Alternatively, enabling this option
&gt;    causes the permissions on /boot, /lib/modules, and the kernel
&gt;    source directory to change at compile time to prevent 
&gt;    reading by non-root users.
&gt; If the above conditions are met, this option will aid in providing a
&gt; useful protection against local kernel exploitation of overflows
&gt; and arbitrary read/write vulnerabilities.
&gt; 
&gt; It is highly recommended that you enable GRKERNSEC_PERF_HARDEN
&gt; in addition to this feature.

Is hiding kernel symbols even possible without grsecurity?

[security-misc](https://github.com/Whonix/security-misc) is already deleting system.map files and restricts `kallsyms`. Soon we&#39;ll implement [make /boot and /lib/modules unreadable for non-root users](https://phabricator.whonix.org/T937) and maybe even [make /boot and /lib/modules unreadable even for root](https://phabricator.whonix.org/T943).

&gt; and the kernel source directory

Why even the kernel source directory should be hidden?

One idea of https://forums.whonix.org/t/kernel-recompilation-for-better-hardening/7598 was the recompile on the users machine so the kernel would be uniquely compiled and kernel symbols would stay hidden, Rather than using Debian public kernel (from packages.debian.org) which has public well known kernel symbols.

But Debian is working towards [reproducible builds](https://reproducible-builds.org/). Thereby when compiling the Debian kernel on the user&#39;s machine, it is likely the user would end up with a byte identical versions.

Could we use a reproducibility build kernel and then somehow instruct the kernel (through a kernel parameter or something) automagically randomize its kernel symbols addresses?

https://kernsec.org/wiki/index.php/Bug_Classes/Kernel_pointer_leak</description>
    <language>en</language>
    <lastBuildDate>Sat, 21 Dec 2019 12:00:15 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Hide Kernel Symbols for Better Security vs Reproducible Builds</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Mailed <code>forrest</code>  who then posted a reply:<br>
<a href="https://security.stackexchange.com/a/223065/54240">https://security.stackexchange.com/a/223065/54240</a></p>
          <p><a href="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/13">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/13</link>
        <pubDate>Sat, 21 Dec 2019 12:00:15 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8599-13</guid>
        <source url="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599.rss">Hide Kernel Symbols for Better Security vs Reproducible Builds</source>
      </item>
      <item>
        <title>Hide Kernel Symbols for Better Security vs Reproducible Builds</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://lwn.net/images/favicon.png" class="site-icon" width="16" height="16">
      <a href="https://lwn.net/Articles/735589/" target="_blank">lwn.net</a>
  </header>
  <article class="onebox-body">
    <img src="" class="thumbnail">

<h3><a href="https://lwn.net/Articles/735589/" target="_blank">What's the best way to prevent kernel pointer leaks? [LWN.net]</a></h3>

<p>An attacker who seeks to compromise a running kernel by overwriting
kernel data structures or forcing a jump to specific kernel code must, in
either case, have some idea of where the target objects are in memory.
Techniques like kernel address-space...</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/12">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/12</link>
        <pubDate>Fri, 20 Dec 2019 12:34:21 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8599-12</guid>
        <source url="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599.rss">Hide Kernel Symbols for Better Security vs Reproducible Builds</source>
      </item>
      <item>
        <title>Hide Kernel Symbols for Better Security vs Reproducible Builds</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <p>I think you might be confused. Kernel structs and kernel pointers aren’t the same. While randstruct is important, it’s not really the point of this post.</p>
          <p><a href="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/11">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/11</link>
        <pubDate>Tue, 17 Dec 2019 17:11:35 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8599-11</guid>
        <source url="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599.rss">Hide Kernel Symbols for Better Security vs Reproducible Builds</source>
      </item>
      <item>
        <title>Hide Kernel Symbols for Better Security vs Reproducible Builds</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="9" data-topic="8599">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>Actually, it’s <a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=313dd1b629219db50cad532dba6a3b3b22ffe622">randstruct</a>, not structleak.</p>
</blockquote>
</aside>
<p>Excellent! <code>GCC_PLUGIN_RANDSTRUCT</code> was the holy grail I was looking for. Mentioned here:</p>
<aside class="quote" data-post="142" data-topic="7598">
  <div class="title">
    <div class="quote-controls"></div>
    <img alt="" width="20" height="20" src="/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar">
    <a href="https://forums.whonix.org/t/kernel-recompilation-for-better-hardening/7598/142">kernel recompilation for better hardening</a> <a class="badge-wrapper  bullet" href="http://forums.whonix.org/c/development"><span class="badge-category-bg" style="background-color: #25AAE2;"></span><span style="" data-drop-close="true" class="badge-category clear-badge" title="Hacking on the Whonix software and code. (devs) (list of unmaintained components)">Development</span></a>
  </div>
  <blockquote>
    Could you enable GCC_PLUGIN_RANDSTRUCT please? 
(related: <a href="https://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/9" class="inline-onebox">Hide Kernel Symbols for Better Security vs Reproducible Builds</a>)
  </blockquote>
</aside>

          <p><a href="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/10">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/10</link>
        <pubDate>Tue, 17 Dec 2019 17:07:01 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8599-10</guid>
        <source url="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599.rss">Hide Kernel Symbols for Better Security vs Reproducible Builds</source>
      </item>
      <item>
        <title>Hide Kernel Symbols for Better Security vs Reproducible Builds</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="8" data-topic="8599">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>As for kstructhunter, <a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=c61f13eaa1ee17728c41370100d2d45c254ce76f">structleak</a> should prevent that</p>
</blockquote>
</aside>
<p>Actually, it’s <a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=313dd1b629219db50cad532dba6a3b3b22ffe622">randstruct</a>, not structleak.</p>
<p>All these GCC plugins can be confusing sometimes.</p>
          <p><a href="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/9">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/9</link>
        <pubDate>Tue, 17 Dec 2019 17:00:53 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8599-9</guid>
        <source url="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599.rss">Hide Kernel Symbols for Better Security vs Reproducible Builds</source>
      </item>
      <item>
        <title>Hide Kernel Symbols for Better Security vs Reproducible Builds</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="6" data-topic="8599">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>In theory, Linux has this feature? Called <code>ASLR</code> .</p>
</blockquote>
</aside>
<p>No, ASLR is only for userspace memory. KASLR is for kernel memory and doesn’t change any kernel pointers. One of the reasons KASLR was such a bad idea is because the kernel is full of kernel pointer leaks.</p>
<p>Grsec made a good blog post on it.</p>
<p>As for kstructhunter, <a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=c61f13eaa1ee17728c41370100d2d45c254ce76f">structleak</a> should prevent that but because Debian’s repos are so old, it doesn’t yet support that.</p>
          <p><a href="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/8">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/8</link>
        <pubDate>Tue, 17 Dec 2019 16:57:20 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8599-8</guid>
        <source url="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599.rss">Hide Kernel Symbols for Better Security vs Reproducible Builds</source>
      </item>
      <item>
        <title>Hide Kernel Symbols for Better Security vs Reproducible Builds</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p><a href="https://forums.grsecurity.net/viewtopic.php?f=7&amp;t=3367" class="onebox" target="_blank">https://forums.grsecurity.net/viewtopic.php?f=7&amp;t=3367</a></p>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://lwn.net/images/favicon.png" class="site-icon" width="16" height="16">
      <a href="https://lwn.net/Articles/544609/" target="_blank">lwn.net</a>
  </header>
  <article class="onebox-body">
    <img src="" class="thumbnail">

<h3><a href="https://lwn.net/Articles/544609/" target="_blank">KASLR: An Exercise in Cargo Cult Security (grsecurity blog) [LWN.net]</a></h3>

<p>Over at the grsecurity blog, Brad Spengler and the PaX Team have co-written a lengthy look at kernel address space layout randomization (KASLR) and its failures. "KASLR is an easy to understand metaphor. Even non-technical users can make sense of the...</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p><a href="https://grsecurity.net/kaslr_an_exercise_in_cargo_cult_security" class="onebox" target="_blank">https://grsecurity.net/kaslr_an_exercise_in_cargo_cult_security</a></p>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicon.ico" class="site-icon" width="16" height="16">
      <a href="https://github.com/jonoberheide/ksymhunter" target="_blank">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://avatars1.githubusercontent.com/u/506986?s=400&amp;v=4" class="thumbnail" width="" height="">

<h3><a href="https://github.com/jonoberheide/ksymhunter" target="_blank">jonoberheide/ksymhunter</a></h3>

<p>Routines for hunting down kernel symbols. Contribute to jonoberheide/ksymhunter development by creating an account on GitHub.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicon.ico" class="site-icon" width="16" height="16">
      <a href="https://github.com/jonoberheide/kstructhunter" target="_blank">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://avatars1.githubusercontent.com/u/506986?s=400&amp;v=4" class="thumbnail" width="" height="">

<h3><a href="https://github.com/jonoberheide/kstructhunter" target="_blank">jonoberheide/kstructhunter</a></h3>

<p>Routines for hunting down kernel structs. Contribute to jonoberheide/kstructhunter development by creating an account on GitHub.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/7">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/7</link>
        <pubDate>Tue, 17 Dec 2019 12:45:46 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8599-7</guid>
        <source url="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599.rss">Hide Kernel Symbols for Better Security vs Reproducible Builds</source>
      </item>
      <item>
        <title>Hide Kernel Symbols for Better Security vs Reproducible Builds</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>In theory, Linux has this feature? Called <code>ASLR</code>. See:<br>
<a href="https://en.wikipedia.org/wiki/Address_space_layout_randomization#Linux">https://en.wikipedia.org/wiki/Address_space_layout_randomization#Linux</a></p>
<p>Yet, these addresses are mostly the same in two different VMs. In one VM:</p>
<pre><code>sudo sysctl -w kernel.kptr_restrict=1 &gt;/dev/null &amp;&amp; sudo cat /proc/kallsyms &gt; a
</code></pre>
<p>In another VM with the same kernel:</p>
<pre><code>sudo sysctl -w kernel.kptr_restrict=1 &gt;/dev/null &amp;&amp; sudo cat /proc/kallsyms &gt; b
</code></pre>
<p>Then compare files <code>a</code> and <code>b</code>. There is more similarity than differences, looks like. (Differences could be due to different kernel modules being load.)</p>
          <p><a href="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/6">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/6</link>
        <pubDate>Tue, 17 Dec 2019 11:14:10 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8599-6</guid>
        <source url="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599.rss">Hide Kernel Symbols for Better Security vs Reproducible Builds</source>
      </item>
      <item>
        <title>Hide Kernel Symbols for Better Security vs Reproducible Builds</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="1" data-topic="8599">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Could we use a reproducibility build kernel and then somehow instruct the kernel (through a kernel parameter or something) automagically randomize its kernel symbols addresses?</p>
</blockquote>
</aside>
<p>The only thing I know that does this is OpenBSD’s KARL which basically generates a new kernel on each reboot. There doesn’t seem to be any equivalent for Linux.</p>
          <p><a href="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/5">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/5</link>
        <pubDate>Mon, 16 Dec 2019 16:56:26 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8599-5</guid>
        <source url="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599.rss">Hide Kernel Symbols for Better Security vs Reproducible Builds</source>
      </item>
      <item>
        <title>Hide Kernel Symbols for Better Security vs Reproducible Builds</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <aside class="onebox stackexchange">
  <header class="source">
      <a href="https://security.stackexchange.com/questions/222527/how-to-hide-kernel-symbols-in-linux-kernel-image-recompliation" target="_blank">security.stackexchange.com</a>
  </header>
  <article class="onebox-body">
      <a href="https://security.stackexchange.com/users/54240/adrelanos" target="_blank">
    <img alt="adrelanos" src="https://www.gravatar.com/avatar/83f6805262f0dcc117814487c5b2d1c4?s=128&amp;d=identicon&amp;r=PG" class="thumbnail onebox-avatar" width="60" height="60">
  </a>
<h4>
  <a href="https://security.stackexchange.com/questions/222527/how-to-hide-kernel-symbols-in-linux-kernel-image-recompliation" target="_blank">How to hide Kernel Symbols in Linux Kernel Image? Recompliation?</a>
</h4>

<div class="tags">
  <strong>linux, exploit, kernel, alsr</strong>
</div>

<div class="date">
  asked by
  
  <a href="https://security.stackexchange.com/users/54240/adrelanos" target="_blank">
    adrelanos
  </a>
  on <a href="https://security.stackexchange.com/questions/222527/how-to-hide-kernel-symbols-in-linux-kernel-image-recompliation" target="_blank">07:38AM - 10 Dec 19 UTC</a>
</div>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/4">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/4</link>
        <pubDate>Tue, 10 Dec 2019 07:38:14 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8599-4</guid>
        <source url="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599.rss">Hide Kernel Symbols for Better Security vs Reproducible Builds</source>
      </item>
      <item>
        <title>Hide Kernel Symbols for Better Security vs Reproducible Builds</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Assume this is true. Assume we have <code>HIDESYM</code> / <code>kernel.kptr_restrict</code>.</p>
<p>The critical point is…</p>
<aside class="quote no-group">
<blockquote>
<p>The kernel using grsecurity is not precompiled by some distribution</p>
</blockquote>
</aside>
<p>vs nowadays reproducible builds. The kernel image cannot be in a public known state. It needs to be unique, private.</p>
<p>How the kernel image looks is public knowledge or easily knowable by compiling oneself.</p>
<p>Quote:</p>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://s1.wp.com/i/favicon.ico" class="site-icon" width="16" height="16">
      <a href="https://ryiron.wordpress.com/2013/09/05/kptr_restrict-finding-kernel-symbols-for-shell-code/" target="_blank" title="11:14PM - 05 September 2013">~ryiron – 5 Sep 13</a>
  </header>
  <article class="onebox-body">
    <img src="https://s0.wp.com/i/blank.jpg" class="thumbnail" width="" height="">

<h3><a href="https://ryiron.wordpress.com/2013/09/05/kptr_restrict-finding-kernel-symbols-for-shell-code/" target="_blank">kptr_restrict – Finding kernel symbols for shell code</a></h3>

<p>A common approach to getting a root shell from an exploit which grants execution in the kernel is to jump to a user controlled function which does the following: These kernel functions will create …</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<blockquote>
<p>In the initial discussion about hiding /proc/kallsyms, a few people pointed out that most installations are distro kernels, and attackers can simply hard-code the addresses for the necessary functions.</p>
</blockquote>
<p>system.map (kernel symbol addresses) file can be created from public or self-compiled kernel (vmlinux) (attacker could recompile. Just use the source code, and version and config we are using). Thanks to (mostly or already fully) reproduiclbe builds, the attacker would have the vmlinux binary. And then could deduct the kernel symbol addresses from that. Then hardcode these addresses in malware.</p>
<aside class="onebox stackexchange">
  <header class="source">
      <a href="https://stackoverflow.com/questions/24746704/print-all-symbolic-info-from-vmlinux-binary" target="_blank">stackoverflow.com</a>
  </header>
  <article class="onebox-body">
      <a href="https://stackoverflow.com/users/892012/udit-gupta" target="_blank">
    <img alt="Udit Gupta" src="https://www.gravatar.com/avatar/aecf3723cf771d17e6eed426a28f93e9?s=128&amp;d=identicon&amp;r=PG" class="thumbnail onebox-avatar" width="60" height="60">
  </a>
<h4>
  <a href="https://stackoverflow.com/questions/24746704/print-all-symbolic-info-from-vmlinux-binary" target="_blank">print all symbolic info from vmlinux binary</a>
</h4>

<div class="tags">
  <strong>c, linux-kernel, elf, symbols</strong>
</div>

<div class="date">
  asked by
  
  <a href="https://stackoverflow.com/users/892012/udit-gupta" target="_blank">
    Udit Gupta
  </a>
  on <a href="https://stackoverflow.com/questions/24746704/print-all-symbolic-info-from-vmlinux-binary" target="_blank">09:58PM - 14 Jul 14 UTC</a>
</div>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>The only way to prevent that is to recompile the vmlinux binary in a… How? Randomize the vmlinux build somehow? A kernel parameter? Somehow supply the kernel with a random file so it can randomize itself?</p>
          <p><a href="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/3">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/3</link>
        <pubDate>Sat, 07 Dec 2019 13:26:00 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8599-3</guid>
        <source url="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599.rss">Hide Kernel Symbols for Better Security vs Reproducible Builds</source>
      </item>
      <item>
        <title>Hide Kernel Symbols for Better Security vs Reproducible Builds</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="1" data-topic="8599">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Is hiding kernel symbols even possible without grsecurity?</p>
</blockquote>
</aside>
<p>HIDESYM is essentially <code>kernel.kptr_restrict</code> which we already set.</p>
          <p><a href="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/2">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/2</link>
        <pubDate>Sat, 07 Dec 2019 12:54:21 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8599-2</guid>
        <source url="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599.rss">Hide Kernel Symbols for Better Security vs Reproducible Builds</source>
      </item>
      <item>
        <title>Hide Kernel Symbols for Better Security vs Reproducible Builds</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Quote:</p>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://s1.wp.com/i/favicon.ico" class="site-icon" width="32" height="32">
      <a href="https://xorl.wordpress.com/2010/11/20/grkernsec_hidesym-hide-kernel-symbols/" target="_blank" title="11:51AM - 20 November 2010">xorl %eax, %eax – 20 Nov 10</a>
  </header>
  <article class="onebox-body">
    <img src="https://s0.wp.com/i/blank.jpg" class="thumbnail onebox-avatar" width="200" height="200">

<h3><a href="https://xorl.wordpress.com/2010/11/20/grkernsec_hidesym-hide-kernel-symbols/" target="_blank">GRKERNSEC_HIDESYM Hide Kernel Symbols</a></h3>

<p>Anyone with basic knowledge of kernel exploitation knows how important information gathering is to reliable exploitation. This protection hides the kernel symbols from various places that an attack…</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<blockquote>
<p>If you say Y here, getting information on loaded modules, and<br>
displaying all kernel symbols through a syscall will be restricted<br>
to users with CAP_SYS_MODULE.  For software compatibility reasons,<br>
/proc/kallsyms will be restricted to the root user.  The RBAC<br>
system can hide that entry even from root.</p>
<p>This option also prevents leaking of kernel addresses through<br>
several /proc entries.</p>
<p>Note that this option is only effective provided the following<br>
conditions are met:</p>
<ol>
<li>The kernel using grsecurity is not precompiled by some distribution</li>
<li>You have also enabled GRKERNSEC_DMESG</li>
<li>You are using the RBAC system and hiding other files such as your<br>
kernel image and System.map.  Alternatively, enabling this option<br>
causes the permissions on /boot, /lib/modules, and the kernel<br>
source directory to change at compile time to prevent<br>
reading by non-root users.<br>
If the above conditions are met, this option will aid in providing a<br>
useful protection against local kernel exploitation of overflows<br>
and arbitrary read/write vulnerabilities.</li>
</ol>
<p>It is highly recommended that you enable GRKERNSEC_PERF_HARDEN<br>
in addition to this feature.</p>
</blockquote>
<p>Is hiding kernel symbols even possible without grsecurity?</p>
<p><a href="https://github.com/Whonix/security-misc">security-misc</a> is already deleting system.map files and restricts <code>kallsyms</code>. Soon we’ll implement <a href="https://phabricator.whonix.org/T937">make /boot and /lib/modules unreadable for non-root users</a> and maybe even <a href="https://phabricator.whonix.org/T943">make /boot and /lib/modules unreadable even for root</a>.</p>
<blockquote>
<p>and the kernel source directory</p>
</blockquote>
<p>Why even the kernel source directory should be hidden?</p>
<p>One idea of <a href="https://forums.whonix.org/t/kernel-recompilation-for-better-hardening/7598" class="inline-onebox">kernel recompilation for better hardening</a> was the recompile on the users machine so the kernel would be uniquely compiled and kernel symbols would stay hidden, Rather than using Debian public kernel (from <a href="http://packages.debian.org">packages.debian.org</a>) which has public well known kernel symbols.</p>
<p>But Debian is working towards <a href="https://reproducible-builds.org/">reproducible builds</a>. Thereby when compiling the Debian kernel on the user’s machine, it is likely the user would end up with a byte identical versions.</p>
<p>Could we use a reproducibility build kernel and then somehow instruct the kernel (through a kernel parameter or something) automagically randomize its kernel symbols addresses?</p>
<p><a href="https://kernsec.org/wiki/index.php/Bug_Classes/Kernel_pointer_leak" class="onebox" target="_blank">https://kernsec.org/wiki/index.php/Bug_Classes/Kernel_pointer_leak</a></p>
          <p><a href="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599/1</link>
        <pubDate>Sat, 07 Dec 2019 08:26:27 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8599-1</guid>
        <source url="http://forums.whonix.org/t/hide-kernel-symbols-for-better-security-vs-reproducible-builds/8599.rss">Hide Kernel Symbols for Better Security vs Reproducible Builds</source>
      </item>
  </channel>
</rss>

<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Security Enhancements for Python scripts - PyPy</title>
    <link>http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622</link>
    <description>Troubadour I was posting this to get your thoughts on these two ways to further improve security of Python scripts.

[u][b]PyPy:[/b][/u]

I was looking for a secure sandboxing mechanism for Python and I found PyPy. 

They are an implementation of the entire Python interpreter except they have designed their version to handle untrusted code safely. 

No functionality is removed when compared to standard Python. 

They have packages in Debian Jessie.

Obviously not all Python modules have been implemented using RPython or PyPy but they should be compatible. I don&#39;t understand if the normal modules, in standard Python could also take advantage of the hardened PyPy interpreter. Would like a word on that if you understand more about it.

References:
[1] https://lwn.net/Articles/574215/
(Where I got the idea. Note that PyPy was recommended as an alternative by the author of a failed approach called pysandbox - which he confessed as having restricted too much functionality but its sandbox still leaky. That was because he tried to implement the sandbox inside the interpreter itself rather than from the outside).
[2] http://pypy.org/ (PyPy&#39;s many virtues)
[3] http://pypy.org/features.html#sandboxing
[4] https://packages.debian.org/search?keywords=pypy
[5] https://packages.debian.org/jessie/python-pypy.sandboxing
[6] https://packages.debian.org/jessie/pypy
[7] http://pypy.org/compat.html (notes on compatibility with standard Python modules)



Edit by Patrick:
edited title

Edit by HulaHoop:
split topics</description>
    <language>en</language>
    <lastBuildDate>Wed, 04 Feb 2015 22:21:04 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Security Enhancements for Python scripts - PyPy</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Ticket:<br>
<a href="https://phabricator.whonix.org/T129" class="onebox" target="_blank">https://phabricator.whonix.org/T129</a></p>
          <p><a href="http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622/5">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622/5</link>
        <pubDate>Wed, 04 Feb 2015 22:21:04 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-622-5</guid>
        <source url="http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622.rss">Security Enhancements for Python scripts - PyPy</source>
      </item>
      <item>
        <title>Security Enhancements for Python scripts - PyPy</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="2" data-topic="622">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/t/d9b06d/40.png" class="avatar"> troubadour:</div>
<blockquote>
<p>Please note that pypy-sandbox is only available from source at the moment</p>
</blockquote>
</aside>
<p>Are you sure about this?</p>
<p>Found this one:<br>
<a href="https://packages.debian.org/jessie/python-pypy.sandbox" class="onebox" target="_blank">https://packages.debian.org/jessie/python-pypy.sandbox</a></p>
<p>[quote=“Patrick, post:3, topic:622”]pypy also doesn’t support python 3.x yet.<br>
<a href="http://pypy.org/py3donate.html%5B/quote%5D" class="onebox" target="_blank">http://pypy.org/py3donate.html[/quote]</a><br>
Perhaps I was wrong. Wikipedia and the blog says, there is pypy3 that has python 3.x support.</p>
          <p><a href="http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622/4">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622/4</link>
        <pubDate>Wed, 04 Feb 2015 20:58:59 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-622-4</guid>
        <source url="http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622.rss">Security Enhancements for Python scripts - PyPy</source>
      </item>
      <item>
        <title>Security Enhancements for Python scripts - PyPy</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>pypy also doesn’t support python 3.x yet.<br>
<a href="http://pypy.org/py3donate.html" class="onebox" target="_blank">http://pypy.org/py3donate.html</a></p>
          <p><a href="http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622/3">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622/3</link>
        <pubDate>Mon, 27 Oct 2014 16:02:44 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-622-3</guid>
        <source url="http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622.rss">Security Enhancements for Python scripts - PyPy</source>
      </item>
      <item>
        <title>Security Enhancements for Python scripts - PyPy</title>
        <dc:creator><![CDATA[troubadour]]></dc:creator>
        <description><![CDATA[
            <p>PyPy looks promising. If time permits, I shall give it a try in my host (jessie). Please note that pypy-sandbox is only available from source at the moment, and for this reason, will not be used as is in Whonix  (I believe).</p>
<blockquote>I don't understand if the normal modules, in standard Python could also take advantage of the hardened PyPy interpreter.</blockquote>
<p>That’s a big question. Will have to find out when I start testing. In the meantime, I think we’ll try to confine cpfp.py with AppArmor.</p>
          <p><a href="http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622/2">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622/2</link>
        <pubDate>Mon, 27 Oct 2014 14:39:30 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-622-2</guid>
        <source url="http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622.rss">Security Enhancements for Python scripts - PyPy</source>
      </item>
      <item>
        <title>Security Enhancements for Python scripts - PyPy</title>
        <dc:creator><![CDATA[HulaHoop]]></dc:creator>
        <description><![CDATA[
            <p>Troubadour I was posting this to get your thoughts on these two ways to further improve security of Python scripts.</p>
<p><span class="bbcode-u"><span class="bbcode-b">PyPy:</span></span></p>
<p>I was looking for a secure sandboxing mechanism for Python and I found PyPy.</p>
<p>They are an implementation of the entire Python interpreter except they have designed their version to handle untrusted code safely.</p>
<p>No functionality is removed when compared to standard Python.</p>
<p>They have packages in Debian Jessie.</p>
<p>Obviously not all Python modules have been implemented using RPython or PyPy but they should be compatible. I don’t understand if the normal modules, in standard Python could also take advantage of the hardened PyPy interpreter. Would like a word on that if you understand more about it.</p>
<p>References:<br>
[1] <a href="https://lwn.net/Articles/574215/">https://lwn.net/Articles/574215/</a><br>
(Where I got the idea. Note that PyPy was recommended as an alternative by the author of a failed approach called pysandbox - which he confessed as having restricted too much functionality but its sandbox still leaky. That was because he tried to implement the sandbox inside the interpreter itself rather than from the outside).<br>
[2] <a href="http://pypy.org/">http://pypy.org/</a> (PyPy’s many virtues)<br>
[3] <a href="http://pypy.org/features.html#sandboxing">http://pypy.org/features.html#sandboxing</a><br>
[4] <a href="https://packages.debian.org/search?keywords=pypy">https://packages.debian.org/search?keywords=pypy</a><br>
[5] <a href="https://packages.debian.org/jessie/python-pypy.sandboxing">https://packages.debian.org/jessie/python-pypy.sandboxing</a><br>
[6] <a href="https://packages.debian.org/jessie/pypy">https://packages.debian.org/jessie/pypy</a><br>
[7] <a href="http://pypy.org/compat.html">http://pypy.org/compat.html</a> (notes on compatibility with standard Python modules)</p>
<p>Edit by Patrick:<br>
edited title</p>
<p>Edit by HulaHoop:<br>
split topics</p>
          <p><a href="http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622/1</link>
        <pubDate>Sun, 26 Oct 2014 16:37:01 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-622-1</guid>
        <source url="http://forums.whonix.org/t/security-enhancements-for-python-scripts-pypy/622.rss">Security Enhancements for Python scripts - PyPy</source>
      </item>
  </channel>
</rss>

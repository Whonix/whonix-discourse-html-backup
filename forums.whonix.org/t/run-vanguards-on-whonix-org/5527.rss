<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>run Vanguards on whonix.org</title>
    <link>http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527</link>
    <description>[quote=&quot;mig5, post:10, topic:5446&quot;]
If it’s within my ability to solve any issues relating to the infrastructure
[/quote]

I think most things are within your ability based on recent successes! We&#39;re loving your work. Here&#39;s another possibility:

How about implementing the Vanguards Control Port Add-On server side? Works with Tor 3.3 or 3.4 series.

  https://blog.torproject.org/announcing-vanguards-add-onion-services

&gt; A traffic analysis side channel can be used to confirm that the malicious node is in fact part of the rendezvous circuit, leading to the discovery of that onion service&#39;s guard node. From that point, the guard node can be compromised, coerced, or surveilled to determine the actual IP address of the onion service or client.
&gt; 
&gt; **The Vanguards Control Port Add-On**
&gt; 
&gt; Fixing the guard discovery problem in Tor itself is an immense project -- primarily because it involves many trade-offs between performance and scalability versus path security, which makes it very hard to pick good defaults for every onion service.
&gt; 
&gt; Because of this, we have created an add-on that can be used in conjunction with a Tor onion service server or a Tor client that accesses Tor onion services.
&gt; 
&gt; The add-on uses our Control Port Protocol and the corresponding Stem Library to defend against these attacks. The hope is that it will we will be able to study the performance and functionality of this feature and gather feedback before we deploy these changes in Tor for all onion services and clients.
&gt; 
&gt; [...]
&gt; 
&gt; This change to fixed nodes for the second and third layer guards is designed to force the adversary to have to run many more nodes, and to execute both an active sybil attack, as well as a node compromise attack. In particular, the addition of second layer guard nodes means that the adversary goes from being able to discover your guard in minutes by running just one middle node, to requiring them to sustain the attack for weeks or even months, even if they run 5% of the network.

Mike Perry (the guru) notes re: bridges -&gt;

&gt; Without the vanguards addon, these same attacks will work to find the bridge your onion service is using. So using a bridge by itself is not a defense. However, using a bridge with this addon will provide some additional benefit. Namely, if the bridge is not well-known, it can help obscure the fact that your onion service server is connecting to the Tor network, because the traffic from your onion service into the Tor network will be obfuscated. If meek still works, it is probably the best option, but I think meek no longer works well because the major cloud providers started blocking it -- https://arstechnica.com/information-technology/2018/04/google-disables-… -- so obfs4 or basket may be the best choice. I would use two bridges.

And how this prevents some attacks compared to the normal situation -&gt;

&gt; No, unfortunately as soon as a malicious middle node is chosen next to your guard node on one of the (many) circuits that the adversary creates, a specially timed stream of data can be used to determine that it is in fact present in the circuit and next to your guard, regardless of the number of hops in your path. See the README for more details: https://github.com/mikeperry-tor/vanguards/blob/master/README.md

No downside, all upside?</description>
    <language>en</language>
    <lastBuildDate>Fri, 21 Jun 2019 11:30:21 +0000</lastBuildDate>
    <category>Website</category>
    <atom:link href="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>run Vanguards on whonix.org</title>
        <dc:creator><![CDATA[torjunkie]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="http://forums.whonix.org/u/mig5">@mig5</a> is your main person to get a reply from, since he knows what he is talking about. Hopefully he’ll chime in.</p>
          <p><a href="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/10">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/10</link>
        <pubDate>Fri, 21 Jun 2019 11:30:21 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-5527-10</guid>
        <source url="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527.rss">run Vanguards on whonix.org</source>
      </item>
      <item>
        <title>run Vanguards on whonix.org</title>
        <dc:creator><![CDATA[acis]]></dc:creator>
        <description><![CDATA[
            <p>I read this thread but I am not sure about the final conclusion. I still have some doubts, is it a good idea to install Vanguards if you want to host a hidden server and protect against attacks? If so, do you only need to follow their official instructions to install it in the Whonix Gateway? Or do you need any additional configuration? Maybe I am just asking dump questions but I am trying to really understand it and at the beginning it takes some time…</p>
          <p><a href="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/9">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/9</link>
        <pubDate>Tue, 11 Jun 2019 03:27:50 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-5527-9</guid>
        <source url="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527.rss">run Vanguards on whonix.org</source>
      </item>
      <item>
        <title>run Vanguards on whonix.org</title>
        <dc:creator><![CDATA[mig5]]></dc:creator>
        <description><![CDATA[
            <blockquote>
<p>Seems Vanguards are useless server-side for Whonix (unless coming under sustained attack), could be useful client-side, &amp; is essential for those running “hidden” servers and want to really stay hidden (for longer).</p>
</blockquote>
<p>That was the same conclusion I came to as well.</p>
<blockquote>
<p>The onehopmode no doubt is good for performance, stability etc, so really only the anonymity risk issue for clients is unanswered.</p>
</blockquote>
<p>And even if the use of a single-hop service is statistically distinguishable, so is the act of using Vanguards.</p>
<p>It seems to me the risk of the guard attacks that are mitigated by Vanguards, will likely matter more to clients than the fact that their traffic (note: still anonymized) might indicate they’re visiting ‘a’ single-hop service.</p>
<p>In other words there are bigger problems than a statistically distinguishable visit to a single-hop service vs a regular service. And the use of Vanguards to solve those problems, leaks statistically distinguishable activity anyway (the use of a static selection of l2, l3 middle hops). So if you can’t avoid being statistically distinguishable, may as well protect yourself against the bigger threat, and use Vanguards as a client. And therefore, we may as well use the SingleHop mode <em>if</em> we really think we would benefit from it performance-wise.</p>
<p>But I will ask around indeed just to see if this sentiment is shared… I will also test running the SingleHop mode on our staging server, as I’m curious about the apparent performance benefits and if they’re even noticeable.</p>
<p>Even though I’m crossing topic a bit here, I also am not too worried about the DoS risk of SingleHop mode - again, since the public IP of <a href="http://whonix.org">whonix.org</a> is known, the DoS risk already exists on the clearnet.</p>
          <p><a href="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/8">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/8</link>
        <pubDate>Wed, 25 Jul 2018 23:00:10 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-5527-8</guid>
        <source url="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527.rss">run Vanguards on whonix.org</source>
      </item>
      <item>
        <title>run Vanguards on whonix.org</title>
        <dc:creator><![CDATA[torjunkie]]></dc:creator>
        <description><![CDATA[
            <p><strong>1. Re: Vanguards</strong></p>
<blockquote>
<p>mikeperry said</p>
<p>For onion services, the key thing that makes this worthwhile is that the adversary gets to force you to create as many circuits as they like, by continuously connecting to you. So if you are actually under attack, it is strictly better to use restricted second and third layer guards that rotate slower than your circuit creation.</p>
<p>For onion clients, it is a bit more fuzzy since it is harder to get them to build lots of circuits. But, if the adversary only controls a small percentage of the network, you’re still more likely to get lucky than be SOL right away, as you say.</p>
</blockquote>
<p><strong>2. Re: hidden services that really want to stay hidden</strong></p>
<p>(perhaps we warn Whonix users configuring hidden services in wiki instructions)</p>
<blockquote>
<p>mikeperry said</p>
<p>I’m a little on the yolo side myself but I still deal in science over here. To me, the tradeoffs are clear. If you do not use this addon, the adversary can find your guard in a hot minute (which is much shorter than a wall-clock minute ;), and can use a whole treasure chest of unfixed-in-core-tor attacks to confirm this, observe the guard, and then find your IP address. If you do use this addon, you are making use of the best ways we know of to slow down these attacks. Just a little bit before they go into core-tor.</p>
</blockquote>
<p>&amp; (multiple bridges + Vanguard to stymie deanonymization of hosted .onions is better)</p>
<blockquote>
<p>Without the vanguards addon, these same attacks will work to find the bridge your onion service is using. So using a bridge by itself is not a defense. However, using a bridge with this addon will provide some additional benefit. Namely, if the bridge is not well-known, it can help obscure the fact that your onion service server is connecting to the Tor network, because the traffic from your onion service into the Tor network will be obfuscated. If meek still works, it is probably the best option, but I think meek no longer works well because the major cloud providers started blocking it – <a href="https://arstechnica.com/information-technology/2018/04/google-disables-%E2%80%A6">https://arstechnica.com/information-technology/2018/04/google-disables-…</a> – so obfs4 or basket may be the best choice. I would use two bridges.</p>
</blockquote>
<p><strong>3. Why longer than 3 hops does SFA for anonymity</strong></p>
<p>(we should add to wiki FAQ, as this shit has come up a few times before):</p>
<blockquote>
<p>mikeperry said:</p>
<p>July 20, 2018</p>
<p>In reply to just use 4-hop onions as… by Instead of def… (not verified)<br>
Permalink</p>
<p>No, unfortunately as soon as a malicious middle node is chosen next to your guard node on one of the (many) circuits that the adversary creates, a specially timed stream of data can be used to determine that it is in fact present in the circuit and next to your guard, regardless of the number of hops in your path. See the README for more details: <a href="https://github.com/mikeperry-tor/vanguards/blob/master/README.md">https://github.com/mikeperry-tor/vanguards/blob/master/README.md</a></p>
<p>And see <a href="https://petsymposium.org/2018/files/papers/issue2/popets-2018-0011.pdf">https://petsymposium.org/2018/files/papers/issue2/popets-2018-0011.pdf</a> for the latest research paper on this type of attack.</p>
<p>This is why this addon restricts the number of nodes that can be in the second and third hop, and puts hard limits on the data that can be sent down a Tor circuit that is dropped by the client (and also optionally limits the total amount of data sent on a Tor circuit).</p>
</blockquote>
<p><strong>4. Network fingerprinting impact of Vanguards</strong></p>
<blockquote>
<p>mikeperry said:</p>
<p>July 23, 2018</p>
<p>In reply to Wouldn’t this be more… by Anonymous (not verified)<br>
Permalink</p>
<p>There are two ways that this addon will alter your network fingerprint.</p>
<p>The first is observable by a local observer watching your connections into the Tor network. They would now see you’re using your two entry guards slightly differently than how stock Tor uses its two guards today. We’re working on making all existing stock Tor clients use two guards in a more balanced way (which is possible with a consensus parameter change), but it takes a lot of effort to convince the whole herd of cats that this should be done sooner rather than later. The hard part is that the counter argument against making all clients use two guards in a balanced way is “Whaaaaa?? I thought Tor was using ONE GUARD. WE SHOULD FIX THAT.” Except making stock Tor actually use one guard is even harder, and opens up more low-resource attacks, too.</p>
<p>While this fingerprinting vector could be eliminated by setting the vanguards configuration option num_layer1_guards to 1 instead of its current default of 2, it turns out that telling Tor to use only one guard as an onion service opens up a very noisy side channel + confirmation attack that can be detected by this same local observer (because it is possible for them to force a “single entry guard” onion service to use a second guard at specific times).</p>
<p>The second way your network fingerprint differs when you use this addon is that your guard nodes will see that your Tor client is only connecting to a restricted set of middle hops instead of the whole network (unless you also use that same Tor client to also connect to the external Internet). At this time, there are a lot of other traffic analysis vectors that can be used to fingerprint a hidden service if you control the guard node, though.</p>
<p>In both cases, I personally feel that the benefit from protecting against guard discovery outweighs the additional fingerprinting risk from these two vectors. And in the long term, we can mitigate/obscure them, too.</p>
</blockquote>
<p><strong>Summary</strong></p>
<p>Seems Vanguards are useless server-side for Whonix (unless coming under sustained attack), could be useful client-side, &amp; is essential for those running “hidden” servers and want to really stay hidden (for longer).</p>
<p>The onehopmode no doubt is good for performance, stability etc, so really only the anonymity risk issue for clients is unanswered.</p>
          <p><a href="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/7">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/7</link>
        <pubDate>Wed, 25 Jul 2018 08:46:05 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-5527-7</guid>
        <source url="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527.rss">run Vanguards on whonix.org</source>
      </item>
      <item>
        <title>run Vanguards on whonix.org</title>
        <dc:creator><![CDATA[torjunkie]]></dc:creator>
        <description><![CDATA[
            <p>Interesting stuff mig5, thanks for looking into it.</p>
<p>Why not ask directly on either the blog post or tor-talk mailing list i.e.</p>
<blockquote>
<p>Hi, I’m currently administrating the Whonix server and v2/v3 onions, and we have been debating the possible benefits of using either:</p>
<p>a) Vanguards server-side; or<br>
b) HiddenServiceSingleHopMode</p>
<p>We understand that option A won’t be very helpful server-side, since the server is not really “hidden” i.e. the IP is known and also exists in clearnet etc, although it might be useful client-side for Whonix users.</p>
<p>In relation to option B, we understand it would provide a performance and stability benefit, but have concerns over possible degradation of anonymity for site visitors:</p>
<ul>
<li>Clients may be statistically distinguishable e.g. malicious nodes identifying single hop user traffic and running exploits to unmask users.</li>
<li>Increased DDOS risk and threat of other attacks e.g. intersection attacks (?)</li>
<li>These are new features that haven’t matured.</li>
</ul>
<p>We would appreciate your informed opinion on whether you believe option a) or b) should be configured for a significant performance/security benefit, or whether the status quo is preferable for client anonymity.</p>
</blockquote>
          <p><a href="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/6">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/6</link>
        <pubDate>Tue, 24 Jul 2018 09:10:27 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-5527-6</guid>
        <source url="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527.rss">run Vanguards on whonix.org</source>
      </item>
      <item>
        <title>run Vanguards on whonix.org</title>
        <dc:creator><![CDATA[mig5]]></dc:creator>
        <description><![CDATA[
            <p>It is interesting to note that use of Vanguards probably is distinguishable on the network, same as HiddenServiceSingleHopMode:</p>
<blockquote>
<p>The second way your network fingerprint differs when you use this addon is that your guard nodes will see that your Tor client is only connecting to a restricted set of middle hops instead of the whole network (unless you also use that same Tor client to also connect to the external Internet). At this time, there are a lot of other traffic analysis vectors that can be used to fingerprint a hidden service if you control the guard node, though.</p>
</blockquote>
<p>This being the case, if we were to implement either option, and both are network distinguishable, and if guard discovery/de-anonymisation of the <em>server</em> side is not a problem we care about (it isn’t), I would choose HiddenServiceSingleHopMode for the performance enhancements.</p>
<p>Because even if the <em>client</em> side’s use of SingleHop mode is distinguishable, they are distinguishable anyway if they are using Vanguards (which they should, to improve <em>their</em> chance of avoiding de-anonymisation by these guard attacks), so ‘distinguishable’ probably can’t be avoided when also seeking extra security.</p>
          <p><a href="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/5">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/5</link>
        <pubDate>Tue, 24 Jul 2018 01:41:24 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-5527-5</guid>
        <source url="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527.rss">run Vanguards on whonix.org</source>
      </item>
      <item>
        <title>run Vanguards on whonix.org</title>
        <dc:creator><![CDATA[mig5]]></dc:creator>
        <description><![CDATA[
            <p>asn replied on the article:</p>
<blockquote>
<p>Onion services with HiddenServiceSingleHopMode enabled do not use entry guards because they don’t benefit from them (since they are not anonymous), hence there is no point for guard discovery attack or deanonymization attacks there</p>
</blockquote>
<p>Although we are not using HiddenServiceSingleHopMode right now, the fact remains that the <a href="http://Whonix.org">Whonix.org</a> onions are not really ‘hidden’ as they exist in clearnet too and the IP is known. The Whonix infra is in effect a public service and not trying to ‘hide’, it instead is there to allow users to privately visit the infrastructure.</p>
<p>Accordingly, and noting the response, I’m not sure Vanguards are worthwhile for our use case.</p>
<p>Guard discovery/deanonymisation of the <em>server</em> side is not in our threat model (same reason we are/were considering the HiddenServiceSingleHop mode), and that’s what Vanguards, when employed server-side, protect.</p>
<p>But it may make sense for users to use Vanguards client-side.</p>
<p>That’s my understanding, but I might have it wrong, so welcome thoughts from others.</p>
          <p><a href="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/4">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/4</link>
        <pubDate>Tue, 24 Jul 2018 01:33:13 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-5527-4</guid>
        <source url="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527.rss">run Vanguards on whonix.org</source>
      </item>
      <item>
        <title>run Vanguards on whonix.org</title>
        <dc:creator><![CDATA[mig5]]></dc:creator>
        <description><![CDATA[
            <p>I think we probably also can’t use the BandGuards feature since our use case may involve long-lived or very large transfers of data (downloads, mirroring etc).</p>
<p>I’ve asked about HiddenServiceSingleHopMode on the blog post.</p>
          <p><a href="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/3">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/3</link>
        <pubDate>Sun, 22 Jul 2018 05:20:15 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-5527-3</guid>
        <source url="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527.rss">run Vanguards on whonix.org</source>
      </item>
      <item>
        <title>run Vanguards on whonix.org</title>
        <dc:creator><![CDATA[mig5]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group quote-modified" data-post="11" data-topic="5446">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/t/f9ae1b/40.png" class="avatar"><a href="//forums.whonix.org/t/new-sysadmin-saying-hello/5446/11">New sysadmin saying hello</a>
</div>
<blockquote>
<p>How about implementing the Vanguards Control Port Add-On server side? Works with Tor 3.3 or 3.4 series.</p>
<p><a href="https://blog.torproject.org/announcing-vanguards-add-onion-services">https://blog.torproject.org/announcing-vanguards-add-onion-services</a></p>
</blockquote>
</aside>
<p>Ah yes, I was reading this yesterday. Vanguards previously came to my attention on OnionShare but hadn’t read that much into it yet. This article’s been the best overview of the feature I’ve read yet.</p>
<aside class="quote no-group quote-modified" data-post="11" data-topic="5446">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v2/letter/t/f9ae1b/40.png" class="avatar"><a href="//forums.whonix.org/t/new-sysadmin-saying-hello/5446/11">New sysadmin saying hello</a>
</div>
<blockquote>
<p>No downside, all upside?</p>
</blockquote>
</aside>
<p>Not quite no downside. Someone who wrote the first couple of comments does a pretty good job of identifying what the trade-off being made is - the element of risk is shifted somewhat but not eradicated (still a risk of ending up with a malicious node, but arguably less chance of it (?) and also the burden of effort for that malicious node to perform attacks is, I think, higher…)</p>
<p>I need to read up more on it, and I also need to understand if this is conflicts with <a href="https://forums.whonix.org/t/should-we-use-hiddenservicesinglehopmode-for-whonix-org-server/5424">Should we use HiddenServiceSingleHopMode for whonix.org server?</a>  - as per that thread, we care less about ‘deanonymizing the onion service’ since the <a href="http://whonix.org">whonix.org</a> IP is already known - but we care about not deanonymizing the client, so maybe indeed we need to consider Vanguards for this, and therefore forget HiddenServiceSingleHopMode.</p>
<p>Anyway yes - definitely on my radar to understand and then decide whether to implement. Thanks!</p>
          <p><a href="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/2">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/2</link>
        <pubDate>Sun, 22 Jul 2018 05:11:07 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-5527-2</guid>
        <source url="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527.rss">run Vanguards on whonix.org</source>
      </item>
      <item>
        <title>run Vanguards on whonix.org</title>
        <dc:creator><![CDATA[torjunkie]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-post="10" data-topic="5446">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/mig5/40/1647_1.png" class="avatar"><a href="//forums.whonix.org/t/new-sysadmin-saying-hello/5446/10">New sysadmin saying hello</a>
</div>
<blockquote>
<p>If it’s within my ability to solve any issues relating to the infrastructure</p>
</blockquote>
</aside>
<p>I think most things are within your ability based on recent successes! We’re loving your work. Here’s another possibility:</p>
<p>How about implementing the Vanguards Control Port Add-On server side? Works with Tor 3.3 or 3.4 series.</p>
<p><a href="https://blog.torproject.org/announcing-vanguards-add-onion-services">https://blog.torproject.org/announcing-vanguards-add-onion-services</a></p>
<blockquote>
<p>A traffic analysis side channel can be used to confirm that the malicious node is in fact part of the rendezvous circuit, leading to the discovery of that onion service’s guard node. From that point, the guard node can be compromised, coerced, or surveilled to determine the actual IP address of the onion service or client.</p>
<p><strong>The Vanguards Control Port Add-On</strong></p>
<p>Fixing the guard discovery problem in Tor itself is an immense project – primarily because it involves many trade-offs between performance and scalability versus path security, which makes it very hard to pick good defaults for every onion service.</p>
<p>Because of this, we have created an add-on that can be used in conjunction with a Tor onion service server or a Tor client that accesses Tor onion services.</p>
<p>The add-on uses our Control Port Protocol and the corresponding Stem Library to defend against these attacks. The hope is that it will we will be able to study the performance and functionality of this feature and gather feedback before we deploy these changes in Tor for all onion services and clients.</p>
<p>[…]</p>
<p>This change to fixed nodes for the second and third layer guards is designed to force the adversary to have to run many more nodes, and to execute both an active sybil attack, as well as a node compromise attack. In particular, the addition of second layer guard nodes means that the adversary goes from being able to discover your guard in minutes by running just one middle node, to requiring them to sustain the attack for weeks or even months, even if they run 5% of the network.</p>
</blockquote>
<p>Mike Perry (the guru) notes re: bridges -&gt;</p>
<blockquote>
<p>Without the vanguards addon, these same attacks will work to find the bridge your onion service is using. So using a bridge by itself is not a defense. However, using a bridge with this addon will provide some additional benefit. Namely, if the bridge is not well-known, it can help obscure the fact that your onion service server is connecting to the Tor network, because the traffic from your onion service into the Tor network will be obfuscated. If meek still works, it is probably the best option, but I think meek no longer works well because the major cloud providers started blocking it – <a href="https://arstechnica.com/information-technology/2018/04/google-disables-%E2%80%A6">https://arstechnica.com/information-technology/2018/04/google-disables-…</a> – so obfs4 or basket may be the best choice. I would use two bridges.</p>
</blockquote>
<p>And how this prevents some attacks compared to the normal situation -&gt;</p>
<blockquote>
<p>No, unfortunately as soon as a malicious middle node is chosen next to your guard node on one of the (many) circuits that the adversary creates, a specially timed stream of data can be used to determine that it is in fact present in the circuit and next to your guard, regardless of the number of hops in your path. See the README for more details: <a href="https://github.com/mikeperry-tor/vanguards/blob/master/README.md">https://github.com/mikeperry-tor/vanguards/blob/master/README.md</a></p>
</blockquote>
<p>No downside, all upside?</p>
          <p><a href="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527/1</link>
        <pubDate>Sun, 22 Jul 2018 00:53:49 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-5527-1</guid>
        <source url="http://forums.whonix.org/t/run-vanguards-on-whonix-org/5527.rss">run Vanguards on whonix.org</source>
      </item>
  </channel>
</rss>

<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>HTTP/2 and SPDY</title>
    <link>http://forums.whonix.org/t/http-2-and-spdy/865</link>
    <description>Another way to considerably speed up the Whonix.org website could be to switch away from the standard HTTP 1.1 protocol in exchange for HTTP/2 or SPDY.

Standard HTTP 1.1 works by requesting and fetching the HTML page. Then the browser reads the HTML page, and has to request and fetch all the other page assets (CSS, JavaScript, Images, Fonts, etc). So for a single webpage, there can be dozens of separate requests out to servers for downloading page assets that need to be fulfilled. This really slows total page load times.

HTTP/2 and SPDY which is being deprecated in exchange for the new HTTP/2 over the next year work differently by having the server first fetch all of the page assets and send everything to the user&#39;s browser in one single fetch (multiplexing). As well as using compression and prioritization schemes. So one single page download, instead of in many separate requests.

I&#39;ve heard and seen that such HTTP multiplexing protocols can considerably speed up webpage load times.

See this following demo site that compares HTTP vs. HTTPS with SPDY...
- http://www.httpvshttps.com

Some decent overview, timeframe, and browser support info in the Wikipedia articles...
- https://en.wikipedia.org/wiki/HTTP/2
- https://en.wikipedia.org/wiki/SPDY

I&#39;m not sure if all the necessary compatibility factors match up quite yet, so that would have to be considered. But I just wanted to give a heads up that HTTP/2 is likely to be a strong solution for additionally speeding up the Whonix.org website in the upcoming future.

And, as a bonus, a potentially a good thing for overall web anonymity that may make fingerprinting HTTPS webpages by netflows a bit harder.</description>
    <language>en</language>
    <lastBuildDate>Sat, 14 Mar 2015 03:21:39 +0000</lastBuildDate>
    <category>Website</category>
    <atom:link href="http://forums.whonix.org/t/http-2-and-spdy/865.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>HTTP/2 and SPDY</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <p>That’s okay. I don’t imagine I’d come up with much different at this point.</p>
<p>This seems to becoming the new future standard with HTTP/2 and so hopefully the tools will improve and hopefully will be able to further aid the latency bottleneck.</p>
          <p><a href="http://forums.whonix.org/t/http-2-and-spdy/865/10">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/http-2-and-spdy/865/10</link>
        <pubDate>Sat, 14 Mar 2015 03:21:39 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-865-10</guid>
        <source url="http://forums.whonix.org/t/http-2-and-spdy/865.rss">HTTP/2 and SPDY</source>
      </item>
      <item>
        <title>HTTP/2 and SPDY</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>True.</p>
<p>Source: <a href="http://nginx.org/en/docs/http/ngx_http_spdy_module.html">http://nginx.org/en/docs/http/ngx_http_spdy_module.html</a> Quote:</p>
<blockquote>Current implementation of SPDY protocol does not support “server push”.</blockquote>
Looks like this stuff will take quite some more time.
<p>[hr]</p>
<p>I’ve tested locally using chromium using add-on page load time. (Tested that chromium has SPDY support [success] as well as that <a href="http://whonix.org">whonix.org</a> had SPDY support [success].) Noticed no difference.</p>
<p>I should re-test with chromium add-on cache killer enabled. (Disables cache. Increases page load times by ~0.2 - ~0.3 seconds.)</p>
<p>Enabling/disabling SPDY in nginx is quite low effort.</p>
<p>SPDY is disabled for now. Would you like to run some benchmarks against <a href="http://whonix.org">whonix.org</a> yourself? Then I re-enable, then you can test again and compare.</p>
          <p><a href="http://forums.whonix.org/t/http-2-and-spdy/865/9">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/http-2-and-spdy/865/9</link>
        <pubDate>Fri, 13 Mar 2015 01:03:23 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-865-9</guid>
        <source url="http://forums.whonix.org/t/http-2-and-spdy/865.rss">HTTP/2 and SPDY</source>
      </item>
      <item>
        <title>HTTP/2 and SPDY</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <p>A few notes:</p>
<p>A good HTTP/2 or SPDY speed test would involve these elements:</p>
<ul>
<li>Server Support</li>
<li>Client Support</li>
<li>No Local Client Cache</li>
<li>Ensuring the Push Capability is Activated and Working</li>
</ul>
<p>Not sure if auto speed test services would handle this protocol yet or not. Maybe not, since it is a bit early still.</p>
<p>These mention browser support for Firefox and others. So whenever Tor Browser catches up to these Firefox versions.</p>
<aside class="onebox wikipedia">
  <header class="source">
      <a href="https://en.wikipedia.org/wiki/HTTP/2#Browser_support" target="_blank" rel="nofollow noopener">en.wikipedia.org</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:220/311;"><img src="//upload.wikimedia.org/wikipedia/commons/thumb/0/01/Http2-explained-en.pdf/page1-220px-Http2-explained-en.pdf.jpg" class="thumbnail" width="220" height="311"></div>

<h3><a href="https://en.wikipedia.org/wiki/HTTP/2#Browser_support" target="_blank" rel="nofollow noopener">HTTP/2</a></h3>

<p>
 HTTP/2 (originally named HTTP/2.0) is a major revision of the HTTP network protocol used by the World Wide Web. It was derived from the earlier experimental SPDY protocol, originally developed by Google. HTTP/2 was developed by the HTTP Working Group (also called httpbis, where "bis" means "second") of the Internet Engineering Task Force. HTTP/2 is the first new version of HTTP since HTTP&nbsp;1.1, which was standardized in RFC 2068 in 1997. The Working Group presented HTTP/2 to IESG fo The standard...</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<blockquote>Firefox supports HTTP/2 which has been enabled by default since version 36.[49] Experimental support for HTTP/2 was originally added in version 34.[50][51] Currently only HTTP/2 over TLS is implemented.[21]</blockquote>
<aside class="onebox wikipedia">
  <header class="source">
      <a href="https://en.wikipedia.org/wiki/SPDY#Client_.28browser.29_support_and_usage" target="_blank" rel="nofollow noopener">en.wikipedia.org</a>
  </header>
  <article class="onebox-body">
    <img src="//upload.wikimedia.org/wikipedia/commons/thumb/f/f9/Crystal_Clear_app_linneighborhood.svg/28px-Crystal_Clear_app_linneighborhood.svg.png" class="thumbnail onebox-full-image" width="28" height="28">

<h3><a href="https://en.wikipedia.org/wiki/SPDY#Client_.28browser.29_support_and_usage" target="_blank" rel="nofollow noopener">SPDY | </a></h3>

<p>1.Google Chrome/Chromium. SPDY sessions in Chrome can be inspected via the URI: chrome://net-internals/#events&amp;q=type:SPDY_SESSION%20is:active. There is a command-line switch for Google Chrome (--enable-websocket-over-spdy) which enables an early, experimental implementation of WebSocket over SPDY. SPDY protocol functionality can be (de)activated by toggling "Enable SPDY/4" setting on local chrome://flags page. Chromium is expected to remove support for SPDY and Next Protocol Negotiat</p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<blockquote>Firefox supports SPDY 2 from version 11, and default-enabled since 13 and later. (Also SeaMonkey version 2.8+.) SPDY protocol functionality can be (de)activated by toggling the network.http.spdy.enabled variable in about:config.[10] Firefox 15 added support for SPDY 3.[32] Firefox 27 has added SPDY 3.1 support.[34] Firefox 28 has removed support of SPDY 2.[29] about:networking (or the HTTP/2 and SPDY indicator add-on)[44] shows if a website uses SPDY.</blockquote>
          <p><a href="http://forums.whonix.org/t/http-2-and-spdy/865/8">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/http-2-and-spdy/865/8</link>
        <pubDate>Fri, 13 Mar 2015 00:26:31 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-865-8</guid>
        <source url="http://forums.whonix.org/t/http-2-and-spdy/865.rss">HTTP/2 and SPDY</source>
      </item>
      <item>
        <title>HTTP/2 and SPDY</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>In this video they combine Varnish and SPDY:<br>
</p><p><a href="https://www.youtube.com/embed/CoI6yS20IY8?autoplay=1&amp;feature=oembed&amp;wmode=opaque">https://www.youtube.com/embed/CoI6yS20IY8</a></p>
<p></p>
<p>Will take quite some time until HTTP/2 comes to nginx:<br>
</p><aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://www.nginx.com/wp-content/uploads/2019/10/favicon-48x48.ico" class="site-icon" width="48" height="48">
      <a href="https://www.nginx.com/blog/how-nginx-plans-to-support-http2/" target="_blank" title="09:48PM - 25 February 2015">NGINX – 25 Feb 15</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:300/209;"><img src="https://www.nginx.com/wp-content/uploads/2015/02/IETF_HTTP2_Approved-300x2091.png" class="thumbnail" width="300" height="209"></div>

<h3><a href="https://www.nginx.com/blog/how-nginx-plans-to-support-http2/" target="_blank">How NGINX Plans to Support HTTP/2 - NGINX</a></h3>

<p>Learn about NGINX Inc.'s plans to support HTTP/2 in its open source NGINX and commercial NGINX Plus products by the end of 2015</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<p></p>
<p>So most likely we won’t have it before Debian stretch since our server is based on Debian stable [now jessie, since frozen]. Most times it’s not worth the extra effort to upgrade just to get such a feature.</p>
<p>Since Tor Browser does not speak SPDY yet, I imagine it would take quite a while until it supports HTTP/2.</p>
          <p><a href="http://forums.whonix.org/t/http-2-and-spdy/865/7">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/http-2-and-spdy/865/7</link>
        <pubDate>Thu, 12 Mar 2015 23:33:48 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-865-7</guid>
        <source url="http://forums.whonix.org/t/http-2-and-spdy/865.rss">HTTP/2 and SPDY</source>
      </item>
      <item>
        <title>HTTP/2 and SPDY</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>It works. Just enabled SPDY in nginx. No test could show a difference so far.</p>
<p>Tor Browser does not support SPDY yet:<br>
<a href="https://trac.torproject.org/projects/tor/ticket/6101" class="onebox" target="_blank">https://trac.torproject.org/projects/tor/ticket/6101</a></p>
          <p><a href="http://forums.whonix.org/t/http-2-and-spdy/865/6">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/http-2-and-spdy/865/6</link>
        <pubDate>Thu, 12 Mar 2015 23:06:58 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-865-6</guid>
        <source url="http://forums.whonix.org/t/http-2-and-spdy/865.rss">HTTP/2 and SPDY</source>
      </item>
      <item>
        <title>HTTP/2 and SPDY</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <p>Glad it is a simple enable. Yeah, hopefully it interacts well with the caching setup.</p>
<p>Will be especially interested to learn what levels of performance impact it has for browsing over Tor, due to Tor’s poorer latency and bandwidth.</p>
          <p><a href="http://forums.whonix.org/t/http-2-and-spdy/865/5">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/http-2-and-spdy/865/5</link>
        <pubDate>Fri, 13 Feb 2015 10:35:24 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-865-5</guid>
        <source url="http://forums.whonix.org/t/http-2-and-spdy/865.rss">HTTP/2 and SPDY</source>
      </item>
      <item>
        <title>HTTP/2 and SPDY</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Yes.</p>
<p>Sure, I am very interested to boost the server speed further.</p>
<p>Here is a benchmark (not involving varnish):<br>
<a href="https://blog.safaribooksonline.com/2014/11/14/embracing-http2/" class="onebox" target="_blank">https://blog.safaribooksonline.com/2014/11/14/embracing-http2/</a></p>
<p>Enabling it seems super simple:<br>
</p><aside class="onebox whitelistedgeneric">
  <header class="source">
      <a href="https://www.bjornjohansen.com/enabling-spdy-nginx" target="_blank" title="08:50PM - 22 August 2013">{bjørn:johansen} – 22 Aug 13</a>
  </header>
  <article class="onebox-body">
    <img src="https://www.bjornjohansen.com/content/uploads/2019/02/600x600.jpg" class="thumbnail onebox-avatar" width="500" height="500">

<h3><a href="https://www.bjornjohansen.com/enabling-spdy-nginx" target="_blank">Enable SPDY on Nginx</a></h3>

<p>SPDY can dramatically improve the load speed of your site. It is actually quite simple to enable SPDY on Nginx, and I'll show you how in this guide.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<p></p>
<p>How that interacts when using varnish in the background, I guess we’ll see.</p>
          <p><a href="http://forums.whonix.org/t/http-2-and-spdy/865/4">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/http-2-and-spdy/865/4</link>
        <pubDate>Fri, 13 Feb 2015 08:26:25 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-865-4</guid>
        <source url="http://forums.whonix.org/t/http-2-and-spdy/865.rss">HTTP/2 and SPDY</source>
      </item>
      <item>
        <title>HTTP/2 and SPDY</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="2" data-topic="865">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Now, varnish doesn’t support HTTP/2 and/or SPDY. I haven’t found any benchmarks that indicate what adding these to the combination I had in mind would do to the performance. Also no instructions, if that is even possible. What would be useful, would be any benchmarks that apply to <a href="http://whonix.org" rel="nofollow noopener">whonix.org</a>, i.e. for lots of dynamic [php] content. Do you know any or got any experience?</p>
</blockquote>
</aside>
<p>I don’t know of such benchmarks or specific instructions. Probably early days for HTTP/2 integration.</p>
<p>If I’m understanding Varnish as a cache correctly, it will only greatly reduce the server processing time for each page asset.</p>
<p>However, the page load bottleneck will still be with requesting and fetching multiple page assets over a Tor connection.</p>
<p>Standard HTTP Process:</p>
<ul>
<li>
<p>1st: Submitting a HTTPS request to download and then parse the webpage HTML over Tor.</p>
</li>
<li>
<p>2nd: After completing the 1st step, submitting several more HTTPS requests to additional page assets (CSS, JavaScript, Images, Fonts, etc) to download and then parse them over Tor.</p>
</li>
<li>
<p>3rd: After completing individual assets in the 2nd step, if there are any secondary included page assets imported by the primary page assets, then repeat the HTTPS download and parsing process for those as well over Tor. [Not sure if there are any such secondary imported page assets.]</p>
</li>
<li>
<p>Done: Page Load Complete</p>
</li>
</ul>
<p>So even if one assumes 0ms server processing time, a multiple stage HTTPS request process over Tor could still put the page load times above 2 seconds [I’d guess], due to network latency.</p>
<p>HTTP/2 and SPDY greatly speed up the network transport of page assets, largely via multiplexing, so that only 1 single HTTPS request/download is needed for the entire page contents.</p>
<p>Multiplexed HTTP Process:</p>
<ul>
<li>
<p>1st: Submitting a HTTPS request for webpage, receive everything in 1 bulk download, and parse the page assets.</p>
</li>
<li>
<p>Done: Page Load Complete</p>
</li>
</ul>
<p>But you can see where net page load times are at after getting the new server and standard HTTP 1.1 with Varnish caching implemented. And HTTP/2 will become more standard and supported over the next year or so it seems.</p>
<p>Just wanted to put this on the radar.</p>
          <p><a href="http://forums.whonix.org/t/http-2-and-spdy/865/3">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/http-2-and-spdy/865/3</link>
        <pubDate>Fri, 13 Feb 2015 06:43:05 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-865-3</guid>
        <source url="http://forums.whonix.org/t/http-2-and-spdy/865.rss">HTTP/2 and SPDY</source>
      </item>
      <item>
        <title>HTTP/2 and SPDY</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>I did research earlier, read a lot benchmarks and whatnot and came to the conclusion, that on our new server a very fast, but not ultra fast and effort wise doable combination would be using nginx as an SSL terminator in combination with varnish as cache and apache2 with our current settings as backend.</p>
<p>[That combination has quite some benchmarks on the web and is not that uncommon. For example, performance wise, it beats <code>pound</code>.]</p>
<p>[And I am quite certain, that nginx + varnish is faster than any other combination of nginx/lighhtpd + squid/varnish.]</p>
<p>[It would not be ultra fast, because some stuff is not justified yet, such as multiple servers, load balancing, database servers, CDN (which we probably do not want for privacy/security reasons) and whatnot professionals such as wikimedia or facebook use. But still very fast. That means I expect page load times below 2 seconds.]</p>
<p>ngnix alone could work as well, but since our most heavy lifting is mediawiki, that needs a lot php, because we have much more dynamic than static content, I think ngnix alone wouldn’t do the trick here.</p>
<p>In past with optimization I learned, that more cool stuff doesn’t always mean better performance. I don’t remember any specific examples, but some times an improvement that sounded good in theory, but in practice, slowed down our site even further.</p>
<p>Now, varnish doesn’t support HTTP/2 and/or SPDY. I haven’t found any benchmarks that indicate what adding these to the combination I had in mind would do to the performance. Also no instructions, if that is even possible. What would be useful, would be any benchmarks that apply to <a href="http://whonix.org">whonix.org</a>, i.e. for lots of dynamic [php] content. Do you know any or got any experience?</p>
          <p><a href="http://forums.whonix.org/t/http-2-and-spdy/865/2">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/http-2-and-spdy/865/2</link>
        <pubDate>Fri, 13 Feb 2015 05:03:54 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-865-2</guid>
        <source url="http://forums.whonix.org/t/http-2-and-spdy/865.rss">HTTP/2 and SPDY</source>
      </item>
      <item>
        <title>HTTP/2 and SPDY</title>
        <dc:creator><![CDATA[WhonixQubes]]></dc:creator>
        <description><![CDATA[
            <p>Another way to considerably speed up the <a href="http://Whonix.org" rel="nofollow noopener">Whonix.org</a> website could be to switch away from the standard HTTP 1.1 protocol in exchange for HTTP/2 or SPDY.</p>
<p>Standard HTTP 1.1 works by requesting and fetching the HTML page. Then the browser reads the HTML page, and has to request and fetch all the other page assets (CSS, JavaScript, Images, Fonts, etc). So for a single webpage, there can be dozens of separate requests out to servers for downloading page assets that need to be fulfilled. This really slows total page load times.</p>
<p>HTTP/2 and SPDY which is being deprecated in exchange for the new HTTP/2 over the next year work differently by having the server first fetch all of the page assets and send everything to the user’s browser in one single fetch (multiplexing). As well as using compression and prioritization schemes. So one single page download, instead of in many separate requests.</p>
<p>I’ve heard and seen that such HTTP multiplexing protocols can considerably speed up webpage load times.</p>
<p>See this following demo site that compares HTTP vs. HTTPS with SPDY…</p>
<ul>
<li><a href="http://www.httpvshttps.com" rel="nofollow noopener">http://www.httpvshttps.com</a></li>
</ul>
<p>Some decent overview, timeframe, and browser support info in the Wikipedia articles…</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/HTTP/2" rel="nofollow noopener">https://en.wikipedia.org/wiki/HTTP/2</a></li>
<li><a href="https://en.wikipedia.org/wiki/SPDY" rel="nofollow noopener">https://en.wikipedia.org/wiki/SPDY</a></li>
</ul>
<p>I’m not sure if all the necessary compatibility factors match up quite yet, so that would have to be considered. But I just wanted to give a heads up that HTTP/2 is likely to be a strong solution for additionally speeding up the <a href="http://Whonix.org" rel="nofollow noopener">Whonix.org</a> website in the upcoming future.</p>
<p>And, as a bonus, a potentially a good thing for overall web anonymity that may make fingerprinting HTTPS webpages by netflows a bit harder.</p>
          <p><a href="http://forums.whonix.org/t/http-2-and-spdy/865/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/http-2-and-spdy/865/1</link>
        <pubDate>Thu, 12 Feb 2015 20:39:14 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-865-1</guid>
        <source url="http://forums.whonix.org/t/http-2-and-spdy/865.rss">HTTP/2 and SPDY</source>
      </item>
  </channel>
</rss>

<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>sigstore for improving verification of downloads?</title>
    <link>http://forums.whonix.org/t/sigstore-for-improving-verification-of-downloads/11536</link>
    <description>**Sigstore for Whonix?**

Since normal people don&#39;t understand signing keys, signatures or how to check things properly -- and those that do often don&#39;t bother -- this could be useful for Whonix in the future.

It would help to overcome the first major obstacle to running the platform i.e. confirming that what is being downloaded and due to be installed is the legitimate platform to begin with. It looks like people would just need to check the binary against &quot;transparency logs&quot; to check it is legitimate.

And the element of ephemeral keys would also reduce the risk posed by someone compromising developer keys etc. Maybe you could express interest or look into it?

https://lists.torproject.org/pipermail/tor-dev/2021-April/014544.html

&gt; **[tor-dev] sigstore for improving verification of downloads?**
&gt; 
&gt; We recently announced a new project called sigstore [1], which could be summarised as &quot;Let&#39;s Encrypt, but for software provenance and code signing&quot;.
&gt; 
&gt; ...
&gt; 
&gt; In any case, the idea is to provide a public good service, heavily inspired by Let&#39;s Encrypt, that lets developpers sign packages, containers, code artifacts in general, and lets user verify them in a simple way.
&gt; 
&gt; It&#39;s still early days, but the aim is to make it a lot easier to verify the integrity of software, and to do better and easier than &quot;here&#39;s a binary, here&#39;s an .asc detached PGP signature, here&#39;s a page that says that 0xBLA is our public key&quot;, which as we know is a procedure most users simply don&#39;t follow.
&gt; 
&gt; To avoid the pains of key management (and the nasty targets keys quickly become), sigstore uses ephemeral signing keys (which don&#39;t ever touch the disk), publishes the signature in a first transparency log, and discards the key after signature.
&gt; 
&gt; The other part of the system, which connects a signing key to an entity, is based on issuing a certificate to the signer which contains their email address and their pubkey, if they can prove control of the email address using OpenID Connect. This certificate is then stored in a second transpararency log, which provides a second root of trust, directly inspired by the Certificate Transparency project [2].
&gt; 
&gt; Using both transparency logs (signatures and certificates), one can then verify that a binary download is the expected one, and that is was signed by someone who controls an email address. Tools are being built to do this automatically, and in a repeatable way.
&gt; 
&gt; The idea is also to make it easy for developers to monitor the certificate transparency log for their email, which could alert them to untowards actions, if a new certificate pops up for something they never signed.
&gt; The OpenID Connect part is designed to allow for both large ID providers (like Github or Google) and bring-your-own.
&gt; 
&gt; As i was saying, it&#39;s still early days, but it&#39;s coming along nicely and in my mind, Tor (and TAILS) are projects that would very much benefit from sigstore, hence this email.
&gt; 
&gt; ...
&gt; 
&gt; 1. Jointly with Google and Purdue University, https://sigstore.dev
&gt; 2. https://certificate.transparency.dev/
&gt; 3. https://github.com/sigstore
&gt; 4. https://join.slack.com/t/sigstore/shared_invite/zt-mhs55zh0-XmY3bcfWn4XEyMqUUutbUQ</description>
    <language>en</language>
    <lastBuildDate>Thu, 11 Nov 2021 20:17:02 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="http://forums.whonix.org/t/sigstore-for-improving-verification-of-downloads/11536.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>sigstore for improving verification of downloads?</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <ul>
<li><a href="https://www.whonix.org/wiki/Miscellaneous_Threats_to_User_Freedom#War_on_General_Purpose_Computing">War on General Purpose Computing</a></li>
<li><a href="https://www.whonix.org/wiki/Miscellaneous_Threats_to_User_Freedom#Sigstore">Sigstore</a></li>
</ul>
          <p><a href="http://forums.whonix.org/t/sigstore-for-improving-verification-of-downloads/11536/4">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/sigstore-for-improving-verification-of-downloads/11536/4</link>
        <pubDate>Thu, 11 Nov 2021 20:17:02 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-11536-4</guid>
        <source url="http://forums.whonix.org/t/sigstore-for-improving-verification-of-downloads/11536.rss">sigstore for improving verification of downloads?</source>
      </item>
      <item>
        <title>sigstore for improving verification of downloads?</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Thank you. Adding some edits on top now.</p>
          <p><a href="http://forums.whonix.org/t/sigstore-for-improving-verification-of-downloads/11536/3">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/sigstore-for-improving-verification-of-downloads/11536/3</link>
        <pubDate>Thu, 11 Nov 2021 17:00:40 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-11536-3</guid>
        <source url="http://forums.whonix.org/t/sigstore-for-improving-verification-of-downloads/11536.rss">sigstore for improving verification of downloads?</source>
      </item>
      <item>
        <title>sigstore for improving verification of downloads?</title>
        <dc:creator><![CDATA[HulaHoop]]></dc:creator>
        <description><![CDATA[
            <p>New section explaining the problems with sigstore. Input welcome.</p>
<aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://www.whonix.org/w/images/favicon.ico" class="site-icon" width="16" height="16">

      <a href="https://www.whonix.org/w/index.php?title=Miscellaneous_Threats_to_User_Freedom#Sigstore" target="_blank" rel="noopener" title="10:49AM - 11 November 2021">Whonix – 11 Nov 21</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:83/46;"><img src="https://www.whonix.org/w/images/7/70/Threats123123.jpg" class="thumbnail" width="83" height="46"></div>

<h3><a href="https://www.whonix.org/w/index.php?title=Miscellaneous_Threats_to_User_Freedom#Sigstore" target="_blank" rel="noopener">General Threats to User Freedom</a></h3>

  <p>Tivoization, malicious features, antifeature, tyrant software, treacherous computing, digital restrictions management (DRM), Software as a Service (SaaS), Service as a Software Substitute (SaaSS), non-root enforcement</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

          <p><a href="http://forums.whonix.org/t/sigstore-for-improving-verification-of-downloads/11536/2">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/sigstore-for-improving-verification-of-downloads/11536/2</link>
        <pubDate>Thu, 11 Nov 2021 10:55:09 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-11536-2</guid>
        <source url="http://forums.whonix.org/t/sigstore-for-improving-verification-of-downloads/11536.rss">sigstore for improving verification of downloads?</source>
      </item>
      <item>
        <title>sigstore for improving verification of downloads?</title>
        <dc:creator><![CDATA[torjunkie]]></dc:creator>
        <description><![CDATA[
            <p><strong>Sigstore for Whonix?</strong></p>
<p>Since normal people don’t understand signing keys, signatures or how to check things properly – and those that do often don’t bother – this could be useful for Whonix in the future.</p>
<p>It would help to overcome the first major obstacle to running the platform i.e. confirming that what is being downloaded and due to be installed is the legitimate platform to begin with. It looks like people would just need to check the binary against “transparency logs” to check it is legitimate.</p>
<p>And the element of ephemeral keys would also reduce the risk posed by someone compromising developer keys etc. Maybe you could express interest or look into it?</p>
<p><a href="https://lists.torproject.org/pipermail/tor-dev/2021-April/014544.html" class="onebox" target="_blank" rel="noopener">https://lists.torproject.org/pipermail/tor-dev/2021-April/014544.html</a></p>
<blockquote>
<p><strong>[tor-dev] sigstore for improving verification of downloads?</strong></p>
<p>We recently announced a new project called sigstore [1], which could be summarised as “Let’s Encrypt, but for software provenance and code signing”.</p>
<p>…</p>
<p>In any case, the idea is to provide a public good service, heavily inspired by Let’s Encrypt, that lets developpers sign packages, containers, code artifacts in general, and lets user verify them in a simple way.</p>
<p>It’s still early days, but the aim is to make it a lot easier to verify the integrity of software, and to do better and easier than “here’s a binary, here’s an .asc detached PGP signature, here’s a page that says that 0xBLA is our public key”, which as we know is a procedure most users simply don’t follow.</p>
<p>To avoid the pains of key management (and the nasty targets keys quickly become), sigstore uses ephemeral signing keys (which don’t ever touch the disk), publishes the signature in a first transparency log, and discards the key after signature.</p>
<p>The other part of the system, which connects a signing key to an entity, is based on issuing a certificate to the signer which contains their email address and their pubkey, if they can prove control of the email address using OpenID Connect. This certificate is then stored in a second transpararency log, which provides a second root of trust, directly inspired by the Certificate Transparency project [2].</p>
<p>Using both transparency logs (signatures and certificates), one can then verify that a binary download is the expected one, and that is was signed by someone who controls an email address. Tools are being built to do this automatically, and in a repeatable way.</p>
<p>The idea is also to make it easy for developers to monitor the certificate transparency log for their email, which could alert them to untowards actions, if a new certificate pops up for something they never signed.<br>
The OpenID Connect part is designed to allow for both large ID providers (like Github or Google) and bring-your-own.</p>
<p>As i was saying, it’s still early days, but it’s coming along nicely and in my mind, Tor (and TAILS) are projects that would very much benefit from sigstore, hence this email.</p>
<p>…</p>
<ol>
<li>Jointly with Google and Purdue University, <a href="https://sigstore.dev">https://sigstore.dev</a>
</li>
<li><a href="https://certificate.transparency.dev/">https://certificate.transparency.dev/</a></li>
<li><a href="https://github.com/sigstore">https://github.com/sigstore</a></li>
<li><a href="https://join.slack.com/t/sigstore/shared_invite/zt-mhs55zh0-XmY3bcfWn4XEyMqUUutbUQ">https://join.slack.com/t/sigstore/shared_invite/zt-mhs55zh0-XmY3bcfWn4XEyMqUUutbUQ</a></li>
</ol>
</blockquote>
          <p><a href="http://forums.whonix.org/t/sigstore-for-improving-verification-of-downloads/11536/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/sigstore-for-improving-verification-of-downloads/11536/1</link>
        <pubDate>Thu, 29 Apr 2021 10:34:30 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-11536-1</guid>
        <source url="http://forums.whonix.org/t/sigstore-for-improving-verification-of-downloads/11536.rss">sigstore for improving verification of downloads?</source>
      </item>
  </channel>
</rss>

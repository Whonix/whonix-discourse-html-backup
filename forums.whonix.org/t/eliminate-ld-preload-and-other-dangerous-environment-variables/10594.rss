<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Eliminate LD_PRELOAD and other Dangerous Environment Variables</title>
    <link>http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594</link>
    <description>[quote=&quot;madaidan, post:104, topic:7658&quot;]
We’d need to disable LD_PRELOAD in another way.
[/quote]

I&#39;ve been experimenting with a way to eliminate LD_PRELOAD (and other similar variables). We can create a library that checks if any dangerous variables have been set and then force it to exit if they are. This would be globally preloaded via `/etc/ld.so.preload` so the check is executed at the start of all applications.

https://paste.debian.net/hidden/f3a9db80/

Compile this with:

    gcc rootkit-detect.c -shared -fpic -Wl,-init,init -o rootkit-detect.so

And append `/etc/ld.so.preload` with:

    /usr/lib/rootkit-detect.so

I&#39;ve tested this and it does work. I think it should be included in Whonix as it does eliminate a large vector for user space rootkits. It does hurt debugging a bit but the protection can easily be disabled by root.

Edit: Actually, I forgot about `ld-system-preload-disable` which would bypass this. Maybe there&#39;s another way to preload this library?</description>
    <language>en</language>
    <lastBuildDate>Sat, 28 Nov 2020 11:02:59 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Eliminate LD_PRELOAD and other Dangerous Environment Variables</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group quote-modified" data-username="madaidan" data-post="7" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<aside class="quote no-group" data-username="Patrick" data-post="6" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>SUID disabling feature will most likely be enabled by default one day.</p>
</blockquote>
</aside>
<p>Is there any blocker stopping it from being enabled now?</p>
</blockquote>
</aside>
<p>Answered here:<br>
<a href="https://forums.whonix.org/t/disable-suid-binaries/7706/64" class="inline-onebox">Disable SUID Binaries</a></p>
          <p><a href="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/8">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/8</link>
        <pubDate>Sat, 28 Nov 2020 11:02:59 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-10594-8</guid>
        <source url="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594.rss">Eliminate LD_PRELOAD and other Dangerous Environment Variables</source>
      </item>
      <item>
        <title>Eliminate LD_PRELOAD and other Dangerous Environment Variables</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="Patrick" data-post="6" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Would be good if you could open a new forum thread for this.</p>
</blockquote>
</aside>
<p>They’re already disabled on Debian.</p>
<aside class="quote no-group" data-username="Patrick" data-post="6" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>SUID disabling feature will most likely be enabled by default one day.</p>
</blockquote>
</aside>
<p>Is there any blocker stopping it from being enabled now?</p>
          <p><a href="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/7">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/7</link>
        <pubDate>Fri, 27 Nov 2020 20:57:57 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-10594-7</guid>
        <source url="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594.rss">Eliminate LD_PRELOAD and other Dangerous Environment Variables</source>
      </item>
      <item>
        <title>Eliminate LD_PRELOAD and other Dangerous Environment Variables</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="madaidan" data-post="5" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>Even if we do this, I’m not sure if there would be other ways to achieve the same thing. At the very least, the prerequisites for this feature working properly would be:</p>
<ul>
<li>Unprivileged user namespaces disabled.</li>
<li>No setuid binaries allowing mount namespace creation.</li>
</ul>
</blockquote>
</aside>
<p>Can be considered.</p>
<aside class="quote no-group" data-username="madaidan" data-post="5" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>Unprivileged user namespaces disabled.</p>
</blockquote>
</aside>
<p>Would be good if you could open a new forum thread for this.</p>
<aside class="quote no-group" data-username="madaidan" data-post="5" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>No setuid binaries allowing mount namespace creation.</p>
</blockquote>
</aside>
<p>SUID disabling feature will most likely be enabled by default one day.</p>
<ul>
<li><a href="https://forums.whonix.org/t/disable-suid-binaries/7706" class="inline-onebox">Disable SUID Binaries</a></li>
<li><a href="https://www.whonix.org/wiki/Security-misc#SUID_Disabling_and_Permission_Hardening">https://www.whonix.org/wiki/Security-misc#SUID_Disabling_and_Permission_Hardening</a></li>
</ul>
          <p><a href="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/6">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/6</link>
        <pubDate>Sun, 22 Nov 2020 08:23:41 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-10594-6</guid>
        <source url="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594.rss">Eliminate LD_PRELOAD and other Dangerous Environment Variables</source>
      </item>
      <item>
        <title>Eliminate LD_PRELOAD and other Dangerous Environment Variables</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="Patrick" data-post="4" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Should consider removing <code>setuid</code> from <code>bwrap</code> .</p>
</blockquote>
</aside>
<p>Even if we do this, I’m not sure if there would be other ways to achieve the same thing. At the very least, the prerequisites for this feature working properly would be:</p>
<ul>
<li>Unprivileged user namespaces disabled.</li>
<li>No setuid binaries allowing mount namespace creation.</li>
</ul>
<aside class="quote no-group" data-username="Patrick" data-post="4" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Worth contacting apparmor upstream about this?</p>
</blockquote>
</aside>
<p>They already have plans to overhaul the existing environment scrubbing functionality.</p>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://gitlab.com/assets/favicon-7901bd695fb93edb07975966062049829afb56cf11511236e61bcf425070e36e.png" class="site-icon" width="16" height="16">
      <a href="https://gitlab.com/apparmor/apparmor/-/issues/66" target="_blank" rel="nofollow noopener">GitLab</a>
  </header>
  <article class="onebox-body">
    <img src="https://assets.gitlab-static.net/uploads/-/system/project/avatar/4484878/apparmor-red-diag_1w2h.png" class="thumbnail onebox-avatar" width="128" height="128">

<h3><a href="https://gitlab.com/apparmor/apparmor/-/issues/66" target="_blank" rel="nofollow noopener">Add a way to whitelist variables from environment scrubbing (#66) · Issues ·...</a></h3>

<p>I want to use hardened_malloc along with a binary that is executed with environment scrubbing. To use hardened_malloc, I need to use LD_PRELOAD...</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/5">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/5</link>
        <pubDate>Sat, 21 Nov 2020 20:46:26 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-10594-5</guid>
        <source url="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594.rss">Eliminate LD_PRELOAD and other Dangerous Environment Variables</source>
      </item>
      <item>
        <title>Eliminate LD_PRELOAD and other Dangerous Environment Variables</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>madaidan via Whonix Forum:</p>
<blockquote>
<p><a href="https://manpages.debian.org/buster/manpages/ld.so.8.en.html#Secure-execution_mode">https://manpages.debian.org/buster/manpages/ld.so.8.en.html#Secure-execution_mode</a></p>
</blockquote>
<p>Can we globally enable secure-execution mode for user <code>user</code>? Asked:</p>
<aside class="onebox stackexchange">
  <header class="source">
      <a href="https://security.stackexchange.com/questions/241063/how-to-globally-enable-ld-so-secure-execution-mode-for-all-applications" target="_blank">security.stackexchange.com</a>
  </header>
  <article class="onebox-body">
      <a href="https://security.stackexchange.com/users/54240/adrelanos" target="_blank">
    <img alt="adrelanos" src="https://www.gravatar.com/avatar/83f6805262f0dcc117814487c5b2d1c4?s=128&amp;d=identicon&amp;r=PG" class="thumbnail onebox-avatar" width="128" height="128">
  </a>
<h4>
  <a href="https://security.stackexchange.com/questions/241063/how-to-globally-enable-ld-so-secure-execution-mode-for-all-applications" target="_blank">How to globally enable ld.so secure-execution mode for all applications?</a>
</h4>

<div class="tags">
  <strong>environment-variables</strong>
</div>

<div class="date">
  asked by
  
  <a href="https://security.stackexchange.com/users/54240/adrelanos" target="_blank">
    adrelanos
  </a>
  on <a href="https://security.stackexchange.com/questions/241063/how-to-globally-enable-ld-so-secure-execution-mode-for-all-applications" target="_blank">08:29AM - 20 Nov 20 UTC</a>
</div>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>Should ask somewhere else too if no suitable answer comes up there such as <a href="https://www.openwall.com/lists/oss-security/">https://www.openwall.com/lists/oss-security/</a></p>
<blockquote>
<p>However, when considering sandbox-app-launcher, an attacker would only be able to set LD_PRELOAD within the sandbox (not outside) unless they also have a sandbox escape. This would still be useful for defense-in-depth and for programs that are not sandboxed though.</p>
</blockquote>
<p>Very much so.</p>
<blockquote>
<aside class="quote no-group" data-username="Patrick" data-post="2" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p><code>ld-system-preload-disable</code> requires root if I am not mistaken.</p>
</blockquote>
</aside>
<p>No, unless you revoke the setuid bit from <code>bwrap</code> which we could do but might be too restrictive and annoying.</p>
</blockquote>
<p>Should consider removing <code>setuid</code> from <code>bwrap</code>.</p>
<p>Imagine there was any widespread use of <code>/etc/ld.so.preload</code> to enforce preloading of security enhancing ld shared objects. In that case <code>bwrap</code> <code>setuid</code> allowing ignoring that file would be a security issue. This would be an abuse of <code>bwrap</code> to lower the security of the system.</p>
<p>Are there any other similar cases where that would be an issue?</p>
<blockquote>
<aside class="quote no-group" data-username="Patrick" data-post="2" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Apparmor can filter environment variables. Would it work for this use case?</p>
</blockquote>
</aside>
<p>No, AppArmor’s environment scrubbing only applies to profile transitions. E.g. a program executing under the <code>init-systemd</code> profile would have some dangerous environment variables erased when transitioning to the <code>torbrowser</code> profile. This would not cover programs executing within the same profile though. E.g. if program X and Y are both under the <code>init-systemd</code> profile and X sets <code>LD_PRELOAD</code>, it will also leak over to program Y. AppArmor’s environment scrubbing is only feasible when <em>everything</em> has it’s own profile.</p>
</blockquote>
<p>Currently when using apparmor-profile-everything init-systemd apparmor profile is everyone’s apparmor profile. Could there be some sort different apparmor profile? I.e. when a user under apparmor profile <code>init-systemd</code> runs a program it would scrub environment and transition to <code>apparmor-profile-everything</code>?</p>
<p>(That apparmor profile might then be named <code>apparmor-profile-everything</code>.)</p>
<p>If that was possible, that would solve the issue for applications not having their own profile. But what about applications having their own profile? Could there be an intermediary apparmor profile which is used for environment scrubbing before transition to actual apparmor profile?</p>
<p>Worth contacting apparmor upstream about this? Seems like an interesting<br>
feature.</p>
          <p><a href="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/4">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/4</link>
        <pubDate>Fri, 20 Nov 2020 08:49:57 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-10594-4</guid>
        <source url="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594.rss">Eliminate LD_PRELOAD and other Dangerous Environment Variables</source>
      </item>
      <item>
        <title>Eliminate LD_PRELOAD and other Dangerous Environment Variables</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="Patrick" data-post="2" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Could you please describe the threat model?</p>
</blockquote>
</aside>
<p>A compromised user account has the ability to set the <code>LD_PRELOAD</code> (or similar) environment variable. This basically allows an attacker to redefine syscalls and spy on whatever they want. It is the most common method of user space rootkits. A few examples I found within a few seconds of searching:</p>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="16" height="16">
      <a href="https://github.com/chokepoint/azazel" target="_blank" rel="nofollow noopener">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://avatars3.githubusercontent.com/u/1689043?s=400&amp;v=4" class="thumbnail onebox-avatar" width="281" height="281">

<h3><a href="https://github.com/chokepoint/azazel" target="_blank" rel="nofollow noopener">chokepoint/azazel</a></h3>

<p>Azazel is a userland rootkit based off of the original LD_PRELOAD technique from Jynx rootkit.  It is more robust and has additional features, and focuses heavily around anti-debugging and anti-det...</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="16" height="16">
      <a href="https://github.com/chokepoint/Jynx2" target="_blank" rel="nofollow noopener">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://avatars3.githubusercontent.com/u/1689043?s=400&amp;v=4" class="thumbnail onebox-avatar" width="281" height="281">

<h3><a href="https://github.com/chokepoint/Jynx2" target="_blank" rel="nofollow noopener">chokepoint/Jynx2</a></h3>

<p>JynxKit2 is an LD_PRELOAD userland rootkit based on the original JynxKit. The backdoor has been replaced with an "accept()" system hook. - chokepoint/Jynx2</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="16" height="16">
      <a href="https://github.com/Aishou/wayland-keylogger" target="_blank" rel="nofollow noopener">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://avatars1.githubusercontent.com/u/3497381?s=400&amp;v=4" class="thumbnail onebox-avatar" width="400" height="400">

<h3><a href="https://github.com/Aishou/wayland-keylogger" target="_blank" rel="nofollow noopener">Aishou/wayland-keylogger</a></h3>

<p>Proof-of-concept Wayland keylogger. Contribute to Aishou/wayland-keylogger development by creating an account on GitHub.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="16" height="16">
      <a href="https://github.com/rvillordo/libpreload" target="_blank" rel="nofollow noopener">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://avatars2.githubusercontent.com/u/2606097?s=400&amp;v=4" class="thumbnail onebox-avatar" width="420" height="420">

<h3><a href="https://github.com/rvillordo/libpreload" target="_blank" rel="nofollow noopener">rvillordo/libpreload</a></h3>

<p>LD_PRELOAD rootkit. Contribute to rvillordo/libpreload development by creating an account on GitHub.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://github.githubassets.com/favicons/favicon.svg" class="site-icon" width="16" height="16">
      <a href="https://github.com/nopn0p/rkorova" target="_blank" rel="nofollow noopener">GitHub</a>
  </header>
  <article class="onebox-body">
    <img src="https://avatars1.githubusercontent.com/u/22987689?s=400&amp;v=4" class="thumbnail onebox-avatar" width="360" height="360">

<h3><a href="https://github.com/nopn0p/rkorova" target="_blank" rel="nofollow noopener">nopn0p/rkorova</a></h3>

<p>ld_preload userland rootkit. Contribute to nopn0p/rkorova development by creating an account on GitHub.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://www.intezer.com/wp-content/themes/intezer-v2/favicon.png" class="site-icon" width="16" height="16">
      <a href="https://www.intezer.com/blog/linux/hiddenwasp-malware-targeting-linux-systems/" target="_blank" rel="nofollow noopener" title="01:36PM - 29 May 2019">Intezer – 29 May 19</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/441;"><img src="https://www.intezer.com/wp-content/uploads/2019/05/insect-3270233_960_720.jpg" class="thumbnail" width="690" height="441"></div>

<h3><a href="https://www.intezer.com/blog/linux/hiddenwasp-malware-targeting-linux-systems/" target="_blank" rel="nofollow noopener">Intezer - HiddenWasp Malware Stings Targeted Linux Systems</a></h3>

<p>Intezer has discovered a new, sophisticated malware named HiddenWasp, targeting Linux systems. Unlike common Linux malware, HiddenWasp is not focused on crypto-mining or DDoS activity, but rather it is a trojan purely used for targeted remote...</p>

  <p><span class="label1">Est. reading time: 11 minutes</span>
    </p>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<p>It is trivial to create a rootkit via LD_PRELOAD. This is somewhat similar to the <code>ptrace</code> syscall which we already restrict in security-misc via the YAMA LSM.</p>
<p>LD_PRELOAD and co. are ignored when executing setuid binaries to prevent obvious privilege escalations. MAC systems can also enforce some restrictions (AppArmor’s isn’t great though, see below).</p>
<p><a href="https://manpages.debian.org/buster/manpages/ld.so.8.en.html#Secure-execution_mode" class="onebox" target="_blank" rel="nofollow noopener">https://manpages.debian.org/buster/manpages/ld.so.8.en.html#Secure-execution_mode</a></p>
<p>However, when considering sandbox-app-launcher, an attacker would only be able to set LD_PRELOAD within the sandbox (not outside) unless they also have a sandbox escape. This would still be useful for defense-in-depth and for programs that are not sandboxed though.</p>
<aside class="quote no-group" data-username="Patrick" data-post="2" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Therefore do you think you could add some kind of root configurable whitelist <code>.d</code> mechanism?</p>
</blockquote>
</aside>
<p>I likely can.</p>
<aside class="quote no-group" data-username="Patrick" data-post="2" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p><code>ld-system-preload-disable</code> requires root if I am not mistaken.</p>
</blockquote>
</aside>
<p>No, unless you revoke the setuid bit from <code>bwrap</code> which we could do but might be too restrictive and annoying.</p>
<aside class="quote no-group" data-username="Patrick" data-post="2" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>I wonder if this was ever considered, discussed somewhere?</p>
</blockquote>
</aside>
<aside class="onebox stackexchange">
  <header class="source">
      <a href="https://security.stackexchange.com/questions/63599/is-there-any-way-to-block-ld-preload-and-ld-library-path-on-linux" target="_blank" rel="nofollow noopener">security.stackexchange.com</a>
  </header>
  <article class="onebox-body">
      <a href="https://security.stackexchange.com/users/51744/danl4096" target="_blank" rel="nofollow noopener">
    <img alt="DanL4096" src="https://www.gravatar.com/avatar/11e8cb3c62db3dbb7328c3be36dad985?s=128&amp;d=identicon&amp;r=PG&amp;f=1" class="thumbnail onebox-avatar" width="60" height="60">
  </a>
<h4>
  <a href="https://security.stackexchange.com/questions/63599/is-there-any-way-to-block-ld-preload-and-ld-library-path-on-linux" target="_blank" rel="nofollow noopener">Is there any way to block LD_PRELOAD and LD_LIBRARY_PATH on Linux?</a>
</h4>

<div class="tags">
  <strong>linux, malware, webserver</strong>
</div>

<div class="date">
  asked by
  
  <a href="https://security.stackexchange.com/users/51744/danl4096" target="_blank" rel="nofollow noopener">
    DanL4096
  </a>
  on <a href="https://security.stackexchange.com/questions/63599/is-there-any-way-to-block-ld-preload-and-ld-library-path-on-linux" target="_blank" rel="nofollow noopener">04:30PM - 21 Jul 14 UTC</a>
</div>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<aside class="quote no-group" data-username="Patrick" data-post="2" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>Apparmor can filter environment variables. Would it work for this use case?</p>
</blockquote>
</aside>
<p>No, AppArmor’s environment scrubbing only applies to profile transitions. E.g. a program executing under the <code>init-systemd</code> profile would have some dangerous environment variables erased when transitioning to the <code>torbrowser</code> profile. This would not cover programs executing within the same profile though. E.g. if program X and Y are both under the <code>init-systemd</code> profile and X sets <code>LD_PRELOAD</code>, it will also leak over to program Y. AppArmor’s environment scrubbing is only feasible when <em>everything</em> has it’s own profile.</p>
          <p><a href="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/3">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/3</link>
        <pubDate>Sun, 15 Nov 2020 19:01:35 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-10594-3</guid>
        <source url="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594.rss">Eliminate LD_PRELOAD and other Dangerous Environment Variables</source>
      </item>
      <item>
        <title>Eliminate LD_PRELOAD and other Dangerous Environment Variables</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>It’s an interesting idea!</p>
<p>Could you please describe the threat model? I guess it assumes a compromise of a user account (probably most likely user <code>user</code>?) and then malware under that account using LD_PRELOAD tricks to sniff what other applications are doing (such as sniffing keystrokes, passwords, memory?)</p>
<p>I guess complexity is low enough (which is a very good thing - I can ask some people for code review since small enough). Doesn’t need its own <code>Makefile</code>. Could be added to package <a href="https://gitlab.com/whonix/security-misc">security-misc</a> and compiled during postinst similar to <a href="https://gitlab.com/whonix/bindp/-/blob/master/debian/bindp.postinst#L30">bindp.postinst</a>?</p>
<p>There are a few legitimate uses of <code>LD_PRELOAD</code> in Whonix and Kicksecure:</p>
<ul>
<li>
<a href="https://gitlab.com/whonix/uwt">uwt</a> uses <a href="https://manpages.debian.org/buster/torsocks/torsocks.8.en.html"><code>torsocks</code></a> (for stream isolation) (<code>torsocks</code> as per its man page is a wrapper that adds the torsocks LD_PRELOAD) and <a href="https://gitlab.com/whonix/bindp"><code>bindp</code></a> (to change local listen interface).</li>
<li><a href="https://www.whonix.org/wiki/Hardened_Malloc">Hardened Malloc</a></li>
</ul>
<p>These are all based on <code>LD_PRELOAD</code>. Therefore do you think you could add some kind of root configurable whitelist <code>.d</code> mechanism?</p>
<p>Other things needed:</p>
<ul>
<li>license header</li>
<li>some test
<ul>
<li>whitelisted.so ld preload lib saying “i am here and this is good”</li>
<li>blacklisted-test.so ld preload lib saying “i am here and this is an error”</li>
<li>then the test script could look if the whitelisted lib is still there and the blacklisted one got filtered out. (We don’t want to break torsocks, stream isolation, bindp, hardeneed malloc.)</li>
</ul>
</li>
</ul>
<p>Nitpick: maybe shouldn’t be called rootkit-detect. While it would be great to have a fully featured rootkit detection installed by default, and while this is really cool, it doesn’t cover all of that. There are many ways to implement rootkits (such as kernel rootkits) which wouldn’t be covered here.</p>
<aside class="quote no-group" data-username="madaidan" data-post="1" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>Actually, I forgot about <code>ld-system-preload-disable</code> which would bypass this.</p>
</blockquote>
</aside>
<p><code>ld-system-preload-disable</code> requires root if I am not mistaken. Therefore out of threat model because…</p>
<aside class="quote no-group" data-username="madaidan" data-post="1" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>but the protection can easily be disabled by root.</p>
</blockquote>
</aside>
<p>Right?</p>
<aside class="quote no-group" data-username="madaidan" data-post="1" data-topic="10594">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>Maybe there’s another way to preload this library?</p>
</blockquote>
</aside>
<p>I don’t think so. Not when going the LD_PRELOAD route. The LD_PRELOAD mechanism is “somewhat limited”. System wide preloading is what <code>/etc/ld.so.preload</code> is for. We discussed options for LD_PRELOAD in <a href="https://forums.whonix.org/t/hardened-malloc-hardened-memory-allocator/7474" class="inline-onebox">Hardened Malloc - Hardened Memory Allocator</a> and didn’t find too many options for that.</p>
<p>Related:</p>
<aside class="quote no-group" data-username="Patrick" data-post="113" data-topic="7474" data-full="true">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"><a href="//forums.whonix.org/t/hardened-malloc-hardened-memory-allocator/7474/113">Hardened Malloc - Hardened Memory Allocator</a>
</div>
<blockquote>
<p>glibc feature request: <a href="https://sourceware.org/bugzilla/show_bug.cgi?id=26723">LD_ETC_IGNORE - environment variable to ignore /etc/ld.so.preload configuration file on a per-application basis</a></p>
</blockquote>
</aside>
<p>Unless there is any different approach of environment variable filtering / enforcement. I might have more ideas (or at least contribute to brainstorming) once you described the threat model.</p>
<p>Environment variables have a parent / child relationship. Environment variables can be set by the parent process and are inherited by the child process. I guess the threat model here is that the parent shall be untrusted. The parent might be compromised and set malicious environment variables. Therefore we need to look closer at the parent. Who is the actual parent process here? Let’s look at <code>pstree</code>.</p>
<p>Maybe one of multiple of the following programs such as systemd, systemd user sessions, X login sessions, wayland sessions, getty, xfce4-terminal emulator, bash, etc. should have an option (set by --parameter or environment variable) <code>no-unsafe-environment-variables</code> or so which would then prohibit setting dangerous environment variables such as <code>LD_PRELOAD</code>? I wonder if this was ever considered, discussed somewhere?</p>
<p>It’s all about the threat model. I guess at some point there was a browser exploit. User <code>user</code> compromised. Some malware process running under user <code>user</code> which can now silently do everything that user <code>user</code> can do too. If in this case the login session was started with <code>no-unsafe-environment-variables</code> could that be effective?</p>
<p>Apparmor can filter environment variables. Would it work for this use case?</p>
          <p><a href="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/2">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/2</link>
        <pubDate>Sun, 15 Nov 2020 18:34:38 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-10594-2</guid>
        <source url="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594.rss">Eliminate LD_PRELOAD and other Dangerous Environment Variables</source>
      </item>
      <item>
        <title>Eliminate LD_PRELOAD and other Dangerous Environment Variables</title>
        <dc:creator><![CDATA[madaidan]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="madaidan" data-post="104" data-topic="7658">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/m/ea5d25/40.png" class="avatar"> madaidan:</div>
<blockquote>
<p>We’d need to disable LD_PRELOAD in another way.</p>
</blockquote>
</aside>
<p>I’ve been experimenting with a way to eliminate LD_PRELOAD (and other similar variables). We can create a library that checks if any dangerous variables have been set and then force it to exit if they are. This would be globally preloaded via <code>/etc/ld.so.preload</code> so the check is executed at the start of all applications.</p>
<p><a href="https://paste.debian.net/hidden/f3a9db80/" class="onebox" target="_blank" rel="nofollow noopener">https://paste.debian.net/hidden/f3a9db80/</a></p>
<p>Compile this with:</p>
<pre><code>gcc rootkit-detect.c -shared -fpic -Wl,-init,init -o rootkit-detect.so
</code></pre>
<p>And append <code>/etc/ld.so.preload</code> with:</p>
<pre><code>/usr/lib/rootkit-detect.so
</code></pre>
<p>I’ve tested this and it does work. I think it should be included in Whonix as it does eliminate a large vector for user space rootkits. It does hurt debugging a bit but the protection can easily be disabled by root.</p>
<p>Edit: Actually, I forgot about <code>ld-system-preload-disable</code> which would bypass this. Maybe there’s another way to preload this library?</p>
          <p><a href="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594/1</link>
        <pubDate>Sun, 15 Nov 2020 16:10:51 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-10594-1</guid>
        <source url="http://forums.whonix.org/t/eliminate-ld-preload-and-other-dangerous-environment-variables/10594.rss">Eliminate LD_PRELOAD and other Dangerous Environment Variables</source>
      </item>
  </channel>
</rss>

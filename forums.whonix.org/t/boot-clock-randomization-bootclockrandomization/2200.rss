<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Boot Clock Randomization - bootclockrandomization</title>
    <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200</link>
    <description>@marmarek [wrote](https://groups.google.com/d/msg/qubes-devel/aN3IOv6JmKw/_XOwbV-EAgAJ):

&gt; BTW why 0-5 is excluded in bootclockrandomization? I think this leaks some data. For example if attacker have already some selected set of data to correlate (like &quot;all Tor users in area X&quot;), he/she can easily further narrow the search by eliminating those with time almost in sync (+/-5sec). Given popularity of NTP, which (when works) is pretty good at keeping the time in sync, this allows to easily eliminate all such users, leaving probably only those using Whonix, or maybe even more precise correlation...

&gt;  https://github.com/Whonix/bootclockrandomization/blob/77d3e620017dd067e1660e7bebf582f042484c47/usr/share/bootclockrandomization/start#L26-L27</description>
    <language>en</language>
    <lastBuildDate>Fri, 24 Dec 2021 12:03:31 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Boot Clock Randomization - bootclockrandomization</title>
        <dc:creator><![CDATA[deeplow]]></dc:creator>
        <description><![CDATA[
            <p>The boot clock randomization was leading to some instability in the automated testing</p>
<aside class="onebox githubpullrequest">
  <header class="source">

      <a href="https://github.com/Whonix/bootclockrandomization/pull/2" target="_blank" rel="noopener nofollow ugc">github.com/Whonix/bootclockrandomization</a>
  </header>

  <article class="onebox-body">
    <div class="github-row">
  <div class="github-icon-container" title="Pull Request">
    <svg width="60" height="60" class="github-icon" viewBox="0 0 12 16" aria-hidden="true"><path d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"></path></svg>
  </div>

  <div class="github-info-container">
    <h4>
      <a href="https://github.com/Whonix/bootclockrandomization/pull/2" target="_blank" rel="noopener nofollow ugc">Make delay_plus_or_minus overridable via env var</a>
    </h4>

    <div class="branches">
      <code>Whonix:master</code> ← <code>deeplow:delay-as-env-var</code>
    </div>

    <div class="github-info">
      <div class="date">
        opened <span class="discourse-local-date" data-format="ll" data-date="2021-12-24" data-time="09:38:58" data-timezone="UTC">09:38AM - 24 Dec 21 UTC</span>
      </div>

      <div class="user">
        <a href="https://github.com/deeplow" target="_blank" rel="noopener nofollow ugc">
          <img alt="deeplow" src="https://avatars.githubusercontent.com/u/47065258?v=4" class="onebox-avatar-inline" width="20" height="20">
          deeplow
        </a>
      </div>

      <div class="lines" title="1 commits changed 1 files with 1 additions and 1 deletions">
        <a href="https://github.com/Whonix/bootclockrandomization/pull/2/files" target="_blank" rel="noopener nofollow ugc">
          <span class="added">+1</span>
          <span class="removed">-1</span>
        </a>
      </div>
    </div>
  </div>
</div>

  <div class="github-row">
    <p class="github-body-container">## The problem
Whonix tests are now non-deterministically failing in two cases:<span class="show-more-container"><a href="https://github.com/Whonix/bootclockrandomization/pull/2" target="_blank" rel="noopener nofollow ugc" class="show-more">…</a></span><span class="excerpt hidden">

1.  [failing in splitgpg tests](https://openqa.qubes-os.org/tests/26118#step/TC_10_Thunderbird_whonix-ws-16/1). I've nailed this down to the fact that the backwards time leap is messing up the dovecot imap service we now use with thunderbird 91+ testing.

2. It also seems to be the root cause of [invalid GPG signatures](https://openqa.qubes-os.org/tests/26805#step/TC_10_Thunderbird_whonix-ws-16/3)
    
    ![error_signature](https://user-images.githubusercontent.com/47065258/147340527-30b7cb1e-af75-4dad-9e5c-cd64f9a8ab3d.png)


## Proposed solution
Having this var overridable by an env var so in the test suites we can reduce it to something like 5 seconds

## Testing
I've ran locally 140 tests with the delay set to 5 instead of 180 and this made it pass 140/140 splitgpg tests locally (quite impressive!), whereas before it used to fail quite more often.</span></p>
  </div>

  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

          <p><a href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/14">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/14</link>
        <pubDate>Fri, 24 Dec 2021 12:03:31 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-2200-14</guid>
        <source url="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss">Boot Clock Randomization - bootclockrandomization</source>
      </item>
      <item>
        <title>Boot Clock Randomization - bootclockrandomization</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Due to issues reported in <a href="https://forums.whonix.org/t/whonix-ws-16-fails-to-update-due-to-timing-issue/12739" class="inline-onebox">Whonix-ws-16 fails to update due to timing issue</a>…</p>
<p>How useful is Boot Clock Randomization in Qubes-Whonix Templates?</p>
<p>In other words, what is the chance of the VM time from inside a Qubes-Whonix Template being leaked to a Tor exit relay? (<a href="https://www.whonix.org/wiki/Dev/TimeSync#Local_Clock_Leaks">Local Clock Leaks</a>)</p>
<p>Qubes Templates do not have “full” networking. APT is running through Qubes UpdatesProxy.</p>
<ul>
<li>Some users might be running other networked applications from Qubes Templates. For example <a href="https://www.whonix.org/wiki/Operating_System_Software_and_Updates" class="inline-onebox">Operating System Software and Updates - Whonix</a> suggests:</li>
</ul>
<blockquote>
<p>Flatpak Update</p>
<p>This step is only required if the user previously manually installed any software using <a href="https://www.whonix.org/wiki/Install_Software#flatpak">flatpak</a>. Can be skipped otherwise.</p>
<p>Qubes-Whonix ™ Template:</p>
<pre><code>http_proxy=http://127.0.0.1:8082 flatpak update
</code></pre>
</blockquote>
<ul>
<li>I’ve also seen <code>http_proxy=http://127.0.0.1:8082 gpg --recv-keys [...]</code>.</li>
<li>Tor Browser downloader by Whonix developers (tb-updater).</li>
</ul>
          <p><a href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/13">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/13</link>
        <pubDate>Sat, 20 Nov 2021 18:46:23 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-2200-13</guid>
        <source url="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss">Boot Clock Randomization - bootclockrandomization</source>
      </item>
      <item>
        <title>Boot Clock Randomization - bootclockrandomization</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <aside class="onebox allowlistedgeneric">
  <header class="source">
      <img src="https://www.whonix.org/w/images/favicon.ico" class="site-icon" width="16" height="16">

      <a href="https://www.whonix.org/wiki/Boot_Clock_Randomization" target="_blank" rel="noopener" title="11:25PM - 29 September 2021">Whonix – 29 Sep 21</a>
  </header>

  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:133/45;"><img src="https://www.whonix.org/w/images/a/ab/Randomizationclock321423.jpg" class="thumbnail" width="133" height="45"></div>

<h3><a href="https://www.whonix.org/wiki/Boot_Clock_Randomization" target="_blank" rel="noopener">Boot Clock Randomization</a></h3>

  <p>Boot Clock Randomization</p>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

          <p><a href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/12">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/12</link>
        <pubDate>Sat, 20 Nov 2021 18:39:19 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-2200-12</guid>
        <source url="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss">Boot Clock Randomization - bootclockrandomization</source>
      </item>
      <item>
        <title>Boot Clock Randomization - bootclockrandomization</title>
        <dc:creator><![CDATA[HulaHoop]]></dc:creator>
        <description><![CDATA[
            <p>The clock support in namespaces is a special case that was recently added this year:</p>
<p><a href="https://www.phoronix.com/scan.php?page=news_item&amp;px=Linux-Time-Namespace-Coming" class="onebox" target="_blank">https://www.phoronix.com/scan.php?page=news_item&amp;px=Linux-Time-Namespace-Coming</a></p>
          <p><a href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/11">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/11</link>
        <pubDate>Wed, 01 Apr 2020 16:40:16 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-2200-11</guid>
        <source url="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss">Boot Clock Randomization - bootclockrandomization</source>
      </item>
      <item>
        <title>Boot Clock Randomization - bootclockrandomization</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>bootclockrandomization fails inside a systemd-nspawn chroot.</p>
<pre><code>Mar 31 06:51:19 host systemd[1]: Starting Boot Clock Randomization...
Mar 31 06:51:19 host start[102]: + 129 262440680
Mar 31 06:51:19 host start[102]: date: cannot set date: Operation not permitted
Mar 31 06:51:19 host start[102]: ERROR: exit_code: 1 | BASH_COMMAND: date --set "@$NEW_TIME.$NANOSECONDS" &gt; /dev
Mar 31 06:51:19 host systemd[1]: bootclockrandomization.service: Main process exited, code=exited, status=1/FAIL
Mar 31 06:51:19 host systemd[1]: bootclockrandomization.service: Failed with result 'exit-code'.
Mar 31 06:51:19 host systemd[1]: Failed to start Boot Clock Randomization.
</code></pre>
<p>Same holds true for sdwdate.</p>
<p>This is expected because Quote <a href="https://www.freedesktop.org/software/systemd/man/systemd-nspawn.html">https://www.freedesktop.org/software/systemd/man/systemd-nspawn.html</a></p>
<blockquote>
<p>The host’s network interfaces and the system <em>clock</em> may not be <em>changed</em> from within the <em>container</em>.</p>
</blockquote>
<p>What should bootclockrandomization do in that case? Ignore the error? I guess not a great solution.</p>
<p>Maybe not start in these cases at all using <code>ConditionVirtualization=!systemd-nspawn</code>?</p>
          <p><a href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/10">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/10</link>
        <pubDate>Tue, 31 Mar 2020 11:24:52 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-2200-10</guid>
        <source url="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss">Boot Clock Randomization - bootclockrandomization</source>
      </item>
      <item>
        <title>Boot Clock Randomization - bootclockrandomization</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Agreed!</p>
<aside class="onebox githubcommit">
  <header class="source">
      <a href="https://github.com/Whonix/bootclockrandomization/commit/add0177c2dda409c6f5dcf224d62469ac2d6d83f" target="_blank" rel="nofollow noopener">github.com/Whonix/bootclockrandomization</a>
  </header>
  <article class="onebox-body">
      <a href="https://github.com/adrelanos" target="_blank" rel="nofollow noopener">
    <img alt="adrelanos" src="https://avatars3.githubusercontent.com/u/1985040?v=4" class="thumbnail onebox-avatar" width="90" height="90">
  </a>

<h4>
  <a href="https://github.com/Whonix/bootclockrandomization/commit/add0177c2dda409c6f5dcf224d62469ac2d6d83f" target="_blank" rel="nofollow noopener">no longer exclude +/- 5 seconds range to avoid fingerprinting negative correlation</a>
</h4>

  <pre class="message" style="white-space: pre-wrap;">Thanks to @marmarek for the suggestion!
https://github.com/QubesOS/qubes-issues/issues/1764#issuecomment-195619793</pre>

<div class="date">
  by <a href="https://github.com/adrelanos" target="_blank" rel="nofollow noopener">adrelanos</a>
  on <a href="https://github.com/Whonix/bootclockrandomization/commit/add0177c2dda409c6f5dcf224d62469ac2d6d83f" target="_blank" rel="nofollow noopener">12:50AM - 13 Mar 16</a>
</div>

<div class="github-commit-stats">
  changed <strong>1 files</strong>
  with <strong>2 additions</strong>
  and <strong>2 deletions</strong>.
</div>

  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/9">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/9</link>
        <pubDate>Sun, 13 Mar 2016 00:50:25 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-2200-9</guid>
        <source url="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss">Boot Clock Randomization - bootclockrandomization</source>
      </item>
      <item>
        <title>Boot Clock Randomization - bootclockrandomization</title>
        <dc:creator><![CDATA[marmarek]]></dc:creator>
        <description><![CDATA[
            <blockquote>
<p>Your suggestion is to:</p>
<ul>
<li>remove the minimum +/- 5 seconds thing</li>
<li>keep randomizing nanoseconds (we really don’t want a high res local clock leak to aid correlation)</li>
<li>otherwise keep boot clock randomization as is</li>
</ul>
</blockquote>
<p>Yes, exactly.</p>
<p>Best Regards,<br>
Marek Marczykowski-Górecki<br>
Invisible Things Lab<br>
A: Because it messes up the order in which people normally read text.<br>
Q: Why is top-posting such a bad thing?</p>
          <p><a href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/8">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/8</link>
        <pubDate>Fri, 11 Mar 2016 00:28:09 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-2200-8</guid>
        <source url="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss">Boot Clock Randomization - bootclockrandomization</source>
      </item>
      <item>
        <title>Boot Clock Randomization - bootclockrandomization</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Your suggestion is to:</p>
<ul>
<li>remove the minimum +/- 5 seconds thing</li>
<li>keep randomizing nanoseconds (we really don’t want a high res local clock leak to aid correlation)</li>
<li>otherwise keep boot clock randomization as is</li>
</ul>
<p>?</p>
          <p><a href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/7">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/7</link>
        <pubDate>Fri, 11 Mar 2016 00:18:33 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-2200-7</guid>
        <source url="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss">Boot Clock Randomization - bootclockrandomization</source>
      </item>
      <item>
        <title>Boot Clock Randomization - bootclockrandomization</title>
        <dc:creator><![CDATA[marmarek]]></dc:creator>
        <description><![CDATA[
            <blockquote>
<p>The choice is between passively leaking to exit relays and beyond that the WS clock is a little off to NTP vs leaking something very close to the host clock. The latter is much worse and protected against by the randomization. This creates an anonymity set (all Whonix users).</p>
</blockquote>
<p>The attacker have no idea how close leaked time is to the host time.<br>
Unless you announce it.<br>
Following your reasoning to the extreme, adding always +3min to the host<br>
clock would be the best, because it would always be different than host<br>
clock. But in fact (together with public information about this<br>
implementation) it leaks precise host clock.</p>
<p>Just excluding -5-+5 range, doesn’t leak that precise information, but<br>
leaks more than real random offset (as explained in the previous<br>
message).</p>
<blockquote>
<p>This is similar to how all Tor designed applications like TBB have a fingerprint different than everything else but provide the same safe defaults across the board.</p>
</blockquote>
<p>This would make any sense only if everyone would have precisely the same<br>
host time (in which case time randomization wouldn’t be needed at<br>
all…). Otherwise it isn’t true that every user will look the same - it<br>
will still depend on host clock, which may be different.</p>
<p>Best Regards,<br>
Marek Marczykowski-Górecki<br>
Invisible Things Lab<br>
A: Because it messes up the order in which people normally read text.<br>
Q: Why is top-posting such a bad thing?</p>
          <p><a href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/6">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/6</link>
        <pubDate>Fri, 11 Mar 2016 00:06:42 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-2200-6</guid>
        <source url="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss">Boot Clock Randomization - bootclockrandomization</source>
      </item>
      <item>
        <title>Boot Clock Randomization - bootclockrandomization</title>
        <dc:creator><![CDATA[HulaHoop]]></dc:creator>
        <description><![CDATA[
            <p>Patrick I agree.</p>
<p>The choice is between passively leaking to exit relays and beyond that the WS clock is a little off to NTP vs leaking something very close to the host clock. The latter is much worse and protected against by the randomization. This creates an anonymity set (all Whonix users).</p>
<p>This is similar to how all Tor designed applications like TBB have a fingerprint different than everything else but provide the same safe defaults across the board.</p>
          <p><a href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/5">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/5</link>
        <pubDate>Thu, 10 Mar 2016 23:30:17 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-2200-5</guid>
        <source url="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss">Boot Clock Randomization - bootclockrandomization</source>
      </item>
      <item>
        <title>Boot Clock Randomization - bootclockrandomization</title>
        <dc:creator><![CDATA[marmarek]]></dc:creator>
        <description><![CDATA[
            <p>In other words:<br>
If the attacker knows that the time is strictly randomized (±180s without<br>
exclusions), any clock leak is untrustworthy; if the attacker knows that<br>
time is randomized by ±5-180s, some times can be excluded and in fact we<br>
leak more information that before.</p>
<p>Full randomization: true machine time has 361 equivalently possible values<br>
(approx; this doesn’t count miliseconds randomization, but it’s a passable simplification)<br>
Randomization with exclusion: true machine time has 350 equivalently<br>
possible values.</p>
<p>Assuming two times leaked, say 00:04:15 and 00:05:01,we have:<br>
full randomization: real time is between 00:02:01 and 00:07:15, that is, we<br>
have 314 possible times to choose from<br>
randomization with exclusion: real time is between 00:02:01 and 00:07:15,<br>
with the exclusion of periods 00:04:10-00:04:20 and 00:04:56-00:05:11,<br>
which gives 292 possible times.</p>
<p>In layman’s terms, it’s the difference between “I rolled a die and adjusted<br>
the result by 1,0 or -1, now I have a three” and “I rolled a die and<br>
adjusted the result by 1 or -1 and now I have a three”. Although the second<br>
method does never result in the starting roll, it actually leaks more, not<br>
less information about it.</p>
          <p><a href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/4">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/4</link>
        <pubDate>Thu, 10 Mar 2016 10:50:50 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-2200-4</guid>
        <source url="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss">Boot Clock Randomization - bootclockrandomization</source>
      </item>
      <item>
        <title>Boot Clock Randomization - bootclockrandomization</title>
        <dc:creator><![CDATA[marmarek]]></dc:creator>
        <description><![CDATA[
            <blockquote>
<p>In an ideal world, we would require neither boot clock randomization nor sdwdate. The host would always boot would a perfectly synchronization time to begin with. And everyone would always have a perfectly synchronized time always. And online time syncing would be impossible to manipulate with by man-in-the-middle attacks.</p>
</blockquote>
<p>Yes.</p>
<blockquote>
<p><a class="mention" href="http://forums.whonix.org/u/marmarek">@marmarek</a> wrote:</p>
<blockquote>
<p>For example if attacker have already some selected set of data to<br>
correlate (like “all Tor users in area X”), he/she can easily further<br>
narrow the search by eliminating those with time almost in sync<br>
(+/-5sec).</p>
</blockquote>
<p>Note, that this +/-5sec (emitted from within Whonix VMs) should only be observable at Tor exit relays, destination websites and onion servers. Not at ISP level. (ISP might observe local clock leaks by the host or other non-Tor VMs.)</p>
</blockquote>
<p>Exactly the point. This gives negative correlation between data gathered<br>
at local ISP level, with data from target server/exit relays.<br>
Additionally, if you have some other way to link multiple sessions of<br>
the same person, <em>on the target server</em> (like using the same pseudonym),<br>
you’ll gain much in terms of host clock leak, just because this 10s<br>
range exclusion. Because every session (boot clock randomization run)<br>
gives you information about what 10s range is surely not the user host<br>
clock. After a while you’ll exclude pretty much of the whole ±180s<br>
range giving you quite precise approximation of host clock. In extreme<br>
situation, 18 sessions would be enough (each excluding some 10s range).<br>
Then you need to correlate it with ISP level data.</p>
<p>The point is, when you want to unlink Whonix time from host time, you<br>
need to use as little host time as possible. If you just<br>
choose randomly from ±180s, choosing offset of 0s would be<br>
indistinguishable from some other user randomly choosing offset of 30s<br>
and having host time -30s off (or any other value, as long as both are<br>
the same). But if you exclude ±5s range (or if fact any range), you<br>
help with reducing anonymity by excluding those “clearnet hosts” with time<br>
in ±5s range of the Whonix-ws leaked one.</p>
<p>Best Regards,<br>
Marek Marczykowski-Górecki<br>
Invisible Things Lab<br>
A: Because it messes up the order in which people normally read text.<br>
Q: Why is top-posting such a bad thing?</p>
          <p><a href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/3">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/3</link>
        <pubDate>Thu, 10 Mar 2016 01:54:39 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-2200-3</guid>
        <source url="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss">Boot Clock Randomization - bootclockrandomization</source>
      </item>
      <item>
        <title>Boot Clock Randomization - bootclockrandomization</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>boot clock randomization can indeed use some more discussion and scrutiny. Here is what it’s about…</p>
<p>(Trying to speak more generally, less Qubes specific here.)</p>
<p>Assumption: Lots of users are either</p>
<ul>
<li>a) using NTP and have usually correct quite precise clocks</li>
<li>b) using NTP and currently having a slow or fast clock about 1, 2, … etc. seconds</li>
<li>c) some have buggy setups and clocks that are far off</li>
</ul>
<p>There are various <a href="https://www.whonix.org/wiki/Dev/TimeSync#Local_Clock_Leaks">local clock leaks</a>. We try/recommend to prevent all of them, but it’s impossible to be sure we are aware of all of them.</p>
<p>Let’s take a not so uncommon use case. A user wants to visit a website that does not work in Tor Browser or requires some special plugin that is blocked by Tor Browser. In such cases users switch to other browsers such as iceweasel. And iceweasel will leak the local VM clock through javascript [and more].</p>
<p>Before sdwdate finished setting the clock after boot to unlink it from the host [in Qubes terms: from sys-net and other non-Tor VMs] or in case sdwdate fails, there is at least bootclockrandomization to archive that. [The long term is to block all networking but sdwdate until sdwdate is done, but it takes a while until we get there. -&gt; <a href="https://www.whonix.org/wiki/Dev/TimeSync#sdwdate-gui">sdwdate-gui</a>) [and for sdwdate fetches itself it is desireable to at least have bootclockrandomization just in case]</p>
<p><a href="https://www.whonix.org/wiki/Dev/TimeSync">In the wiki the only rationale explanation currently is the following.</a></p>
<blockquote>
<p>Using <a href="https://github.com/Whonix/bootclockrandomization">Boot Clock Randomization</a>, i.e. after boot, the clock is set randomly between 5 and 180 seconds  into the past or future. This is useful to enforce the design goal, that the host clock and Whonix-Workstation clock should always slightly differ. It’s also useful to obfuscate the clock when sdwdate itself is running, because naturally at this time, sdwdate hasn’t finished.</p>
</blockquote>
<ul>
<li>Unlinking is the keyword.</li>
<li>It’s sane to assume that a non-torified host or other VMs may leak the local clock. (<a href="https://www.whonix.org/wiki/Dev/TimeSync#Local_Clock_Leaks">local clock leaks</a>)</li>
<li>It’s also sane to assume, that a Whonix VM may leak the local clock. (<a href="https://www.whonix.org/wiki/Dev/TimeSync#Local_Clock_Leaks">local clock leaks</a>)</li>
<li>It’s purpose is to prevent correlation / anonymity set reduction by comparing a local clock leak from let’s say for example iceweasel in a non-Tor VM and a local clock leak from let’s say iceweasel from within a Whonix VM.</li>
</ul>
<p>Now, how big is group a), b) and c)? It’s impossible to say. I am not aware of any research of that and we neither have the resources to do that research.</p>
<p>Let’s assume only 10% of users have a clock that is 4 seconds slow. If boot clock randomization added only +1, it seems to me the anonymity set reduction may still work. Or if it randomly picked 0, it would not help at all.</p>
<p>However, it’s right, there is a point. For users using Whonix VMs and doing stuff suffering from some local clock leak, we may indeed add some of the group a) users “with a perfectly synced clock” to an artificial “unnecessarily” fingerprintable attribute that otherwise would not exist. On other other hand, users of group b) and c) would be better off. And since it’s public knowledge, that Whonix uses bootclockrandomization and sdwdate, all Whonix users can blend into the group of Whonix users. Thereby gain anonymity. And by the obfuscation of local clock state is leaked from within the VM, hopefully such clock correlation attacks become unattractive.</p>
<p>While I am at it… What is sdwdate good for then… Mostly useful for users of group b) and c), it sets the clock to a time that is as securely obtained and as correct as it can get. While still being independent from the host and other non-Tor VMs. And keeps it that way during long running sessions. The time set by sdwdate should then be similar enough for all Whonix users to make clock correlation attacks unattractive.</p>
<p>In an ideal world, we would require neither boot clock randomization nor sdwdate. The host would always boot would a perfectly synchronization time to begin with. And everyone would always have a perfectly synchronized time always. And online time syncing would be impossible to manipulate with by man-in-the-middle attacks.</p>
<p><a class="mention" href="http://forums.whonix.org/u/marmarek">@marmarek</a> wrote:</p>
<blockquote>
<p>For example if attacker have already some selected set of data to<br>
correlate (like “all Tor users in area X”), he/she can easily further<br>
narrow the search by eliminating those with time almost in sync<br>
(+/-5sec).</p>
</blockquote>
<p>Note, that this +/-5sec (emitted from within Whonix VMs) should only be observable at Tor exit relays, destination websites and onion servers. Not at ISP level. (ISP might observe local clock leaks by the host or other non-Tor VMs.)</p>
<p>//cc <a class="mention" href="http://forums.whonix.org/u/hulahoop">@HulaHoop</a></p>
          <p><a href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/2">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/2</link>
        <pubDate>Thu, 10 Mar 2016 01:03:53 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-2200-2</guid>
        <source url="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss">Boot Clock Randomization - bootclockrandomization</source>
      </item>
      <item>
        <title>Boot Clock Randomization - bootclockrandomization</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p><a class="mention" href="http://forums.whonix.org/u/marmarek">@marmarek</a> <a href="https://groups.google.com/d/msg/qubes-devel/aN3IOv6JmKw/_XOwbV-EAgAJ">wrote</a>:</p>
<blockquote>
<p>BTW why 0-5 is excluded in bootclockrandomization? I think this leaks some data. For example if attacker have already some selected set of data to correlate (like “all Tor users in area X”), he/she can easily further narrow the search by eliminating those with time almost in sync (+/-5sec). Given popularity of NTP, which (when works) is pretty good at keeping the time in sync, this allows to easily eliminate all such users, leaving probably only those using Whonix, or maybe even more precise correlation…</p>
</blockquote>
<blockquote>
<p><a href="https://github.com/Whonix/bootclockrandomization/blob/77d3e620017dd067e1660e7bebf582f042484c47/usr/share/bootclockrandomization/start#L26-L27">https://github.com/Whonix/bootclockrandomization/blob/77d3e620017dd067e1660e7bebf582f042484c47/usr/share/bootclockrandomization/start#L26-L27</a></p>
</blockquote>
          <p><a href="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200/1</link>
        <pubDate>Tue, 08 Mar 2016 22:05:39 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-2200-1</guid>
        <source url="http://forums.whonix.org/t/boot-clock-randomization-bootclockrandomization/2200.rss">Boot Clock Randomization - bootclockrandomization</source>
      </item>
  </channel>
</rss>

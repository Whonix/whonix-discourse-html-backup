<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Announcing Whonix&#39;s First Implementation of Verifiable Builds</title>
    <link>http://forums.whonix.org/t/announcing-whonixs-first-implementation-of-verifiable-builds/962</link>
    <description>[html]&lt;p&gt;Hi,&lt;/p&gt;
&lt;p&gt;you may or may not be interested, that Whonix [1] (a derivative of Debian) first implementation of verifiable builds has been finished. It should make it reasonable to believe, that the original Whonix.ova images have been build from the source code that has been published for that Whonix version with no malicious additions by the Whonix builder or build machine. Next Whonix version will be build that way.&lt;/p&gt;
&lt;p&gt;It’s not as good as reproducible-builds [0], where you can simply compare the hash of the resulting image, but without any

deterministically build operating systems, that’s impossible for the Whonix project to archive.&lt;/p&gt;
&lt;p&gt;How it works (very brief)… Whonix does not add binary packages. All binary packages are taken from Debian repositories. Whonix is only a collection of config files and scripts. Images is extracted, MBR, VBR gets dumped and compared, checksums of all files within the image are created. All information is written into a report file. When having two reports (one of official builds and a own build), those can be compared. The full documentation of that feature and links to the related scripts can be found in whonix.org wiki. [2]&lt;/p&gt;
&lt;p&gt;I am happy to hear if I have overseen any holes, where backdoors could still be hidden.&lt;/p&gt;
&lt;p&gt;And I also have a question. During Whonix’s build process, after installing all packages inside the image, commands like&lt;/p&gt;
&lt;p&gt;/var/lib/dpkg/info/docbook-xml.prerm remove

/var/lib/dpkg/info/docbook-xml.postrm purge&lt;/p&gt;
&lt;p&gt;are run. And during first boot, commands like&lt;/p&gt;
&lt;p&gt;/var/lib/dpkg/info/docbook-xml.preinst install

/var/lib/dpkg/info/docbook-xml.postinst configure&lt;/p&gt;
&lt;p&gt;are run. Is there perhaps a better way of temporarily getting rid of non-deterministic files than manually running these scripts, for example letting dpkg call those scripts?&lt;/p&gt;
&lt;p&gt;Cheers,

adrelanos&lt;/p&gt;
&lt;p&gt;[0] &lt;a href=&quot;https://wiki.debian.org/ReproducibleBuilds&quot;&gt;https://wiki.debian.org/ReproducibleBuilds&lt;/a&gt;

[1] &lt;a href=&quot;https://www.whonix.org&quot;&gt;https://www.whonix.org&lt;/a&gt;

[2] &lt;a href=&quot;https://www.whonix.org/wiki/Verifiable_Builds&quot;&gt;https://www.whonix.org/wiki/Verifiable_Builds&lt;/a&gt;&lt;/p&gt;
[/html]</description>
    <language>en</language>
    <lastBuildDate>Sat, 04 Apr 2015 16:14:18 +0000</lastBuildDate>
    <category>Recycle Bin</category>
    <atom:link href="http://forums.whonix.org/t/announcing-whonixs-first-implementation-of-verifiable-builds/962.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Announcing Whonix&#39;s First Implementation of Verifiable Builds</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>[html]</p><p>Hi,</p>
<p>you may or may not be interested, that Whonix [1] (a derivative of Debian) first implementation of verifiable builds has been finished. It should make it reasonable to believe, that the original Whonix.ova images have been build from the source code that has been published for that Whonix version with no malicious additions by the Whonix builder or build machine. Next Whonix version will be build that way.</p>
<p>It’s not as good as reproducible-builds [0], where you can simply compare the hash of the resulting image, but without any
</p><p>deterministically build operating systems, that’s impossible for the Whonix project to archive.</p>
<p>How it works (very brief)… Whonix does not add binary packages. All binary packages are taken from Debian repositories. Whonix is only a collection of config files and scripts. Images is extracted, MBR, VBR gets dumped and compared, checksums of all files within the image are created. All information is written into a report file. When having two reports (one of official builds and a own build), those can be compared. The full documentation of that feature and links to the related scripts can be found in whonix.org wiki. [2]</p>
<p>I am happy to hear if I have overseen any holes, where backdoors could still be hidden.</p>
<p>And I also have a question. During Whonix’s build process, after installing all packages inside the image, commands like</p>
<p>/var/lib/dpkg/info/docbook-xml.prerm remove
</p><p>/var/lib/dpkg/info/docbook-xml.postrm purge</p>
<p>are run. And during first boot, commands like</p>
<p>/var/lib/dpkg/info/docbook-xml.preinst install
</p><p>/var/lib/dpkg/info/docbook-xml.postinst configure</p>
<p>are run. Is there perhaps a better way of temporarily getting rid of non-deterministic files than manually running these scripts, for example letting dpkg call those scripts?</p>
<p>Cheers,
</p><p>adrelanos</p>
<p>[0] <a href="https://wiki.debian.org/ReproducibleBuilds">https://wiki.debian.org/ReproducibleBuilds</a>
</p><p>[1] <a href="https://www.whonix.org">https://www.whonix.org</a></p>
<p>[2] <a href="https://www.whonix.org/wiki/Verifiable_Builds">https://www.whonix.org/wiki/Verifiable_Builds</a></p><br>
[/html]
          <p><a href="http://forums.whonix.org/t/announcing-whonixs-first-implementation-of-verifiable-builds/962/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/announcing-whonixs-first-implementation-of-verifiable-builds/962/1</link>
        <pubDate>Sat, 04 Apr 2015 16:14:18 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-962-1</guid>
        <source url="http://forums.whonix.org/t/announcing-whonixs-first-implementation-of-verifiable-builds/962.rss">Announcing Whonix&#39;s First Implementation of Verifiable Builds</source>
      </item>
  </channel>
</rss>

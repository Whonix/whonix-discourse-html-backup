<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Tor hidden service private key leaks into Whonix-Workstation in the age of Tor ControlProtocol (ephermal) based hidden services</title>
    <link>http://forums.whonix.org/t/tor-hidden-service-private-key-leaks-into-whonix-workstation-in-the-age-of-tor-controlprotocol-ephermal-based-hidden-services/3524</link>
    <description>onionshare, ricochet and unMessage will make it a lot easier to use Tor hidden services once Whonix 14 is out. No more torrc edits required. Easier backups of hidden service private keys. The disadvantage of ricochet and unMessage however is, that the hidden service key ends up in Whonix-Workstation. Otherwise the same onion address could not be restored on subsequent use.

This was better in &quot;[the age of TorChat](https://www.whonix.org/wiki/Deprecated#TorChat)&quot; where the Tor hidden service private key never reached Whonix-Workstation and stayed only on Whonix-Gateway.

I wonder if we could suggest a feature to The Tor Project, where the to be restored hidden service private key gets only referenced by its domain name that is stored on the workstation while the real hidden service key stays stored in /var/lib/tor on Whonix-Gateway. This however would making backups of these keys harder - one would not just have to backup its application user data folder on the workstation but also the Tor hidden service keys on the gateway.

If this is worth it depends on how much damage an attacker inside a compromised workstation can do when having access to the Tor hidden service private key vs not having access to it. Obviously the ability to steal the identity vs not having that ability. But does it open up to other anonymity related attacks?</description>
    <language>en</language>
    <lastBuildDate>Sun, 05 Feb 2017 23:51:52 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="http://forums.whonix.org/t/tor-hidden-service-private-key-leaks-into-whonix-workstation-in-the-age-of-tor-controlprotocol-ephermal-based-hidden-services/3524.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Tor hidden service private key leaks into Whonix-Workstation in the age of Tor ControlProtocol (ephermal) based hidden services</title>
        <dc:creator><![CDATA[HulaHoop]]></dc:creator>
        <description><![CDATA[
            <aside class="quote" data-post="1" data-topic="3524">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_1.png" class="avatar"> Patrick:</div>
<blockquote>
<p>If this is worth it depends on how much damage an attacker inside a compromised workstation can do when having access to the Tor hidden service private key vs not having access to it. Obviously the ability to steal the identity vs not having that ability. But does it open up to other anonymity related attacks?</p>
</blockquote>
</aside>
<p>Exfiltrating the private key gives them the ability to impersonate the user and eavesdrop on the conversation even outside the window of compromise of the workstation.</p>
<p>With the old version of the HS protocol, they can censor communication by arranging malicious HS authority servers beforehand. Knowing the HS address makes targeted deanonymization attacks easier to do since they know a certain onion name to run confirmation attacks for with compromised guards.</p>
<p>Keeping with our design goal we should always opt for the WS knowing less as possible. Safe defaults should always be a priority.</p>
<p>Backing up the key is really a one time thing and not worth leaving users exposed over.</p>
          <p><a href="http://forums.whonix.org/t/tor-hidden-service-private-key-leaks-into-whonix-workstation-in-the-age-of-tor-controlprotocol-ephermal-based-hidden-services/3524/2">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/tor-hidden-service-private-key-leaks-into-whonix-workstation-in-the-age-of-tor-controlprotocol-ephermal-based-hidden-services/3524/2</link>
        <pubDate>Sun, 05 Feb 2017 23:51:52 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-3524-2</guid>
        <source url="http://forums.whonix.org/t/tor-hidden-service-private-key-leaks-into-whonix-workstation-in-the-age-of-tor-controlprotocol-ephermal-based-hidden-services/3524.rss">Tor hidden service private key leaks into Whonix-Workstation in the age of Tor ControlProtocol (ephermal) based hidden services</source>
      </item>
      <item>
        <title>Tor hidden service private key leaks into Whonix-Workstation in the age of Tor ControlProtocol (ephermal) based hidden services</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>onionshare, ricochet and unMessage will make it a lot easier to use Tor hidden services once Whonix 14 is out. No more torrc edits required. Easier backups of hidden service private keys. The disadvantage of ricochet and unMessage however is, that the hidden service key ends up in Whonix-Workstation. Otherwise the same onion address could not be restored on subsequent use.</p>
<p>This was better in “<a href="https://www.whonix.org/wiki/Deprecated#TorChat">the age of TorChat</a>” where the Tor hidden service private key never reached Whonix-Workstation and stayed only on Whonix-Gateway.</p>
<p>I wonder if we could suggest a feature to The Tor Project, where the to be restored hidden service private key gets only referenced by its domain name that is stored on the workstation while the real hidden service key stays stored in /var/lib/tor on Whonix-Gateway. This however would making backups of these keys harder - one would not just have to backup its application user data folder on the workstation but also the Tor hidden service keys on the gateway.</p>
<p>If this is worth it depends on how much damage an attacker inside a compromised workstation can do when having access to the Tor hidden service private key vs not having access to it. Obviously the ability to steal the identity vs not having that ability. But does it open up to other anonymity related attacks?</p>
          <p><a href="http://forums.whonix.org/t/tor-hidden-service-private-key-leaks-into-whonix-workstation-in-the-age-of-tor-controlprotocol-ephermal-based-hidden-services/3524/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/tor-hidden-service-private-key-leaks-into-whonix-workstation-in-the-age-of-tor-controlprotocol-ephermal-based-hidden-services/3524/1</link>
        <pubDate>Sat, 04 Feb 2017 15:08:26 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-3524-1</guid>
        <source url="http://forums.whonix.org/t/tor-hidden-service-private-key-leaks-into-whonix-workstation-in-the-age-of-tor-controlprotocol-ephermal-based-hidden-services/3524.rss">Tor hidden service private key leaks into Whonix-Workstation in the age of Tor ControlProtocol (ephermal) based hidden services</source>
      </item>
  </channel>
</rss>

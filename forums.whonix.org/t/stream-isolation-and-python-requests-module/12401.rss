<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Stream Isolation and Python Requests module</title>
    <link>http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401</link>
    <description>I have read the documentation referring to stream isolation support. I have tested it with `while true; do curl https://check.torproject.org | grep strong; done;`

Stream isolation is confirmed by viewing the exit nodes changing for each request. I tried this with the simple requests module from python, but it is _always_ the same IP address. At first I thought maybe I could open socket with 127.0.0.1:9051 and send the SIGNAL NEWNYM to it, but that never worked. Would it be better to keep digging down this path or to just wrap calls to &#39;curl&#39; for when I need to programmatically interact with a website?</description>
    <language>en</language>
    <lastBuildDate>Tue, 21 Sep 2021 09:38:50 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Stream Isolation and Python Requests module</title>
        <dc:creator><![CDATA[eeL7hohh]]></dc:creator>
        <description><![CDATA[
            <p>I have sorted out some way to get stream isolation working, you can imitate it utilizing this content. The final lines of the script incorporates a brief printout of the details.</p>
<p>username == password, but what matters is the unique authentication.</p>
<pre><code class="lang-auto">import requests
from bs4 import BeautifulSoup
checkTorUrl = "https://check.torproject.org"
counter = 0
import secrets, string, signal
keepScraping = True
def signal_handler(sig,frame):
        global keepScraping
        print('Handling Ctrl+C')
        keepScraping = False
signal.signal(signal.SIGINT,signal_handler)
IPList = {}
def generateUID(low=10,high=20):
        UID_Set = string.ascii_lowercase + string.ascii_uppercase + string.digits
        return ''.join(secrets.choice(UID_Set) for i in range(secrets.choice(range(low,high))))
while keepScraping:
        counter += 1
        with requests.Session() as s:
                # randomly generate 'username:password' pair for each session
                # 'username:password'
                creds = '{}:{}'.format(generateUID(),generateUID())
                s.proxies = {'http': 'socks5h://{}@localhost:9050'.format(creds), 'https': 'socks5h://{}@localhost:9050'.format(creds)}
                r = s.get(checkTorUrl)
                soup = BeautifulSoup(r.text,'html.parser')
                IPLogged = soup.select('strong')[0].string
                if(IPLogged in IPList):
                        IPList[IPLogged] += 1
                else:
                        IPList[IPLogged] = 1
                print("check torproject shows exit node IP = {}".format(IPLogged))
avg = 0
usesCount = {}
for IP in IPList:
        if(IPList[IP] in usesCount): # IPList[IP] returns number of times a request was made with that IP
                usesCount[IPList[IP]] += 1
        else:
                usesCount[IPList[IP]] = 1
        avg += IPList[IP]
avg/=counter
print("Number of GET requests made to https://check.torproject.org = {}".format(counter))
print("Total unique IPs used = {}".format(len(IPList)))
print("Average uses per IP address = {}".format(avg))
print("Median uses per IP address = {}".format(max(zip(usesCount.values(),usesCount.keys()))[1])) # returns the highest amount of frequency bin
print("Max used IP address ({}) = {}".format(max(zip(IPList.values(),IPList.keys()))[1],max(IPList.values())))
</code></pre>
<p>Importantly the <code>username</code> must remain unique between all instances executing the script. Otherwise it shares the tor circuit of when it was first generated. <em>Have not tested for VM resetting and username sharing.</em></p>
          <p><a href="http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401/6">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401/6</link>
        <pubDate>Tue, 21 Sep 2021 09:33:43 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-12401-6</guid>
        <source url="http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401.rss">Stream Isolation and Python Requests module</source>
      </item>
      <item>
        <title>Stream Isolation and Python Requests module</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>You don’t need to start Tor. No Tor config changes required.</p>
<p>A proxy (Tor or any) can accept username / password for authentication.<br>
Tor “abuses” this to get hints when to use stream isolation.<br>
What is required is setting a different socks user name per request which should be stream isolated.<br>
This can be done with curl from Whonix-Workstation. Syntax:</p>
<pre><code>curl --proxy socks5h://user:password@ip:port
</code></pre>
<p>The user could be anything. Probably randomly generated. Dunno the maximum. Password can be anything as it would be ignored by Tor as far as I know. Examples:</p>
<pre><code>UWT_DEV_PASSTHROUGH=1 curl --proxy socks5h://random1:password@10.152.152.10:9152 https:/check.torproject.org/api/ip
UWT_DEV_PASSTHROUGH=1 curl --proxy socks5h://random2:password@10.152.152.10:9152 https:/check.torproject.org/api/ip
</code></pre>
<p>and also with python requests.</p>
<aside class="onebox githubblob">
  <header class="source">

      <a href="https://github.com/psf/requests/blob/e3f89bf23c53b98593e4248054661472aacac820/requests/packages/urllib3/contrib/socks.py#L178" target="_blank" rel="noopener">github.com</a>
  </header>

  <article class="onebox-body">
    <h4><a href="https://github.com/psf/requests/blob/e3f89bf23c53b98593e4248054661472aacac820/requests/packages/urllib3/contrib/socks.py#L178" target="_blank" rel="noopener">psf/requests/blob/e3f89bf23c53b98593e4248054661472aacac820/requests/packages/urllib3/contrib/socks.py#L178</a></h4>



  <pre class="onebox">    <code class="lang-py">
      <ol class="start lines" start="168" style="counter-reset: li-counter 167 ;">
          <li>    raise ValueError(</li>
          <li>        "Unable to determine SOCKS version from %s" % proxy_url</li>
          <li>    )</li>
          <li>
          </li>
<li>self.proxy_url = proxy_url</li>
          <li>
          </li>
<li>socks_options = {</li>
          <li>    'socks_version': socks_version,</li>
          <li>    'proxy_host': parsed.host,</li>
          <li>    'proxy_port': parsed.port,</li>
          <li class="selected">    'username': username,</li>
          <li>    'password': password,</li>
          <li>    'rdns': rdns</li>
          <li>}</li>
          <li>connection_pool_kw['_socks_options'] = socks_options</li>
          <li>
          </li>
<li>super(SOCKSProxyManager, self).__init__(</li>
          <li>    num_pools, headers, **connection_pool_kw</li>
          <li>)</li>
          <li>
          </li>
<li>self.pool_classes_by_scheme = SOCKSProxyManager.pool_classes_by_scheme</li>
      </ol>
    </code>
  </pre>


  </article>

  <div class="onebox-metadata">
    
    
  </div>

  <div style="clear: both"></div>
</aside>

<p>Please post a working example if you figure this out.</p>
          <p><a href="http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401/5">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401/5</link>
        <pubDate>Tue, 21 Sep 2021 07:57:10 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-12401-5</guid>
        <source url="http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401.rss">Stream Isolation and Python Requests module</source>
      </item>
      <item>
        <title>Stream Isolation and Python Requests module</title>
        <dc:creator><![CDATA[eeL7hohh]]></dc:creator>
        <description><![CDATA[
            <p>Sorry I withdrew my previous comment because I do not think it was replying to yours.</p>
<p>Prior to reacting, thank you kindly for your diligent efforts Patrick! One day maybe I might acquire aptitude in systems administration, operating system’s, etcetera, and loan a hand on Whonix’s undertaking. The work done here is greatly appreciated.</p>
<blockquote>
<p>set a socks user name or see manual quote above</p>
</blockquote>
<p>I have perused the man page you linked and sadly I don’t think I’m all around read enough to comprehend the necessities here. The man page makes reference to <code>tor</code> as an executable or script that has many command line args. One of them is IsolateSOCKSAuth. On the Whonix-WS am I expected to invoke <code>tor</code> with these args for each stream isolated instance?</p>
<blockquote>
<p>(For HTTPTunnelPort connections, this option looks at the Proxy-Authorization and X-Tor-Stream-Isolation headers. On by default; […])</p>
</blockquote>
<p>When this says headers, does it mean in the HTTP header portion? Like when using <code>curl -H "Connection: keep-alive"</code>, or does it mean something else?</p>
<p>I do not expect you to read through this and answer every question. <strong>Is there some more preliminary reading topics I should investigate further</strong>? I don’t think I know enough about SOCKS either, so much of this is going over my head.</p>
          <p><a href="http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401/4">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401/4</link>
        <pubDate>Mon, 20 Sep 2021 23:51:12 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-12401-4</guid>
        <source url="http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401.rss">Stream Isolation and Python Requests module</source>
      </item>
      <item>
        <title>Stream Isolation and Python Requests module</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>“You need to help Tor to help you.”</p>
<p>Tor needs to “know” that it’s another invocation supposed to be stream isolated.</p>
<blockquote>
<p><a href="https://2019.www.torproject.org/docs/tor-manual.html.en" class="inline-onebox">Tor Project: manual</a></p>
</blockquote>
<blockquote>
<blockquote>
<p>IsolateSOCKSAuth</p>
</blockquote>
</blockquote>
<blockquote>
<p>Don’t share circuits with streams for which different SOCKS authentication was provided.</p>
</blockquote>
<blockquote>
<p>(For HTTPTunnelPort connections, this option looks at the Proxy-Authorization and X-Tor-Stream-Isolation headers. On by default; […])</p>
</blockquote>
<p>I.e. set a socks user name or see manual quote above.</p>
<aside class="quote no-group" data-username="eeL7hohh" data-post="1" data-topic="12401">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/letter_avatar_proxy/v4/letter/e/ee59a6/40.png" class="avatar"> eeL7hohh:</div>
<blockquote>
<p>At first I thought maybe I could open socket with 127.0.0.1:9051 and send the SIGNAL NEWNYM to it, but that never worked.</p>
</blockquote>
</aside>
<p>That would be difficult. <code>SIGNAL NEWNYM</code> is a non-blocking command. You’d need a Tor controller and wait for the event when Tor actually finished doing that. Complex and unneeded.</p>
          <p><a href="http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401/2">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401/2</link>
        <pubDate>Mon, 20 Sep 2021 15:11:28 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-12401-2</guid>
        <source url="http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401.rss">Stream Isolation and Python Requests module</source>
      </item>
      <item>
        <title>Stream Isolation and Python Requests module</title>
        <dc:creator><![CDATA[eeL7hohh]]></dc:creator>
        <description><![CDATA[
            <p>I have read the documentation referring to stream isolation support. I have tested it with <code>while true; do curl https://check.torproject.org | grep strong; done;</code></p>
<p>Stream isolation is confirmed by viewing the exit nodes changing for each request. I tried this with the simple requests module from python, but it is <em>always</em> the same IP address. At first I thought maybe I could open socket with 127.0.0.1:9051 and send the SIGNAL NEWNYM to it, but that never worked. Would it be better to keep digging down this path or to just wrap calls to ‘curl’ for when I need to programmatically interact with a website?</p>
          <p><a href="http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401/1</link>
        <pubDate>Sun, 19 Sep 2021 23:51:50 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-12401-1</guid>
        <source url="http://forums.whonix.org/t/stream-isolation-and-python-requests-module/12401.rss">Stream Isolation and Python Requests module</source>
      </item>
  </channel>
</rss>

<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>speeding up whonix.org through caching</title>
    <link>http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733</link>
    <description>Website speed tests:

https://gtmetrix.com

https://developers.google.com/speed/pagespeed/insights/

----

Already using mediawiki caching settings for a long time.

```
## Shared memory settings
$wgMainCacheType = CACHE_MEMCACHED;
$wgMessageCacheType = CACHE_MEMCACHED;
$wgUseLocalMessageCache = true;
$wgParserCacheType = CACHE_MEMCACHED;
$wgUseGzip = true;
$wgEnableSidebarCache = true;
$wgMemCachedServers = array(&quot;127.0.0.1:11211&quot;);
$wgexLingoCacheType = CACHE_MEMCACHED;
$wgLocalisationUpdateDirectory = &quot;$IP/cache&quot;;
## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
$wgCacheDirectory = &quot;$IP/cache&quot;;
$wgParserCacheExpireTime = 2592000;
$wgResourceLoaderMaxage = 2592000;
$wgEnableSidebarCache = true;
#enable file cache - https://www.mediawiki.org/wiki/Manual:File_cache
$wgUseFileCache = true; /* default: false */
$wgFileCacheDirectory = &quot;$IP/cache&quot;;
$wgShowIPinHeader = false;
$wgDisableCounters = true;
## If on, the sidebar navigation links are cached for users with the current language set. This can save a touch of load on a busy site by shaving off extra message lookups.
## However it is also fragile: changing the site configuration, or having a variable $wgArticlePath, can produce broken links that don&#39;t update as expected.
$wgEnableSidebarCache = true;
## testing this cache setting
$wgFileCacheDepth = 0;
#$wgUseSquid = true;
#$wgSquidServers = array( &#39;127.0.0.1:6081&#39; );
#$wgUsePrivateIPs = true;
#$wgSquidMaxage = 1800;
## maybe needed for Varnish but not using Varnish anymore
#$wgCacheEpoch = wfTimestamp( TS_MW, time() - 86400 ); # 60*60*24 = 1 day
$wgInvalidateCacheOnLocalSettingsChange = true;
$wgUseESI = true;
$wgUseETag = true;
```

This already makes use of `memcached`.

----

Can&#39;t use a single nginx server to be a web server and cache (`proxy_cache`) at the same time. It wouldn&#39;t make sense either. Linux is already caching files on the disk. See:

https://www.cachoid.com/blog/2017/03/28/nginx-server-cannot-memory-cache-files/

----

Using nginx `fastcgi_cache` together with mediawiki might make sense, but I always get cache `MISS` and cache isn&#39;t populated. (Works for `whonix.org/index.php` but not needed since currently not using PHP.) No useful web search results. All information is years old.

----

discourse is quite slow. But does not look like a lot can be done.

https://meta.discourse.org/t/does-discourse-have-a-cache/112698/6

----

CDN&#39;s are probably not an option? Because a lot of them block Tor users. (And are USA companies.) And even if not blocking Tor, they&#39;re a permanent &quot;MITM&quot;. It&#39;s not clear if these would actually reduce security but it would probably be criticized.

----

Potential future enhancements:

 https://www.nginx.com/blog/responsive-images-without-headaches-nginx-plus/

https://packages.debian.org/buster/libnginx-mod-http-image-filter

https://www.ngxpagespeed.com/

https://www.modpagespeed.com/doc/download</description>
    <language>en</language>
    <lastBuildDate>Thu, 30 Jan 2020 19:55:05 +0000</lastBuildDate>
    <category>Website</category>
    <atom:link href="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>speeding up whonix.org through caching</title>
        <dc:creator><![CDATA[HulaHoop]]></dc:creator>
        <description><![CDATA[
            <p>Any of the related addons on that page work for you?</p>
          <p><a href="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/8">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/8</link>
        <pubDate>Thu, 30 Jan 2020 19:55:05 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8733-8</guid>
        <source url="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733.rss">speeding up whonix.org through caching</source>
      </item>
      <item>
        <title>speeding up whonix.org through caching</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Does nothing in Tor Browser at all except show <code>?</code> for any speed measurement.</p>
          <p><a href="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/7">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/7</link>
        <pubDate>Thu, 30 Jan 2020 06:37:01 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8733-7</guid>
        <source url="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733.rss">speeding up whonix.org through caching</source>
      </item>
      <item>
        <title>speeding up whonix.org through caching</title>
        <dc:creator><![CDATA[HulaHoop]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="Patrick" data-post="5" data-topic="8733">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p>However, I can imagine that there are scenarios where ngx_pagespeed actually reduces the website speed. Is there any website speed test tool that supports Tor and/or even onions?</p>
</blockquote>
</aside>
<p>No site that i know of, but browser addons can be used as <a href="https://tor.stackexchange.com/questions/14498/page-load-time-add-on-in-tor-browser-bundle-not-working">mentioned</a> on SE.<br>
</p><aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://addons.cdn.mozilla.net/favicon.ico?v=2" class="site-icon" width="16" height="16">
      <a href="https://addons.mozilla.org/en-US/firefox/addon/apptelemetry/" target="_blank">addons.mozilla.org</a>
  </header>
  <article class="onebox-body">
    <img src="https://addons.cdn.mozilla.net/user-media/previews/full/184/184114.png?modified=1543519959" class="thumbnail" width="" height="">

<h3><a href="https://addons.mozilla.org/en-US/firefox/addon/apptelemetry/" target="_blank">app.telemetry Page Speed Monitor – Get this Extension for 🦊 Firefox (en-US)</a></h3>

<p>Download app.telemetry Page Speed Monitor for Firefox. Get the page load times of any web page! app.telemetry Page Speed Monitor shows offset and duration of each step during the page load based on W3C navigation timing.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>
<p></p>
          <p><a href="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/6">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/6</link>
        <pubDate>Wed, 29 Jan 2020 17:25:25 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8733-6</guid>
        <source url="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733.rss">speeding up whonix.org through caching</source>
      </item>
      <item>
        <title>speeding up whonix.org through caching</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>That’s strange. The effects might not be measurable when testing this over Tor since Tor adds too much random delay.</p>
<hr>
<p>off:</p>
<aside class="quote no-group" data-username="Patrick" data-post="3" data-topic="8733">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p><a href="https://www.whonix.org?PageSpeed=off">https://www.whonix.org?PageSpeed=off</a></p>
</blockquote>
</aside>
<p><a href="https://gtmetrix.com/reports/www.whonix.org/m7zYnWl2#video">https://gtmetrix.com/reports/www.whonix.org/m7zYnWl2#video</a> first paint at <code>1.9</code> s.</p>
<hr>
<p>on:</p>
<aside class="quote no-group" data-username="Patrick" data-post="3" data-topic="8733">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="//forums.whonix.org/user_avatar/forums.whonix.org/patrick/40/17_2.png" class="avatar"> Patrick:</div>
<blockquote>
<p><a href="https://www.whonix.org">https://www.whonix.org </a></p>
</blockquote>
</aside>
<p><a href="https://gtmetrix.com/reports/www.whonix.org/3GQu66qV#video">https://gtmetrix.com/reports/www.whonix.org/3GQu66qV#video</a> at <code>1.4</code> s.</p>
<p>The <code>Fully Loaded Time</code> is higher but that is OK due to image lazy loading. More importantly the initial part the user wants to see is visible faster.</p>
<hr>
<p><code>?PageSpeed=off</code><br>
can be appended to any URL. Example:</p>
<ul>
<li><a href="https://www.whonix.org/wiki/Main_Page">https://www.whonix.org/wiki/Main_Page</a></li>
<li><a href="https://www.whonix.org/wiki/Main_Page?PageSpeed=off">https://www.whonix.org/wiki/Main_Page?PageSpeed=off</a></li>
</ul>
<p>ngx_pagespeed is currently active for <a href="http://whonix.org">whonix.org</a> frontpage and wiki only. Phabricator untested and forums is said to not make sense.</p>
<p>This might require a neutral tester. <a href="https://gtmetrix.com">https://gtmetrix.com</a> looks cool and this for sure can use more testing / tuning. Also supports different server locations. And has a compare feature which I should use more.</p>
<p>Testing from London, UK (or any other EU location if there was any) makes more sense than lets say testing from USA or Canada. Otherwise we’re not really testing the server but random latency added by connecting oversee.</p>
<p>Just now created a comparison with these settings:</p>
<p>London, UK<br>
Firefox (Desktop) 54.0.1<br>
2G Mobile (240/200 Kbps, 400ms)<br>
Options: Video</p>
<p><a href="https://gtmetrix.com/compare/KyqBWd1Z/BFBJo6fh" class="onebox" target="_blank">https://gtmetrix.com/compare/KyqBWd1Z/BFBJo6fh</a></p>
<p>6.5 seconds (on) vs 8.5 seconds (off) on a 2G connection according to gtmetrix.</p>
<p>However, I can imagine that there are scenarios where ngx_pagespeed actually reduces the website speed. Is there any website speed test tool that supports Tor and/or even onions?</p>
          <p><a href="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/5">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/5</link>
        <pubDate>Wed, 29 Jan 2020 15:32:13 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8733-5</guid>
        <source url="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733.rss">speeding up whonix.org through caching</source>
      </item>
      <item>
        <title>speeding up whonix.org through caching</title>
        <dc:creator><![CDATA[HulaHoop]]></dc:creator>
        <description><![CDATA[
            <p>PageSpeed off is so much faster</p>
          <p><a href="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/4">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/4</link>
        <pubDate>Wed, 29 Jan 2020 14:41:47 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8733-4</guid>
        <source url="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733.rss">speeding up whonix.org through caching</source>
      </item>
      <item>
        <title>speeding up whonix.org through caching</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p><code>ngx_pagespeed</code> was implemented.</p>
<p><code>?PageSpeedFilters=+debug</code><br>
or<br>
<code>?PageSpeed=off</code><br>
can be added anywhere. Examples:</p>
<ul>
<li><a href="https://www.whonix.org">https://www.whonix.org</a></li>
<li><a href="https://www.whonix.org?PageSpeedFilters=+debug">https://www.whonix.org?PageSpeedFilters=+debug</a></li>
<li><a href="https://www.whonix.org?PageSpeed=off">https://www.whonix.org?PageSpeed=off</a></li>
</ul>
          <p><a href="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/3">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/3</link>
        <pubDate>Tue, 28 Jan 2020 15:28:08 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8733-3</guid>
        <source url="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733.rss">speeding up whonix.org through caching</source>
      </item>
      <item>
        <title>speeding up whonix.org through caching</title>
        <dc:creator><![CDATA[HulaHoop]]></dc:creator>
        <description><![CDATA[
            <p>Discourse is described as a JS app rather than a website with html/css so traditional caching methods like Varnish are useless.</p>
<p>Some suggestions were looking into optimizing the Redis database loads, disabling forced image loading, implementing lazy loading</p>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://d11a6trkgmumsb.cloudfront.net/optimized/3X/b/3/b33be9538df3547fcf9d1a51a4637d77392ac6f9_2_32x32.png" class="site-icon" width="32" height="32">
      <a href="https://meta.discourse.org/t/how-to-increase-site-speed/60791/30" target="_blank" title="11:47PM - 09 January 2018">Discourse Meta – 9 Jan 18</a>
  </header>
  <article class="onebox-body">
    <div class="aspect-image" style="--aspect-ratio:690/370;"><img src="https://d11a6trkgmumsb.cloudfront.net/optimized/3X/9/e/9e4593c100805d0670452a9388f71d389f0c08b4_2_690x370.png" class="thumbnail"></div>

<h3><a href="https://meta.discourse.org/t/how-to-increase-site-speed/60791/30" target="_blank">How to increase site speed</a></h3>

<p>Hi,  I reached this thread looking for improving performance and found that meta.discourse.org  does have a huge payload too:  1 single JS file stands out with size 1.69MB    The same application js file is loaded on my discourse install too:    I...</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

          <p><a href="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/2">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/2</link>
        <pubDate>Tue, 07 Jan 2020 16:29:42 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8733-2</guid>
        <source url="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733.rss">speeding up whonix.org through caching</source>
      </item>
      <item>
        <title>speeding up whonix.org through caching</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p>Website speed tests:</p>
<p><a href="https://gtmetrix.com" class="onebox" target="_blank">https://gtmetrix.com</a></p>
<p><a href="https://developers.google.com/speed/pagespeed/insights/" class="onebox" target="_blank">https://developers.google.com/speed/pagespeed/insights/</a></p>
<hr>
<p>Already using mediawiki caching settings for a long time.</p>
<pre><code class="lang-auto">## Shared memory settings
$wgMainCacheType = CACHE_MEMCACHED;
$wgMessageCacheType = CACHE_MEMCACHED;
$wgUseLocalMessageCache = true;
$wgParserCacheType = CACHE_MEMCACHED;
$wgUseGzip = true;
$wgEnableSidebarCache = true;
$wgMemCachedServers = array("127.0.0.1:11211");
$wgexLingoCacheType = CACHE_MEMCACHED;
$wgLocalisationUpdateDirectory = "$IP/cache";
## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
$wgCacheDirectory = "$IP/cache";
$wgParserCacheExpireTime = 2592000;
$wgResourceLoaderMaxage = 2592000;
$wgEnableSidebarCache = true;
#enable file cache - https://www.mediawiki.org/wiki/Manual:File_cache
$wgUseFileCache = true; /* default: false */
$wgFileCacheDirectory = "$IP/cache";
$wgShowIPinHeader = false;
$wgDisableCounters = true;
## If on, the sidebar navigation links are cached for users with the current language set. This can save a touch of load on a busy site by shaving off extra message lookups.
## However it is also fragile: changing the site configuration, or having a variable $wgArticlePath, can produce broken links that don't update as expected.
$wgEnableSidebarCache = true;
## testing this cache setting
$wgFileCacheDepth = 0;
#$wgUseSquid = true;
#$wgSquidServers = array( '127.0.0.1:6081' );
#$wgUsePrivateIPs = true;
#$wgSquidMaxage = 1800;
## maybe needed for Varnish but not using Varnish anymore
#$wgCacheEpoch = wfTimestamp( TS_MW, time() - 86400 ); # 60*60*24 = 1 day
$wgInvalidateCacheOnLocalSettingsChange = true;
$wgUseESI = true;
$wgUseETag = true;
</code></pre>
<p>This already makes use of <code>memcached</code>.</p>
<hr>
<p>Can’t use a single nginx server to be a web server and cache (<code>proxy_cache</code>) at the same time. It wouldn’t make sense either. Linux is already caching files on the disk. See:</p>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://www.cachoid.com/blog/wp-content/uploads/2017/01/cachoid-logo-white-e1484445643790.png" class="site-icon" width="16" height="16">
      <a href="https://www.cachoid.com/blog/2017/03/28/nginx-server-cannot-memory-cache-files/" target="_blank" title="06:59PM - 28 March 2017">Cachoid – 28 Mar 17</a>
  </header>
  <article class="onebox-body">
    <img src="https://www.cachoid.com/blog/wp-content/uploads/2017/03/inodedpagecache.jpg" class="thumbnail" width="" height="">

<h3><a href="https://www.cachoid.com/blog/2017/03/28/nginx-server-cannot-memory-cache-files/" target="_blank">Nginx server cannot memory-cache files - Cachoid</a></h3>

<p>While Nginx is a mature HTTP server, it lacks a native option that helps to memory-cache files and page objects like Apache's mod_cache.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<hr>
<p>Using nginx <code>fastcgi_cache</code> together with mediawiki might make sense, but I always get cache <code>MISS</code> and cache isn’t populated. (Works for <code>whonix.org/index.php</code> but not needed since currently not using PHP.) No useful web search results. All information is years old.</p>
<hr>
<p>discourse is quite slow. But does not look like a lot can be done.</p>
<aside class="onebox whitelistedgeneric">
  <header class="source">
      <img src="https://d11a6trkgmumsb.cloudfront.net/optimized/3X/b/3/b33be9538df3547fcf9d1a51a4637d77392ac6f9_2_32x32.png" class="site-icon" width="16" height="16">
      <a href="https://meta.discourse.org/t/does-discourse-have-a-cache/112698/6" target="_blank" title="02:54AM - 28 March 2019">Discourse Meta – 28 Mar 19</a>
  </header>
  <article class="onebox-body">
    <img src="https://d11a6trkgmumsb.cloudfront.net/original/3X/e/c/ecc92a52ee7353e03d5c0d1ea6521ce4541d9c25.png" class="thumbnail" width="" height="">

<h3><a href="https://meta.discourse.org/t/does-discourse-have-a-cache/112698/6" target="_blank">Does discourse have a cache?</a></h3>

<p>Yep, very. There’s nothing for Varnish to accelerate.  Stop thinking about Discourse as a website and start viewing it as an application. The use cases are very different.</p>


  </article>
  <div class="onebox-metadata">
    
    
  </div>
  <div style="clear: both"></div>
</aside>

<hr>
<p>CDN’s are probably not an option? Because a lot of them block Tor users. (And are USA companies.) And even if not blocking Tor, they’re a permanent “MITM”. It’s not clear if these would actually reduce security but it would probably be criticized.</p>
<hr>
<p>Potential future enhancements:</p>
<p><a href="https://www.nginx.com/blog/responsive-images-without-headaches-nginx-plus/">https://www.nginx.com/blog/responsive-images-without-headaches-nginx-plus/</a></p>
<p><a href="https://packages.debian.org/buster/libnginx-mod-http-image-filter" class="onebox" target="_blank">https://packages.debian.org/buster/libnginx-mod-http-image-filter</a></p>
<p><a href="https://www.ngxpagespeed.com/" class="onebox" target="_blank">https://www.ngxpagespeed.com/</a></p>
<p><a href="https://www.modpagespeed.com/doc/download" class="onebox" target="_blank">https://www.modpagespeed.com/doc/download</a></p>
          <p><a href="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733/1</link>
        <pubDate>Tue, 07 Jan 2020 13:10:25 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8733-1</guid>
        <source url="http://forums.whonix.org/t/speeding-up-whonix-org-through-caching/8733.rss">speeding up whonix.org through caching</source>
      </item>
  </channel>
</rss>

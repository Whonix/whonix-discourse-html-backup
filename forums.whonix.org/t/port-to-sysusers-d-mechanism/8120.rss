<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Port to sysusers.d mechanism?</title>
    <link>http://forums.whonix.org/t/port-to-sysusers-d-mechanism/8120</link>
    <description>`/usr/lib/sysusers.d/*.conf`

https://www.freedesktop.org/software/systemd/man/sysusers.d.html

Useful as per

http://0pointer.net/blog/projects/stateless.html

&gt; A new tool systemd-sysusers as been added. It introduces a new drop-in directory /usr/lib/sysusers.d/. Minimal descriptions of necessary system users and groups can be placed there. Whenever the tool is invoked it will create these users in /etc/passwd and /etc/group should they be missing. It is only suitable for creating system users and groups, not for normal users. It will write to the files directly via the appropriate glibc APIs, which is the right thing to do for system users. (For normal users no such APIs exist, as the users might be stored centrally on LDAP or suchlike, and they are out of focus for our usecase.) The major benefit of this tool is that system user definition can happen offline: a package simply has to drop in a new file to register a user. This makes system user registration declarative instead of imperative -- which is the way how system users are traditionally created from RPM or DEB installation scripts. By being declarative it is easy to replicate the users on next boot to a number of system instances.
&gt; 
&gt; To make this new tool interesting for packaging scripts we make it easy to alternatively invoke it during package installation time, thus being a good alternative to invocations of useradd -r and groupadd -r.
&gt; 
&gt; Some OS designs use a static, fixed user/group list stored in /usr as primary database for users/groups, which fixed UID/GID mappings. While this works for specific systems, this cannot cover the general purpose. As the UID/GID range for system users/groups is very small (only containing 998 users and groups on most systems), the best has to be made from this space and only UIDs/GIDs necessary on the specific system should be allocated. This means allocation has to be dynamic and adjust to what is necessary.
&gt; 
&gt; Also note that this tool has one very nice feature: in addition to fully dynamic, and fully static UID/GID assignment for the users to create, it supports reading UID/GID numbers off existing files in /usr, so that vendors can make use of setuid/setgid binaries owned by specific users.

I like the declarative approach rather than running scripts / commands since it is less opaque.

----

In Debian, not used much yet:

https://packages.debian.org/search?searchon=contents&amp;keywords=sysusers&amp;mode=filename&amp;suite=testing&amp;arch=any</description>
    <language>en</language>
    <lastBuildDate>Sun, 15 Sep 2019 09:22:38 +0000</lastBuildDate>
    <category>Development</category>
    <atom:link href="http://forums.whonix.org/t/port-to-sysusers-d-mechanism/8120.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Port to sysusers.d mechanism?</title>
        <dc:creator><![CDATA[Patrick]]></dc:creator>
        <description><![CDATA[
            <p><code>/usr/lib/sysusers.d/*.conf</code></p>
<p><a href="https://www.freedesktop.org/software/systemd/man/sysusers.d.html" class="onebox" target="_blank" rel="nofollow noopener">https://www.freedesktop.org/software/systemd/man/sysusers.d.html</a></p>
<p>Useful as per</p>
<p><a href="http://0pointer.net/blog/projects/stateless.html" class="onebox" target="_blank" rel="nofollow noopener">http://0pointer.net/blog/projects/stateless.html</a></p>
<blockquote>
<p>A new tool systemd-sysusers as been added. It introduces a new drop-in directory /usr/lib/sysusers.d/. Minimal descriptions of necessary system users and groups can be placed there. Whenever the tool is invoked it will create these users in /etc/passwd and /etc/group should they be missing. It is only suitable for creating system users and groups, not for normal users. It will write to the files directly via the appropriate glibc APIs, which is the right thing to do for system users. (For normal users no such APIs exist, as the users might be stored centrally on LDAP or suchlike, and they are out of focus for our usecase.) The major benefit of this tool is that system user definition can happen offline: a package simply has to drop in a new file to register a user. This makes system user registration declarative instead of imperative â€“ which is the way how system users are traditionally created from RPM or DEB installation scripts. By being declarative it is easy to replicate the users on next boot to a number of system instances.</p>
<p>To make this new tool interesting for packaging scripts we make it easy to alternatively invoke it during package installation time, thus being a good alternative to invocations of useradd -r and groupadd -r.</p>
<p>Some OS designs use a static, fixed user/group list stored in /usr as primary database for users/groups, which fixed UID/GID mappings. While this works for specific systems, this cannot cover the general purpose. As the UID/GID range for system users/groups is very small (only containing 998 users and groups on most systems), the best has to be made from this space and only UIDs/GIDs necessary on the specific system should be allocated. This means allocation has to be dynamic and adjust to what is necessary.</p>
<p>Also note that this tool has one very nice feature: in addition to fully dynamic, and fully static UID/GID assignment for the users to create, it supports reading UID/GID numbers off existing files in /usr, so that vendors can make use of setuid/setgid binaries owned by specific users.</p>
</blockquote>
<p>I like the declarative approach rather than running scripts / commands since it is less opaque.</p>
<hr>
<p>In Debian, not used much yet:</p>
<p><a href="https://packages.debian.org/search?searchon=contents&amp;keywords=sysusers&amp;mode=filename&amp;suite=testing&amp;arch=any" class="onebox" target="_blank" rel="nofollow noopener">https://packages.debian.org/search?searchon=contents&amp;keywords=sysusers&amp;mode=filename&amp;suite=testing&amp;arch=any</a></p>
          <p><a href="http://forums.whonix.org/t/port-to-sysusers-d-mechanism/8120/1">Read full topic</a></p>
        ]]></description>
        <link>http://forums.whonix.org/t/port-to-sysusers-d-mechanism/8120/1</link>
        <pubDate>Sun, 15 Sep 2019 09:22:38 +0000</pubDate>
        <guid isPermaLink="false">forums.whonix.org-post-8120-1</guid>
        <source url="http://forums.whonix.org/t/port-to-sysusers-d-mechanism/8120.rss">Port to sysusers.d mechanism?</source>
      </item>
  </channel>
</rss>
